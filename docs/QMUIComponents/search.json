{"Functions.html#/c:@F@QMUIImageWriteToSavedPhotosAlbumWithAlbumAssetsGroup":{"name":"QMUIImageWriteToSavedPhotosAlbumWithAlbumAssetsGroup","abstract":"<p>保存图片到指定相册（传入 UIImage）</p>"},"Functions.html#/c:@F@QMUISaveImageAtPathToSavedPhotosAlbumWithAlbumAssetsGroup":{"name":"QMUISaveImageAtPathToSavedPhotosAlbumWithAlbumAssetsGroup","abstract":"<p>保存图片到指定相册（传入图片路径）</p>"},"Functions.html#/c:@F@QMUISaveVideoAtPathToSavedPhotosAlbumWithAlbumAssetsGroup":{"name":"QMUISaveVideoAtPathToSavedPhotosAlbumWithAlbumAssetsGroup","abstract":"<p>保存视频到指定相册</p>"},"Functions.html#/c:QMUIEasings.h@F@QMUI_Linear":{"name":"QMUI_Linear","abstract":"<p><a href=\"https://easings.net\">https://easings.net</a>"},"Functions.html#/c:QMUIEasings.h@F@QMUI_EaseInSine":{"name":"QMUI_EaseInSine","abstract":"<p>Undocumented</p>"},"Functions.html#/c:QMUIEasings.h@F@QMUI_EaseOutSine":{"name":"QMUI_EaseOutSine","abstract":"<p>Undocumented</p>"},"Functions.html#/c:QMUIEasings.h@F@QMUI_EaseInOutSine":{"name":"QMUI_EaseInOutSine","abstract":"<p>Undocumented</p>"},"Functions.html#/c:QMUIEasings.h@F@QMUI_EaseInQuad":{"name":"QMUI_EaseInQuad","abstract":"<p>Undocumented</p>"},"Functions.html#/c:QMUIEasings.h@F@QMUI_EaseOutQuad":{"name":"QMUI_EaseOutQuad","abstract":"<p>Undocumented</p>"},"Functions.html#/c:QMUIEasings.h@F@QMUI_EaseInOutQuad":{"name":"QMUI_EaseInOutQuad","abstract":"<p>Undocumented</p>"},"Functions.html#/c:QMUIEasings.h@F@QMUI_EaseInCubic":{"name":"QMUI_EaseInCubic","abstract":"<p>Undocumented</p>"},"Functions.html#/c:QMUIEasings.h@F@QMUI_EaseOutCubic":{"name":"QMUI_EaseOutCubic","abstract":"<p>Undocumented</p>"},"Functions.html#/c:QMUIEasings.h@F@QMUI_EaseInOutCubic":{"name":"QMUI_EaseInOutCubic","abstract":"<p>Undocumented</p>"},"Functions.html#/c:QMUIEasings.h@F@QMUI_EaseInQuart":{"name":"QMUI_EaseInQuart","abstract":"<p>Undocumented</p>"},"Functions.html#/c:QMUIEasings.h@F@QMUI_EaseOutQuart":{"name":"QMUI_EaseOutQuart","abstract":"<p>Undocumented</p>"},"Functions.html#/c:QMUIEasings.h@F@QMUI_EaseInOutQuart":{"name":"QMUI_EaseInOutQuart","abstract":"<p>Undocumented</p>"},"Functions.html#/c:QMUIEasings.h@F@QMUI_EaseInQuint":{"name":"QMUI_EaseInQuint","abstract":"<p>Undocumented</p>"},"Functions.html#/c:QMUIEasings.h@F@QMUI_EaseOutQuint":{"name":"QMUI_EaseOutQuint","abstract":"<p>Undocumented</p>"},"Functions.html#/c:QMUIEasings.h@F@QMUI_EaseInOutQuint":{"name":"QMUI_EaseInOutQuint","abstract":"<p>Undocumented</p>"},"Functions.html#/c:QMUIEasings.h@F@QMUI_EaseInExpo":{"name":"QMUI_EaseInExpo","abstract":"<p>Undocumented</p>"},"Functions.html#/c:QMUIEasings.h@F@QMUI_EaseOutExpo":{"name":"QMUI_EaseOutExpo","abstract":"<p>Undocumented</p>"},"Functions.html#/c:QMUIEasings.h@F@QMUI_EaseInOutExpo":{"name":"QMUI_EaseInOutExpo","abstract":"<p>Undocumented</p>"},"Functions.html#/c:QMUIEasings.h@F@QMUI_EaseInCirc":{"name":"QMUI_EaseInCirc","abstract":"<p>Undocumented</p>"},"Functions.html#/c:QMUIEasings.h@F@QMUI_EaseOutCirc":{"name":"QMUI_EaseOutCirc","abstract":"<p>Undocumented</p>"},"Functions.html#/c:QMUIEasings.h@F@QMUI_EaseInOutCirc":{"name":"QMUI_EaseInOutCirc","abstract":"<p>Undocumented</p>"},"Functions.html#/c:QMUIEasings.h@F@QMUI_EaseInBack":{"name":"QMUI_EaseInBack","abstract":"<p>Undocumented</p>"},"Functions.html#/c:QMUIEasings.h@F@QMUI_EaseOutBack":{"name":"QMUI_EaseOutBack","abstract":"<p>Undocumented</p>"},"Functions.html#/c:QMUIEasings.h@F@QMUI_EaseInOutBack":{"name":"QMUI_EaseInOutBack","abstract":"<p>Undocumented</p>"},"Functions.html#/c:QMUIEasings.h@F@QMUI_EaseInElastic":{"name":"QMUI_EaseInElastic","abstract":"<p>Undocumented</p>"},"Functions.html#/c:QMUIEasings.h@F@QMUI_EaseOutElastic":{"name":"QMUI_EaseOutElastic","abstract":"<p>Undocumented</p>"},"Functions.html#/c:QMUIEasings.h@F@QMUI_EaseInOutElastic":{"name":"QMUI_EaseInOutElastic","abstract":"<p>Undocumented</p>"},"Functions.html#/c:QMUIEasings.h@F@QMUI_EaseOutBounce":{"name":"QMUI_EaseOutBounce","abstract":"<p>Undocumented</p>"},"Functions.html#/c:QMUIEasings.h@F@QMUI_EaseInBounce":{"name":"QMUI_EaseInBounce","abstract":"<p>Undocumented</p>"},"Functions.html#/c:QMUIEasings.h@F@QMUI_EaseInOutBounce":{"name":"QMUI_EaseInOutBounce","abstract":"<p>Undocumented</p>"},"Functions.html#/c:QMUIEasings.h@F@QMUI_EaseSpring":{"name":"QMUI_EaseSpring","abstract":"<p>Undocumented</p>"},"Type%20Definitions.html#/c:QMUIWindowSizeMonitor.h@T@QMUIWindowSizeObserverHandler":{"name":"QMUIWindowSizeObserverHandler","abstract":"<p>Undocumented</p>"},"Type%20Definitions.html#/c:QMUIAssetsManager.h@T@QMUIWriteAssetCompletionBlock":{"name":"QMUIWriteAssetCompletionBlock","abstract":"<p>Undocumented</p>"},"Protocols/QMUITextViewDelegate.html#/c:objc(pl)QMUITextViewDelegate(im)textView:newHeightAfterTextChanged:":{"name":"-textView:newHeightAfterTextChanged:","abstract":"<p>输入框高度发生变化时的回调，当实现了这个方法后，文字输入过程中就会不断去计算输入框新内容的高度，并通过这个方法通知到 delegate</p>","parent_name":"QMUITextViewDelegate"},"Protocols/QMUITextViewDelegate.html#/c:objc(pl)QMUITextViewDelegate(im)textViewShouldReturn:":{"name":"-textViewShouldReturn:","abstract":"<p>用户点击键盘的 return 按钮时的回调（return 按钮本质上是输入换行符“\\n”）</p>","parent_name":"QMUITextViewDelegate"},"Protocols/QMUITextViewDelegate.html#/c:objc(pl)QMUITextViewDelegate(im)textView:didPreventTextChangeInRange:replacementText:":{"name":"-textView:didPreventTextChangeInRange:replacementText:","abstract":"<p>配合 <code>maximumTextLength</code> 属性使用，在输入文字超过限制时被调用。例如如果你的输入框在按下键盘“Done”按键时做一些发送操作，就可以在这个方法里判断 [replacementText isEqualToString:@&ldquo;\\n&rdquo;]。</p>","parent_name":"QMUITextViewDelegate"},"Protocols/QMUIKeyboardManagerDelegate.html#/c:objc(pl)QMUIKeyboardManagerDelegate(im)keyboardWillShowWithUserInfo:":{"name":"-keyboardWillShowWithUserInfo:","abstract":"<p>键盘即将显示</p>","parent_name":"QMUIKeyboardManagerDelegate"},"Protocols/QMUIKeyboardManagerDelegate.html#/c:objc(pl)QMUIKeyboardManagerDelegate(im)keyboardWillHideWithUserInfo:":{"name":"-keyboardWillHideWithUserInfo:","abstract":"<p>键盘即将隐藏</p>","parent_name":"QMUIKeyboardManagerDelegate"},"Protocols/QMUIKeyboardManagerDelegate.html#/c:objc(pl)QMUIKeyboardManagerDelegate(im)keyboardWillChangeFrameWithUserInfo:":{"name":"-keyboardWillChangeFrameWithUserInfo:","abstract":"<p>键盘frame即将发生变化。","parent_name":"QMUIKeyboardManagerDelegate"},"Protocols/QMUIKeyboardManagerDelegate.html#/c:objc(pl)QMUIKeyboardManagerDelegate(im)keyboardDidShowWithUserInfo:":{"name":"-keyboardDidShowWithUserInfo:","abstract":"<p>键盘已经显示</p>","parent_name":"QMUIKeyboardManagerDelegate"},"Protocols/QMUIKeyboardManagerDelegate.html#/c:objc(pl)QMUIKeyboardManagerDelegate(im)keyboardDidHideWithUserInfo:":{"name":"-keyboardDidHideWithUserInfo:","abstract":"<p>键盘已经隐藏</p>","parent_name":"QMUIKeyboardManagerDelegate"},"Protocols/QMUIKeyboardManagerDelegate.html#/c:objc(pl)QMUIKeyboardManagerDelegate(im)keyboardDidChangeFrameWithUserInfo:":{"name":"-keyboardDidChangeFrameWithUserInfo:","abstract":"<p>键盘frame已经发生变化。</p>","parent_name":"QMUIKeyboardManagerDelegate"},"Protocols/QMUIEmptyViewLoadingViewProtocol.html#/c:objc(pl)QMUIEmptyViewLoadingViewProtocol(im)startAnimating":{"name":"-startAnimating","abstract":"<p>Undocumented</p>","parent_name":"QMUIEmptyViewLoadingViewProtocol"},"Protocols/QMUIMoreOperationControllerDelegate.html#/c:objc(pl)QMUIMoreOperationControllerDelegate(im)willPresentMoreOperationController:":{"name":"-willPresentMoreOperationController:","abstract":"<p>即将显示操作面板</p>","parent_name":"QMUIMoreOperationControllerDelegate"},"Protocols/QMUIMoreOperationControllerDelegate.html#/c:objc(pl)QMUIMoreOperationControllerDelegate(im)didPresentMoreOperationController:":{"name":"-didPresentMoreOperationController:","abstract":"<p>已经显示操作面板</p>","parent_name":"QMUIMoreOperationControllerDelegate"},"Protocols/QMUIMoreOperationControllerDelegate.html#/c:objc(pl)QMUIMoreOperationControllerDelegate(im)willDismissMoreOperationController:cancelled:":{"name":"-willDismissMoreOperationController:cancelled:","abstract":"<p>即将降下操作面板，cancelled参数是用来区分是否触发了maskView或者cancelButton按钮降下面板还是手动调用hide方法来降下面板。</p>","parent_name":"QMUIMoreOperationControllerDelegate"},"Protocols/QMUIMoreOperationControllerDelegate.html#/c:objc(pl)QMUIMoreOperationControllerDelegate(im)didDismissMoreOperationController:cancelled:":{"name":"-didDismissMoreOperationController:cancelled:","abstract":"<p>已经降下操作面板，cancelled参数是用来区分是否触发了maskView或者cancelButton按钮降下面板还是手动调用hide方法来降下面板。</p>","parent_name":"QMUIMoreOperationControllerDelegate"},"Protocols/QMUIMoreOperationControllerDelegate.html#/c:objc(pl)QMUIMoreOperationControllerDelegate(im)moreOperationController:didSelectItemView:":{"name":"-moreOperationController:didSelectItemView:","abstract":"<p>itemView 点击事件，可以与 itemView.handler 共存，可通过 itemView.tag 或者 itemView.indexPath 来区分不同的 itemView</p>","parent_name":"QMUIMoreOperationControllerDelegate"},"Protocols/QMUIPopupMenuItemProtocol.html#/c:objc(pl)QMUIPopupMenuItemProtocol(py)title":{"name":"title","abstract":"<p>item 里的文字</p>","parent_name":"QMUIPopupMenuItemProtocol"},"Protocols/QMUIPopupMenuItemProtocol.html#/c:objc(pl)QMUIPopupMenuItemProtocol(py)height":{"name":"height","abstract":"<p>item 的高度，默认为 -1。小于 0 的值均表示高度以 QMUIPopupMenuView.itemHeight 为准，当需要给某个 item 指定特定高度时才需要用这个 height 属性。</p>","parent_name":"QMUIPopupMenuItemProtocol"},"Protocols/QMUIPopupMenuItemProtocol.html#/c:objc(pl)QMUIPopupMenuItemProtocol(py)handler":{"name":"handler","abstract":"<p>item 被点击时的事件处理，需要在内部自行隐藏 QMUIPopupMenuView。</p>","parent_name":"QMUIPopupMenuItemProtocol"},"Protocols/QMUIPopupMenuItemProtocol.html#/c:objc(pl)QMUIPopupMenuItemProtocol(py)menuView":{"name":"menuView","abstract":"<p>当前 item 所在的 QMUIPopupMenuView 的引用，只有在 item 被添加到菜单之后才有值。</p>","parent_name":"QMUIPopupMenuItemProtocol"},"Protocols/QMUIPopupMenuItemProtocol.html#/c:objc(pl)QMUIPopupMenuItemProtocol(im)updateAppearance":{"name":"-updateAppearance","abstract":"<p>item 被添加到 menuView 之后（也即 menuView 属性有值了）会被调用，可在这个方法里更新 item 的样式（因为某些样式可能需要从 menuView 那边读取）</p>","parent_name":"QMUIPopupMenuItemProtocol"},"Protocols/QMUITableViewDelegate.html#/c:objc(pl)QMUITableViewDelegate(im)tableView:touchesShouldCancelInContentView:":{"name":"-tableView:touchesShouldCancelInContentView:","abstract":"<p>自定义要在<i>- (BOOL)touchesShouldCancelInContentView:(UIView *)view</i>内的逻辑<br/>","parent_name":"QMUITableViewDelegate"},"Protocols/QMUICellHeightKeyCache_UITableViewDelegate.html#/c:objc(pl)QMUICellHeightKeyCache_UITableViewDelegate(im)qmui_tableView:cacheKeyForRowAtIndexPath:":{"name":"-qmui_tableView:cacheKeyForRowAtIndexPath:","abstract":"<p>Undocumented</p>","parent_name":"QMUICellHeightKeyCache_UITableViewDelegate"},"Protocols/QMUICellHeightCache_UITableViewDataSource.html#/c:objc(pl)QMUICellHeightCache_UITableViewDataSource(im)qmui_tableView:cellWithIdentifier:":{"name":"-qmui_tableView:cellWithIdentifier:","abstract":"<p>搭配 QMUICellHeightCache 使用，对于 UITableView 而言如果要用 QMUICellHeightCache 那套高度计算方式，则必须实现这个方法</p>","parent_name":"QMUICellHeightCache_UITableViewDataSource"},"Protocols/QMUIImagePickerViewControllerDelegate.html#/c:objc(pl)QMUIImagePickerViewControllerDelegate(im)imagePickerPreviewViewControllerForImagePickerViewController:":{"name":"-imagePickerPreviewViewControllerForImagePickerViewController:","abstract":"<p>创建一个 ImagePickerPreviewViewController 用于预览图片</p>","parent_name":"QMUIImagePickerViewControllerDelegate"},"Protocols/QMUIImagePickerViewControllerDelegate.html#/c:objc(pl)QMUIImagePickerViewControllerDelegate(im)albumSortTypeForImagePickerViewController:":{"name":"-albumSortTypeForImagePickerViewController:","abstract":"<p>控制照片的排序，若不实现，默认为 QMUIAlbumSortTypePositive</p>","parent_name":"QMUIImagePickerViewControllerDelegate"},"Protocols/QMUIImagePickerViewControllerDelegate.html#/c:objc(pl)QMUIImagePickerViewControllerDelegate(im)imagePickerViewController:didFinishPickingImageWithImagesAssetArray:":{"name":"-imagePickerViewController:didFinishPickingImageWithImagesAssetArray:","abstract":"<p>多选模式下选择图片完毕后被调用（点击 sendButton 后被调用），单选模式下没有底部发送按钮，所以也不会走到这个delegate</p>","parent_name":"QMUIImagePickerViewControllerDelegate"},"Protocols/QMUIImagePickerViewControllerDelegate.html#/c:objc(pl)QMUIImagePickerViewControllerDelegate(im)imagePickerViewController:didSelectImageWithImagesAsset:afterImagePickerPreviewViewControllerUpdate:":{"name":"-imagePickerViewController:didSelectImageWithImagesAsset:afterImagePickerPreviewViewControllerUpdate:","abstract":"<p>cell 被点击时调用（先调用这个接口，然后才去走预览大图的逻辑），注意这并非指选中 checkbox 事件</p>","parent_name":"QMUIImagePickerViewControllerDelegate"},"Protocols/QMUIImagePickerViewControllerDelegate.html#/c:objc(pl)QMUIImagePickerViewControllerDelegate(im)imagePickerViewController:shouldCheckImageAtIndex:":{"name":"-imagePickerViewController:shouldCheckImageAtIndex:","abstract":"<p>是否能够选中 checkbox</p>","parent_name":"QMUIImagePickerViewControllerDelegate"},"Protocols/QMUIImagePickerViewControllerDelegate.html#/c:objc(pl)QMUIImagePickerViewControllerDelegate(im)imagePickerViewController:willCheckImageAtIndex:":{"name":"-imagePickerViewController:willCheckImageAtIndex:","abstract":"<p>即将选中 checkbox 时调用</p>","parent_name":"QMUIImagePickerViewControllerDelegate"},"Protocols/QMUIImagePickerViewControllerDelegate.html#/c:objc(pl)QMUIImagePickerViewControllerDelegate(im)imagePickerViewController:didCheckImageAtIndex:":{"name":"-imagePickerViewController:didCheckImageAtIndex:","abstract":"<p>选中了 checkbox 之后调用</p>","parent_name":"QMUIImagePickerViewControllerDelegate"},"Protocols/QMUIImagePickerViewControllerDelegate.html#/c:objc(pl)QMUIImagePickerViewControllerDelegate(im)imagePickerViewController:willUncheckImageAtIndex:":{"name":"-imagePickerViewController:willUncheckImageAtIndex:","abstract":"<p>即将取消选中 checkbox 时调用</p>","parent_name":"QMUIImagePickerViewControllerDelegate"},"Protocols/QMUIImagePickerViewControllerDelegate.html#/c:objc(pl)QMUIImagePickerViewControllerDelegate(im)imagePickerViewController:didUncheckImageAtIndex:":{"name":"-imagePickerViewController:didUncheckImageAtIndex:","abstract":"<p>取消了 checkbox 选中之后调用</p>","parent_name":"QMUIImagePickerViewControllerDelegate"},"Protocols/QMUIImagePickerViewControllerDelegate.html#/c:objc(pl)QMUIImagePickerViewControllerDelegate(im)imagePickerViewControllerDidCancel:":{"name":"-imagePickerViewControllerDidCancel:","abstract":"<p>取消选择图片后被调用</p>","parent_name":"QMUIImagePickerViewControllerDelegate"},"Protocols/QMUIImagePickerViewControllerDelegate.html#/c:objc(pl)QMUIImagePickerViewControllerDelegate(im)imagePickerViewControllerWillStartLoading:":{"name":"-imagePickerViewControllerWillStartLoading:","abstract":"<p>即将需要显示 Loading 时调用</p>","parent_name":"QMUIImagePickerViewControllerDelegate"},"Protocols/QMUIImagePickerViewControllerDelegate.html#/c:objc(pl)QMUIImagePickerViewControllerDelegate(im)imagePickerViewControllerDidFinishLoading:":{"name":"-imagePickerViewControllerDidFinishLoading:","abstract":"<p>即将需要隐藏 Loading 时调用</p>","parent_name":"QMUIImagePickerViewControllerDelegate"},"Protocols/QMUIImagePickerPreviewViewControllerDelegate.html#/c:objc(pl)QMUIImagePickerPreviewViewControllerDelegate(im)imagePickerPreviewViewControllerDidCancel:":{"name":"-imagePickerPreviewViewControllerDidCancel:","abstract":"<p>取消选择图片后被调用</p>","parent_name":"QMUIImagePickerPreviewViewControllerDelegate"},"Protocols/QMUIImagePickerPreviewViewControllerDelegate.html#/c:objc(pl)QMUIImagePickerPreviewViewControllerDelegate(im)imagePickerPreviewViewController:willCheckImageAtIndex:":{"name":"-imagePickerPreviewViewController:willCheckImageAtIndex:","abstract":"<p>即将选中图片</p>","parent_name":"QMUIImagePickerPreviewViewControllerDelegate"},"Protocols/QMUIImagePickerPreviewViewControllerDelegate.html#/c:objc(pl)QMUIImagePickerPreviewViewControllerDelegate(im)imagePickerPreviewViewController:didCheckImageAtIndex:":{"name":"-imagePickerPreviewViewController:didCheckImageAtIndex:","abstract":"<p>已经选中图片</p>","parent_name":"QMUIImagePickerPreviewViewControllerDelegate"},"Protocols/QMUIImagePickerPreviewViewControllerDelegate.html#/c:objc(pl)QMUIImagePickerPreviewViewControllerDelegate(im)imagePickerPreviewViewController:willUncheckImageAtIndex:":{"name":"-imagePickerPreviewViewController:willUncheckImageAtIndex:","abstract":"<p>即将取消选中图片</p>","parent_name":"QMUIImagePickerPreviewViewControllerDelegate"},"Protocols/QMUIImagePickerPreviewViewControllerDelegate.html#/c:objc(pl)QMUIImagePickerPreviewViewControllerDelegate(im)imagePickerPreviewViewController:didUncheckImageAtIndex:":{"name":"-imagePickerPreviewViewController:didUncheckImageAtIndex:","abstract":"<p>已经取消选中图片</p>","parent_name":"QMUIImagePickerPreviewViewControllerDelegate"},"Protocols/QMUIAlbumViewControllerDelegate.html#/c:objc(pl)QMUIAlbumViewControllerDelegate(im)imagePickerViewControllerForAlbumViewController:":{"name":"-imagePickerViewControllerForAlbumViewController:","abstract":"<p>点击相簿里某一行时，需要给一个 QMUIImagePickerViewController 对象用于展示九宫格图片列表</p>","parent_name":"QMUIAlbumViewControllerDelegate"},"Protocols/QMUIAlbumViewControllerDelegate.html#/c:objc(pl)QMUIAlbumViewControllerDelegate(im)albumViewControllerDidCancel:":{"name":"-albumViewControllerDidCancel:","abstract":"<p>取消查看相册列表后被调用</p>","parent_name":"QMUIAlbumViewControllerDelegate"},"Protocols/QMUIAlbumViewControllerDelegate.html#/c:objc(pl)QMUIAlbumViewControllerDelegate(im)albumViewControllerWillStartLoading:":{"name":"-albumViewControllerWillStartLoading:","abstract":"<p>即将需要显示 Loading 时调用</p>","parent_name":"QMUIAlbumViewControllerDelegate"},"Protocols/QMUIAlbumViewControllerDelegate.html#/c:objc(pl)QMUIAlbumViewControllerDelegate(im)albumViewControllerWillFinishLoading:":{"name":"-albumViewControllerWillFinishLoading:","abstract":"<p>即将需要隐藏 Loading 时调用</p>","parent_name":"QMUIAlbumViewControllerDelegate"},"Protocols/QMUINavigationTitleViewDelegate.html#/c:objc(pl)QMUINavigationTitleViewDelegate(im)didTouchTitleView:isActive:":{"name":"-didTouchTitleView:isActive:","abstract":"<p>点击 titleView 后的回调，只需设置 titleView.userInteractionEnabled = YES 后即可使用。不过一般都用于配合 QMUINavigationTitleViewAccessoryTypeDisclosureIndicator。</p>","parent_name":"QMUINavigationTitleViewDelegate"},"Protocols/QMUINavigationTitleViewDelegate.html#/c:objc(pl)QMUINavigationTitleViewDelegate(im)didChangedActive:forTitleView:":{"name":"-didChangedActive:forTitleView:","abstract":"<p>titleView 的活跃状态发生变化时会被调用，也即 [titleView setActive:] 被调用时。</p>","parent_name":"QMUINavigationTitleViewDelegate"},"Protocols/QMUITextFieldDelegate.html#/c:objc(pl)QMUITextFieldDelegate(im)textField:didPreventTextChangeInRange:replacementString:":{"name":"-textField:didPreventTextChangeInRange:replacementString:","abstract":"<p>配合 <code>maximumTextLength</code> 属性使用，在输入文字超过限制时被调用。</p>","parent_name":"QMUITextFieldDelegate"},"Protocols/QMUILoggerDelegate.html#/c:objc(pl)QMUILoggerDelegate(im)printQMUILogWithFile:line:func:logItem:defaultString:":{"name":"-printQMUILogWithFile:line:func:logItem:defaultString:","abstract":"<p>当每一个 enabled 的 QMUILog 被使用时都会走到这里，可以由业务自行决定要如何处理这些 log，如果没实现这个方法，默认用 NSLog() 打印内容</p>","parent_name":"QMUILoggerDelegate"},"Protocols/QMUILoggerDelegate.html#/c:objc(pl)QMUILoggerDelegate(im)QMUILogName:didChangeEnabled:":{"name":"-QMUILogName:didChangeEnabled:","abstract":"<p>当某个 logName 的 enabled 发生变化时，通知到 delegate。注意如果是新创建某个 logName 也会走到这里。</p>","parent_name":"QMUILoggerDelegate"},"Protocols/QMUILoggerDelegate.html#/c:objc(pl)QMUILoggerDelegate(im)QMUILogNameDidRemove:":{"name":"-QMUILogNameDidRemove:","abstract":"<p>某个 logName 被删除时通知到 delegate</p>","parent_name":"QMUILoggerDelegate"},"Protocols/QMUIDynamicImageProtocol.html#/c:objc(pl)QMUIDynamicImageProtocol(py)qmui_rawImage":{"name":"qmui_rawImage","abstract":"<p>获取当前 UIImage 的实际图片（返回的图片必定不是 dynamic image）</p>","parent_name":"QMUIDynamicImageProtocol"},"Protocols/QMUIDynamicImageProtocol.html#/c:objc(pl)QMUIDynamicImageProtocol(py)qmui_isDynamicImage":{"name":"qmui_isDynamicImage","abstract":"<p>标志当前 UIImage 对象是否为动态图片（由 [UIImage qmui_imageWithThemeProvider:] 创建的颜色</p>","parent_name":"QMUIDynamicImageProtocol"},"Protocols/QMUIDynamicEffectProtocol.html#/c:objc(pl)QMUIDynamicEffectProtocol(py)qmui_rawEffect":{"name":"qmui_rawEffect","abstract":"<p>获取当前 UIVisualEffect 的实际 effect（返回的 effect 必定不是 dynamic image）</p>","parent_name":"QMUIDynamicEffectProtocol"},"Protocols/QMUIDynamicEffectProtocol.html#/c:objc(pl)QMUIDynamicEffectProtocol(py)qmui_isDynamicEffect":{"name":"qmui_isDynamicEffect","abstract":"<p>标志当前 UIVisualEffect 对象是否为动态 effect（由 [UIVisualEffect qmui_effectWithThemeProvider:] 创建的 effect</p>","parent_name":"QMUIDynamicEffectProtocol"},"Protocols/QMUIZoomImageViewDelegate.html#/c:objc(pl)QMUIZoomImageViewDelegate(im)singleTouchInZoomingImageView:location:":{"name":"-singleTouchInZoomingImageView:location:","abstract":"<p>Undocumented</p>","parent_name":"QMUIZoomImageViewDelegate"},"Protocols/QMUIZoomImageViewDelegate.html#/c:objc(pl)QMUIZoomImageViewDelegate(im)doubleTouchInZoomingImageView:location:":{"name":"-doubleTouchInZoomingImageView:location:","abstract":"<p>Undocumented</p>","parent_name":"QMUIZoomImageViewDelegate"},"Protocols/QMUIZoomImageViewDelegate.html#/c:objc(pl)QMUIZoomImageViewDelegate(im)longPressInZoomingImageView:":{"name":"-longPressInZoomingImageView:","abstract":"<p>Undocumented</p>","parent_name":"QMUIZoomImageViewDelegate"},"Protocols/QMUIZoomImageViewDelegate.html#/c:objc(pl)QMUIZoomImageViewDelegate(im)didTouchICloudRetryButtonInZoomImageView:":{"name":"-didTouchICloudRetryButtonInZoomImageView:","abstract":"<p>告知 delegate 用户点击了 iCloud 图片的重试按钮</p>","parent_name":"QMUIZoomImageViewDelegate"},"Protocols/QMUIZoomImageViewDelegate.html#/c:objc(pl)QMUIZoomImageViewDelegate(im)zoomImageView:didHideVideoToolbar:":{"name":"-zoomImageView:didHideVideoToolbar:","abstract":"<p>告知 delegate 在视频预览界面里，由于用户点击了空白区域或播放视频等导致了底部的视频工具栏被显示或隐藏</p>","parent_name":"QMUIZoomImageViewDelegate"},"Protocols/QMUIZoomImageViewDelegate.html#/c:objc(pl)QMUIZoomImageViewDelegate(im)enabledZoomViewInZoomImageView:":{"name":"-enabledZoomViewInZoomImageView:","abstract":"<p>是否支持缩放，默认为 YES</p>","parent_name":"QMUIZoomImageViewDelegate"},"Protocols/QMUIImagePreviewViewDelegate.html#/c:objc(pl)QMUIImagePreviewViewDelegate(im)numberOfImagesInImagePreviewView:":{"name":"-numberOfImagesInImagePreviewView:","abstract":"<p>Undocumented</p>","parent_name":"QMUIImagePreviewViewDelegate"},"Protocols/QMUIImagePreviewViewDelegate.html#/c:objc(pl)QMUIImagePreviewViewDelegate(im)imagePreviewView:renderZoomImageView:atIndex:":{"name":"-imagePreviewView:renderZoomImageView:atIndex:","abstract":"<p>Undocumented</p>","parent_name":"QMUIImagePreviewViewDelegate"},"Protocols/QMUIImagePreviewViewDelegate.html#/c:objc(pl)QMUIImagePreviewViewDelegate(im)imagePreviewView:assetTypeAtIndex:":{"name":"-imagePreviewView:assetTypeAtIndex:","abstract":"<p>Undocumented</p>","parent_name":"QMUIImagePreviewViewDelegate"},"Protocols/QMUIImagePreviewViewDelegate.html#/c:objc(pl)QMUIImagePreviewViewDelegate(im)imagePreviewView:didScrollToIndex:":{"name":"-imagePreviewView:didScrollToIndex:","abstract":"<p>当左右的滚动停止时会触发这个方法</p>","parent_name":"QMUIImagePreviewViewDelegate"},"Protocols/QMUIImagePreviewViewDelegate.html#/c:objc(pl)QMUIImagePreviewViewDelegate(im)imagePreviewView:willScrollHalfToIndex:":{"name":"-imagePreviewView:willScrollHalfToIndex:","abstract":"<p>在滚动过程中，如果某一张图片的边缘（左/右）经过预览控件的中心点时，就会触发这个方法</p>","parent_name":"QMUIImagePreviewViewDelegate"},"Protocols/QMUICellSizeKeyCache_UICollectionViewDelegate.html#/c:objc(pl)QMUICellSizeKeyCache_UICollectionViewDelegate(im)qmui_collectionView:cacheKeyForItemAtIndexPath:":{"name":"-qmui_collectionView:cacheKeyForItemAtIndexPath:","abstract":"<p>Undocumented</p>","parent_name":"QMUICellSizeKeyCache_UICollectionViewDelegate"},"Protocols/QMUIWindowSizeMonitorProtocol.html#/c:objc(pl)QMUIWindowSizeMonitorProtocol(im)windowDidTransitionToSize:":{"name":"-windowDidTransitionToSize:","abstract":"<p>当继承自 UIResponder 的对象，比如 UIView 或 UIViewController 实现了这个方法时，其所属的 window 在大小发生改变后在这个方法回调。</p>","parent_name":"QMUIWindowSizeMonitorProtocol"},"Protocols/QMUIModalPresentationComponentProtocol.html#/c:objc(pl)QMUIModalPresentationComponentProtocol(im)hideModalPresentationComponent":{"name":"-hideModalPresentationComponent","abstract":"<p>Undocumented</p>","parent_name":"QMUIModalPresentationComponentProtocol"},"Protocols/QMUIModalPresentationViewControllerDelegate.html#/c:objc(pl)QMUIModalPresentationViewControllerDelegate(im)shouldHideModalPresentationViewController:":{"name":"-shouldHideModalPresentationViewController:","abstract":"<p>是否应该隐藏浮层，会在调用<code>hideWithAnimated:completion:</code>时，以及点击背景遮罩时被调用。默认为YES。</p>","parent_name":"QMUIModalPresentationViewControllerDelegate"},"Protocols/QMUIModalPresentationViewControllerDelegate.html#/c:objc(pl)QMUIModalPresentationViewControllerDelegate(im)willHideModalPresentationViewController:":{"name":"-willHideModalPresentationViewController:","abstract":"<p>modalController 即将隐藏时的回调方法，在调用完这个方法后才开始做一些隐藏前的准备工作，例如恢复 window 的 dimmed 状态等。</p>","parent_name":"QMUIModalPresentationViewControllerDelegate"},"Protocols/QMUIModalPresentationViewControllerDelegate.html#/c:objc(pl)QMUIModalPresentationViewControllerDelegate(im)didHideModalPresentationViewController:":{"name":"-didHideModalPresentationViewController:","abstract":"<p>modalController隐藏后的回调方法，不管是直接调用<code>hideWithAnimated:completion:</code>，还是通过点击遮罩触发的隐藏，都会调用这个方法。","parent_name":"QMUIModalPresentationViewControllerDelegate"},"Protocols/QMUIModalPresentationContentViewControllerProtocol.html#/c:objc(pl)QMUIModalPresentationContentViewControllerProtocol(im)preferredContentSizeInModalPresentationViewController:keyboardHeight:limitSize:":{"name":"-preferredContentSizeInModalPresentationViewController:keyboardHeight:limitSize:","abstract":"<p>当浮层以 UIViewController 的形式展示（而非 UIView），并且使用 modalController 提供的默认布局时，则可通过这个方法告诉 modalController 当前浮层期望的大小。如果 modalController 实现了自己的 layoutBlock，则可不实现这个方法，实现了也不一定按照这个方法的返回值来布局，完全取决于 layoutBlock。</p>","parent_name":"QMUIModalPresentationContentViewControllerProtocol"},"Protocols/QMUIAlertControllerDelegate.html#/c:objc(pl)QMUIAlertControllerDelegate(im)willShowAlertController:":{"name":"-willShowAlertController:","abstract":"<p>Undocumented</p>","parent_name":"QMUIAlertControllerDelegate"},"Protocols/QMUIAlertControllerDelegate.html#/c:objc(pl)QMUIAlertControllerDelegate(im)willHideAlertController:":{"name":"-willHideAlertController:","abstract":"<p>Undocumented</p>","parent_name":"QMUIAlertControllerDelegate"},"Protocols/QMUIAlertControllerDelegate.html#/c:objc(pl)QMUIAlertControllerDelegate(im)didShowAlertController:":{"name":"-didShowAlertController:","abstract":"<p>Undocumented</p>","parent_name":"QMUIAlertControllerDelegate"},"Protocols/QMUIAlertControllerDelegate.html#/c:objc(pl)QMUIAlertControllerDelegate(im)didHideAlertController:":{"name":"-didHideAlertController:","abstract":"<p>Undocumented</p>","parent_name":"QMUIAlertControllerDelegate"},"Protocols/QMUIAlertControllerDelegate.html#/c:objc(pl)QMUIAlertControllerDelegate(im)shouldHideAlertController:":{"name":"-shouldHideAlertController:","abstract":"<p>Undocumented</p>","parent_name":"QMUIAlertControllerDelegate"},"Protocols/QMUIToastAnimatorDelegate.html#/c:objc(pl)QMUIToastAnimatorDelegate(im)showWithCompletion:":{"name":"-showWithCompletion:","abstract":"<p>Undocumented</p>","parent_name":"QMUIToastAnimatorDelegate"},"Protocols/QMUIToastAnimatorDelegate.html#/c:objc(pl)QMUIToastAnimatorDelegate(im)hideWithCompletion:":{"name":"-hideWithCompletion:","abstract":"<p>Undocumented</p>","parent_name":"QMUIToastAnimatorDelegate"},"Protocols/QMUIToastAnimatorDelegate.html#/c:objc(pl)QMUIToastAnimatorDelegate(im)isShowing":{"name":"-isShowing","abstract":"<p>Undocumented</p>","parent_name":"QMUIToastAnimatorDelegate"},"Protocols/QMUIToastAnimatorDelegate.html#/c:objc(pl)QMUIToastAnimatorDelegate(im)isAnimating":{"name":"-isAnimating","abstract":"<p>Undocumented</p>","parent_name":"QMUIToastAnimatorDelegate"},"Protocols/QMUIToastAnimatorDelegate.html":{"name":"QMUIToastAnimatorDelegate","abstract":"<p><code>QMUIToastAnimatorDelegate</code>是所有<code>QMUIToastAnimator</code>或者其子类必须遵循的协议，是整个动画过程实现的地方。</p>"},"Protocols/QMUIAlertControllerDelegate.html":{"name":"QMUIAlertControllerDelegate","abstract":"<p>Undocumented</p>"},"Protocols/QMUIModalPresentationContentViewControllerProtocol.html":{"name":"QMUIModalPresentationContentViewControllerProtocol","abstract":"<p>Undocumented</p>"},"Protocols/QMUIModalPresentationViewControllerDelegate.html":{"name":"QMUIModalPresentationViewControllerDelegate","abstract":"<p>Undocumented</p>"},"Protocols/QMUIModalPresentationComponentProtocol.html":{"name":"QMUIModalPresentationComponentProtocol","abstract":"<p>如果你有一个控件，内部通过 QMUIModalPresentationViewController 实现显隐功能，那么这个控件建议实现这个协议，这样当 + [QMUIModalPresentationViewController hideAllVisibleModalPresentationViewControllerIfCan] 被调用的时候，可以通过 hideModalPresentationComponent 来隐藏你的控件，否则会直接调用 QMUIModalPresentationViewController 的 hide 方法，那样可能导致你的控件无法正确被隐藏。</p>"},"Protocols/QMUIWindowSizeMonitorProtocol.html":{"name":"QMUIWindowSizeMonitorProtocol","abstract":"<p>Undocumented</p>"},"Protocols/QMUICellSizeKeyCache_UICollectionViewDelegate.html":{"name":"QMUICellSizeKeyCache_UICollectionViewDelegate","abstract":"<p>Undocumented</p>"},"Protocols/QMUIImagePreviewViewDelegate.html":{"name":"QMUIImagePreviewViewDelegate","abstract":"<p>Undocumented</p>"},"Protocols/QMUIZoomImageViewDelegate.html":{"name":"QMUIZoomImageViewDelegate","abstract":"<p>Undocumented</p>"},"Protocols/QMUIDynamicEffectProtocol.html":{"name":"QMUIDynamicEffectProtocol","abstract":"<p>Undocumented</p>"},"Protocols/QMUIDynamicImageProtocol.html":{"name":"QMUIDynamicImageProtocol","abstract":"<p>Undocumented</p>"},"Protocols/QMUILoggerDelegate.html":{"name":"QMUILoggerDelegate","abstract":"<p>Undocumented</p>"},"Protocols/QMUITextFieldDelegate.html":{"name":"QMUITextFieldDelegate","abstract":"<p>Undocumented</p>"},"Protocols/QMUINavigationTitleViewDelegate.html":{"name":"QMUINavigationTitleViewDelegate","abstract":"<p>Undocumented</p>"},"Protocols/QMUIAlbumViewControllerDelegate.html":{"name":"QMUIAlbumViewControllerDelegate","abstract":"<p>Undocumented</p>"},"Protocols/QMUIImagePickerPreviewViewControllerDelegate.html":{"name":"QMUIImagePickerPreviewViewControllerDelegate","abstract":"<p>Undocumented</p>"},"Protocols/QMUIImagePickerViewControllerDelegate.html":{"name":"QMUIImagePickerViewControllerDelegate","abstract":"<p>Undocumented</p>"},"Protocols/QMUICellHeightCache_UITableViewDataSource.html":{"name":"QMUICellHeightCache_UITableViewDataSource","abstract":"<p>Undocumented</p>"},"Protocols/QMUICellHeightKeyCache_UITableViewDelegate.html":{"name":"QMUICellHeightKeyCache_UITableViewDelegate","abstract":"<p>Undocumented</p>"},"Protocols/QMUITableViewDelegate.html":{"name":"QMUITableViewDelegate","abstract":"<p>Undocumented</p>"},"Protocols.html#/c:objc(pl)QMUITableViewDataSource":{"name":"QMUITableViewDataSource","abstract":"<p>Undocumented</p>"},"Protocols/QMUIPopupMenuItemProtocol.html":{"name":"QMUIPopupMenuItemProtocol","abstract":"<p>Undocumented</p>"},"Protocols/QMUIMoreOperationControllerDelegate.html":{"name":"QMUIMoreOperationControllerDelegate","abstract":"<p>Undocumented</p>"},"Protocols/QMUIEmptyViewLoadingViewProtocol.html":{"name":"QMUIEmptyViewLoadingViewProtocol","abstract":"<p>Undocumented</p>"},"Protocols/QMUIKeyboardManagerDelegate.html":{"name":"QMUIKeyboardManagerDelegate","abstract":"<p><code>QMUIKeyboardManagerDelegate</code>里面的方法是对应系统键盘通知的回调方法，具体请看delegate名字，<code>QMUIKeyboardUserInfo</code>是对系统的userInfo做了一个封装，可以方便的获取userInfo的属性值。</p>"},"Protocols/QMUITextViewDelegate.html":{"name":"QMUITextViewDelegate","abstract":"<p>Undocumented</p>"},"Enums/QMUICollectionViewPagingLayoutStyle.html#/c:@E@QMUICollectionViewPagingLayoutStyle@QMUICollectionViewPagingLayoutStyleDefault":{"name":"QMUICollectionViewPagingLayoutStyleDefault","abstract":"<p>Undocumented</p>","parent_name":"QMUICollectionViewPagingLayoutStyle"},"Enums/QMUICollectionViewPagingLayoutStyle.html#/c:@E@QMUICollectionViewPagingLayoutStyle@QMUICollectionViewPagingLayoutStyleScale":{"name":"QMUICollectionViewPagingLayoutStyleScale","abstract":"<p>Undocumented</p>","parent_name":"QMUICollectionViewPagingLayoutStyle"},"Enums/QMUICollectionViewPagingLayoutStyle.html#/c:@E@QMUICollectionViewPagingLayoutStyle@QMUICollectionViewPagingLayoutStyleRotation":{"name":"QMUICollectionViewPagingLayoutStyleRotation","abstract":"<p>Undocumented</p>","parent_name":"QMUICollectionViewPagingLayoutStyle"},"Enums/QMUITableViewHeaderFooterViewType.html#/c:@E@QMUITableViewHeaderFooterViewType@QMUITableViewHeaderFooterViewTypeUnknow":{"name":"QMUITableViewHeaderFooterViewTypeUnknow","abstract":"<p>Undocumented</p>","parent_name":"QMUITableViewHeaderFooterViewType"},"Enums/QMUITableViewHeaderFooterViewType.html#/c:@E@QMUITableViewHeaderFooterViewType@QMUITableViewHeaderFooterViewTypeHeader":{"name":"QMUITableViewHeaderFooterViewTypeHeader","abstract":"<p>Undocumented</p>","parent_name":"QMUITableViewHeaderFooterViewType"},"Enums/QMUITableViewHeaderFooterViewType.html#/c:@E@QMUITableViewHeaderFooterViewType@QMUITableViewHeaderFooterViewTypeFooter":{"name":"QMUITableViewHeaderFooterViewTypeFooter","abstract":"<p>Undocumented</p>","parent_name":"QMUITableViewHeaderFooterViewType"},"Enums/QMUIPieProgressViewShape.html#/c:@E@QMUIPieProgressViewShape@QMUIPieProgressViewShapeSector":{"name":"QMUIPieProgressViewShapeSector","abstract":"<p>Undocumented</p>","parent_name":"QMUIPieProgressViewShape"},"Enums/QMUIPieProgressViewShape.html#/c:@E@QMUIPieProgressViewShape@QMUIPieProgressViewShapeRing":{"name":"QMUIPieProgressViewShapeRing","abstract":"<p>Undocumented</p>","parent_name":"QMUIPieProgressViewShape"},"Enums/QMUINavigationTitleViewAccessoryType.html#/c:@E@QMUINavigationTitleViewAccessoryType@QMUINavigationTitleViewAccessoryTypeNone":{"name":"QMUINavigationTitleViewAccessoryTypeNone","abstract":"<p>Undocumented</p>","parent_name":"QMUINavigationTitleViewAccessoryType"},"Enums/QMUINavigationTitleViewAccessoryType.html#/c:@E@QMUINavigationTitleViewAccessoryType@QMUINavigationTitleViewAccessoryTypeDisclosureIndicator":{"name":"QMUINavigationTitleViewAccessoryTypeDisclosureIndicator","abstract":"<p>Undocumented</p>","parent_name":"QMUINavigationTitleViewAccessoryType"},"Enums/QMUINavigationTitleViewStyle.html#/c:@E@QMUINavigationTitleViewStyle@QMUINavigationTitleViewStyleDefault":{"name":"QMUINavigationTitleViewStyleDefault","abstract":"<p>Undocumented</p>","parent_name":"QMUINavigationTitleViewStyle"},"Enums/QMUINavigationTitleViewStyle.html#/c:@E@QMUINavigationTitleViewStyle@QMUINavigationTitleViewStyleSubTitleVertical":{"name":"QMUINavigationTitleViewStyleSubTitleVertical","abstract":"<p>Undocumented</p>","parent_name":"QMUINavigationTitleViewStyle"},"Enums/QMUINavigationButtonType.html#/c:@E@QMUINavigationButtonType@QMUINavigationButtonTypeNormal":{"name":"QMUINavigationButtonTypeNormal","abstract":"<p>Undocumented</p>","parent_name":"QMUINavigationButtonType"},"Enums/QMUINavigationButtonType.html#/c:@E@QMUINavigationButtonType@QMUINavigationButtonTypeBold":{"name":"QMUINavigationButtonTypeBold","abstract":"<p>Undocumented</p>","parent_name":"QMUINavigationButtonType"},"Enums/QMUINavigationButtonType.html#/c:@E@QMUINavigationButtonType@QMUINavigationButtonTypeImage":{"name":"QMUINavigationButtonTypeImage","abstract":"<p>Undocumented</p>","parent_name":"QMUINavigationButtonType"},"Enums/QMUINavigationButtonType.html#/c:@E@QMUINavigationButtonType@QMUINavigationButtonTypeBack":{"name":"QMUINavigationButtonTypeBack","abstract":"<p>Undocumented</p>","parent_name":"QMUINavigationButtonType"},"Enums/QMUIToolbarButtonType.html#/c:@E@QMUIToolbarButtonType@QMUIToolbarButtonTypeNormal":{"name":"QMUIToolbarButtonTypeNormal","abstract":"<p>Undocumented</p>","parent_name":"QMUIToolbarButtonType"},"Enums/QMUIToolbarButtonType.html#/c:@E@QMUIToolbarButtonType@QMUIToolbarButtonTypeRed":{"name":"QMUIToolbarButtonTypeRed","abstract":"<p>Undocumented</p>","parent_name":"QMUIToolbarButtonType"},"Enums/QMUIToolbarButtonType.html#/c:@E@QMUIToolbarButtonType@QMUIToolbarButtonTypeImage":{"name":"QMUIToolbarButtonTypeImage","abstract":"<p>Undocumented</p>","parent_name":"QMUIToolbarButtonType"},"Enums/QMUIGhostButtonColor.html#/c:@E@QMUIGhostButtonColor@QMUIGhostButtonColorBlue":{"name":"QMUIGhostButtonColorBlue","abstract":"<p>Undocumented</p>","parent_name":"QMUIGhostButtonColor"},"Enums/QMUIGhostButtonColor.html#/c:@E@QMUIGhostButtonColor@QMUIGhostButtonColorRed":{"name":"QMUIGhostButtonColorRed","abstract":"<p>Undocumented</p>","parent_name":"QMUIGhostButtonColor"},"Enums/QMUIGhostButtonColor.html#/c:@E@QMUIGhostButtonColor@QMUIGhostButtonColorGreen":{"name":"QMUIGhostButtonColorGreen","abstract":"<p>Undocumented</p>","parent_name":"QMUIGhostButtonColor"},"Enums/QMUIGhostButtonColor.html#/c:@E@QMUIGhostButtonColor@QMUIGhostButtonColorGray":{"name":"QMUIGhostButtonColorGray","abstract":"<p>Undocumented</p>","parent_name":"QMUIGhostButtonColor"},"Enums/QMUIGhostButtonColor.html#/c:@E@QMUIGhostButtonColor@QMUIGhostButtonColorWhite":{"name":"QMUIGhostButtonColorWhite","abstract":"<p>Undocumented</p>","parent_name":"QMUIGhostButtonColor"},"Enums/QMUIFillButtonColor.html#/c:@E@QMUIFillButtonColor@QMUIFillButtonColorBlue":{"name":"QMUIFillButtonColorBlue","abstract":"<p>Undocumented</p>","parent_name":"QMUIFillButtonColor"},"Enums/QMUIFillButtonColor.html#/c:@E@QMUIFillButtonColor@QMUIFillButtonColorRed":{"name":"QMUIFillButtonColorRed","abstract":"<p>Undocumented</p>","parent_name":"QMUIFillButtonColor"},"Enums/QMUIFillButtonColor.html#/c:@E@QMUIFillButtonColor@QMUIFillButtonColorGreen":{"name":"QMUIFillButtonColorGreen","abstract":"<p>Undocumented</p>","parent_name":"QMUIFillButtonColor"},"Enums/QMUIFillButtonColor.html#/c:@E@QMUIFillButtonColor@QMUIFillButtonColorGray":{"name":"QMUIFillButtonColorGray","abstract":"<p>Undocumented</p>","parent_name":"QMUIFillButtonColor"},"Enums/QMUIFillButtonColor.html#/c:@E@QMUIFillButtonColor@QMUIFillButtonColorWhite":{"name":"QMUIFillButtonColorWhite","abstract":"<p>Undocumented</p>","parent_name":"QMUIFillButtonColor"},"Enums/QMUIButtonImagePosition.html#/c:@E@QMUIButtonImagePosition@QMUIButtonImagePositionTop":{"name":"QMUIButtonImagePositionTop","abstract":"<p>Undocumented</p>","parent_name":"QMUIButtonImagePosition"},"Enums/QMUIButtonImagePosition.html#/c:@E@QMUIButtonImagePosition@QMUIButtonImagePositionLeft":{"name":"QMUIButtonImagePositionLeft","abstract":"<p>Undocumented</p>","parent_name":"QMUIButtonImagePosition"},"Enums/QMUIButtonImagePosition.html#/c:@E@QMUIButtonImagePosition@QMUIButtonImagePositionBottom":{"name":"QMUIButtonImagePositionBottom","abstract":"<p>Undocumented</p>","parent_name":"QMUIButtonImagePosition"},"Enums/QMUIButtonImagePosition.html#/c:@E@QMUIButtonImagePosition@QMUIButtonImagePositionRight":{"name":"QMUIButtonImagePositionRight","abstract":"<p>Undocumented</p>","parent_name":"QMUIButtonImagePosition"},"Enums/QMUILogLevel.html#/c:@E@QMUILogLevel@QMUILogLevelDefault":{"name":"QMUILogLevelDefault","abstract":"<p>Undocumented</p>","parent_name":"QMUILogLevel"},"Enums/QMUILogLevel.html#/c:@E@QMUILogLevel@QMUILogLevelInfo":{"name":"QMUILogLevelInfo","abstract":"<p>Undocumented</p>","parent_name":"QMUILogLevel"},"Enums/QMUILogLevel.html#/c:@E@QMUILogLevel@QMUILogLevelWarn":{"name":"QMUILogLevelWarn","abstract":"<p>Undocumented</p>","parent_name":"QMUILogLevel"},"Enums/QMUIPopupContainerViewLayoutDirection.html#/c:@E@QMUIPopupContainerViewLayoutDirection@QMUIPopupContainerViewLayoutDirectionAbove":{"name":"QMUIPopupContainerViewLayoutDirectionAbove","abstract":"<p>Undocumented</p>","parent_name":"QMUIPopupContainerViewLayoutDirection"},"Enums/QMUIPopupContainerViewLayoutDirection.html#/c:@E@QMUIPopupContainerViewLayoutDirection@QMUIPopupContainerViewLayoutDirectionBelow":{"name":"QMUIPopupContainerViewLayoutDirectionBelow","abstract":"<p>Undocumented</p>","parent_name":"QMUIPopupContainerViewLayoutDirection"},"Enums/QMUIPopupContainerViewLayoutDirection.html#/c:@E@QMUIPopupContainerViewLayoutDirection@QMUIPopupContainerViewLayoutDirectionLeft":{"name":"QMUIPopupContainerViewLayoutDirectionLeft","abstract":"<p>Undocumented</p>","parent_name":"QMUIPopupContainerViewLayoutDirection"},"Enums/QMUIPopupContainerViewLayoutDirection.html#/c:@E@QMUIPopupContainerViewLayoutDirection@QMUIPopupContainerViewLayoutDirectionRight":{"name":"QMUIPopupContainerViewLayoutDirectionRight","abstract":"<p>Undocumented</p>","parent_name":"QMUIPopupContainerViewLayoutDirection"},"Enums/QMUIAnimationEasings.html#/c:@E@QMUIAnimationEasings@QMUIAnimationEasingsLinear":{"name":"QMUIAnimationEasingsLinear","abstract":"<p>Undocumented</p>","parent_name":"QMUIAnimationEasings"},"Enums/QMUIAnimationEasings.html#/c:@E@QMUIAnimationEasings@QMUIAnimationEasingsEaseInSine":{"name":"QMUIAnimationEasingsEaseInSine","abstract":"<p>Undocumented</p>","parent_name":"QMUIAnimationEasings"},"Enums/QMUIAnimationEasings.html#/c:@E@QMUIAnimationEasings@QMUIAnimationEasingsEaseOutSine":{"name":"QMUIAnimationEasingsEaseOutSine","abstract":"<p>Undocumented</p>","parent_name":"QMUIAnimationEasings"},"Enums/QMUIAnimationEasings.html#/c:@E@QMUIAnimationEasings@QMUIAnimationEasingsEaseInOutSine":{"name":"QMUIAnimationEasingsEaseInOutSine","abstract":"<p>Undocumented</p>","parent_name":"QMUIAnimationEasings"},"Enums/QMUIAnimationEasings.html#/c:@E@QMUIAnimationEasings@QMUIAnimationEasingsEaseInQuad":{"name":"QMUIAnimationEasingsEaseInQuad","abstract":"<p>Undocumented</p>","parent_name":"QMUIAnimationEasings"},"Enums/QMUIAnimationEasings.html#/c:@E@QMUIAnimationEasings@QMUIAnimationEasingsEaseOutQuad":{"name":"QMUIAnimationEasingsEaseOutQuad","abstract":"<p>Undocumented</p>","parent_name":"QMUIAnimationEasings"},"Enums/QMUIAnimationEasings.html#/c:@E@QMUIAnimationEasings@QMUIAnimationEasingsEaseInOutQuad":{"name":"QMUIAnimationEasingsEaseInOutQuad","abstract":"<p>Undocumented</p>","parent_name":"QMUIAnimationEasings"},"Enums/QMUIAnimationEasings.html#/c:@E@QMUIAnimationEasings@QMUIAnimationEasingsEaseInCubic":{"name":"QMUIAnimationEasingsEaseInCubic","abstract":"<p>Undocumented</p>","parent_name":"QMUIAnimationEasings"},"Enums/QMUIAnimationEasings.html#/c:@E@QMUIAnimationEasings@QMUIAnimationEasingsEaseOutCubic":{"name":"QMUIAnimationEasingsEaseOutCubic","abstract":"<p>Undocumented</p>","parent_name":"QMUIAnimationEasings"},"Enums/QMUIAnimationEasings.html#/c:@E@QMUIAnimationEasings@QMUIAnimationEasingsEaseInOutCubic":{"name":"QMUIAnimationEasingsEaseInOutCubic","abstract":"<p>Undocumented</p>","parent_name":"QMUIAnimationEasings"},"Enums/QMUIAnimationEasings.html#/c:@E@QMUIAnimationEasings@QMUIAnimationEasingsEaseInQuart":{"name":"QMUIAnimationEasingsEaseInQuart","abstract":"<p>Undocumented</p>","parent_name":"QMUIAnimationEasings"},"Enums/QMUIAnimationEasings.html#/c:@E@QMUIAnimationEasings@QMUIAnimationEasingsEaseOutQuart":{"name":"QMUIAnimationEasingsEaseOutQuart","abstract":"<p>Undocumented</p>","parent_name":"QMUIAnimationEasings"},"Enums/QMUIAnimationEasings.html#/c:@E@QMUIAnimationEasings@QMUIAnimationEasingsEaseInOutQuart":{"name":"QMUIAnimationEasingsEaseInOutQuart","abstract":"<p>Undocumented</p>","parent_name":"QMUIAnimationEasings"},"Enums/QMUIAnimationEasings.html#/c:@E@QMUIAnimationEasings@QMUIAnimationEasingsEaseInQuint":{"name":"QMUIAnimationEasingsEaseInQuint","abstract":"<p>Undocumented</p>","parent_name":"QMUIAnimationEasings"},"Enums/QMUIAnimationEasings.html#/c:@E@QMUIAnimationEasings@QMUIAnimationEasingsEaseOutQuint":{"name":"QMUIAnimationEasingsEaseOutQuint","abstract":"<p>Undocumented</p>","parent_name":"QMUIAnimationEasings"},"Enums/QMUIAnimationEasings.html#/c:@E@QMUIAnimationEasings@QMUIAnimationEasingsEaseInOutQuint":{"name":"QMUIAnimationEasingsEaseInOutQuint","abstract":"<p>Undocumented</p>","parent_name":"QMUIAnimationEasings"},"Enums/QMUIAnimationEasings.html#/c:@E@QMUIAnimationEasings@QMUIAnimationEasingsEaseInExpo":{"name":"QMUIAnimationEasingsEaseInExpo","abstract":"<p>Undocumented</p>","parent_name":"QMUIAnimationEasings"},"Enums/QMUIAnimationEasings.html#/c:@E@QMUIAnimationEasings@QMUIAnimationEasingsEaseOutExpo":{"name":"QMUIAnimationEasingsEaseOutExpo","abstract":"<p>Undocumented</p>","parent_name":"QMUIAnimationEasings"},"Enums/QMUIAnimationEasings.html#/c:@E@QMUIAnimationEasings@QMUIAnimationEasingsEaseInOutExpo":{"name":"QMUIAnimationEasingsEaseInOutExpo","abstract":"<p>Undocumented</p>","parent_name":"QMUIAnimationEasings"},"Enums/QMUIAnimationEasings.html#/c:@E@QMUIAnimationEasings@QMUIAnimationEasingsEaseInCirc":{"name":"QMUIAnimationEasingsEaseInCirc","abstract":"<p>Undocumented</p>","parent_name":"QMUIAnimationEasings"},"Enums/QMUIAnimationEasings.html#/c:@E@QMUIAnimationEasings@QMUIAnimationEasingsEaseOutCirc":{"name":"QMUIAnimationEasingsEaseOutCirc","abstract":"<p>Undocumented</p>","parent_name":"QMUIAnimationEasings"},"Enums/QMUIAnimationEasings.html#/c:@E@QMUIAnimationEasings@QMUIAnimationEasingsEaseInOutCirc":{"name":"QMUIAnimationEasingsEaseInOutCirc","abstract":"<p>Undocumented</p>","parent_name":"QMUIAnimationEasings"},"Enums/QMUIAnimationEasings.html#/c:@E@QMUIAnimationEasings@QMUIAnimationEasingsEaseInBack":{"name":"QMUIAnimationEasingsEaseInBack","abstract":"<p>Undocumented</p>","parent_name":"QMUIAnimationEasings"},"Enums/QMUIAnimationEasings.html#/c:@E@QMUIAnimationEasings@QMUIAnimationEasingsEaseOutBack":{"name":"QMUIAnimationEasingsEaseOutBack","abstract":"<p>Undocumented</p>","parent_name":"QMUIAnimationEasings"},"Enums/QMUIAnimationEasings.html#/c:@E@QMUIAnimationEasings@QMUIAnimationEasingsEaseInOutBack":{"name":"QMUIAnimationEasingsEaseInOutBack","abstract":"<p>Undocumented</p>","parent_name":"QMUIAnimationEasings"},"Enums/QMUIAnimationEasings.html#/c:@E@QMUIAnimationEasings@QMUIAnimationEasingsEaseInElastic":{"name":"QMUIAnimationEasingsEaseInElastic","abstract":"<p>Undocumented</p>","parent_name":"QMUIAnimationEasings"},"Enums/QMUIAnimationEasings.html#/c:@E@QMUIAnimationEasings@QMUIAnimationEasingsEaseOutElastic":{"name":"QMUIAnimationEasingsEaseOutElastic","abstract":"<p>Undocumented</p>","parent_name":"QMUIAnimationEasings"},"Enums/QMUIAnimationEasings.html#/c:@E@QMUIAnimationEasings@QMUIAnimationEasingsEaseInOutElastic":{"name":"QMUIAnimationEasingsEaseInOutElastic","abstract":"<p>Undocumented</p>","parent_name":"QMUIAnimationEasings"},"Enums/QMUIAnimationEasings.html#/c:@E@QMUIAnimationEasings@QMUIAnimationEasingsEaseInBounce":{"name":"QMUIAnimationEasingsEaseInBounce","abstract":"<p>Undocumented</p>","parent_name":"QMUIAnimationEasings"},"Enums/QMUIAnimationEasings.html#/c:@E@QMUIAnimationEasings@QMUIAnimationEasingsEaseOutBounce":{"name":"QMUIAnimationEasingsEaseOutBounce","abstract":"<p>Undocumented</p>","parent_name":"QMUIAnimationEasings"},"Enums/QMUIAnimationEasings.html#/c:@E@QMUIAnimationEasings@QMUIAnimationEasingsEaseInOutBounce":{"name":"QMUIAnimationEasingsEaseInOutBounce","abstract":"<p>Undocumented</p>","parent_name":"QMUIAnimationEasings"},"Enums/QMUIAnimationEasings.html#/c:@E@QMUIAnimationEasings@QMUIAnimationEasingsSpring":{"name":"QMUIAnimationEasingsSpring","abstract":"<p>Undocumented</p>","parent_name":"QMUIAnimationEasings"},"Enums/QMUIAnimationEasings.html#/c:@E@QMUIAnimationEasings@QMUIAnimationEasingsSpringKeyboard":{"name":"QMUIAnimationEasingsSpringKeyboard","abstract":"<p>Undocumented</p>","parent_name":"QMUIAnimationEasings"},"Enums/QMUIImagePreviewViewControllerTransitioningStyle.html#/c:@E@QMUIImagePreviewViewControllerTransitioningStyle@QMUIImagePreviewViewControllerTransitioningStyleFade":{"name":"QMUIImagePreviewViewControllerTransitioningStyleFade","abstract":"<p>present 时整个界面渐现，dismiss 时整个界面渐隐，默认。</p>","parent_name":"QMUIImagePreviewViewControllerTransitioningStyle"},"Enums/QMUIImagePreviewViewControllerTransitioningStyle.html#/c:@E@QMUIImagePreviewViewControllerTransitioningStyle@QMUIImagePreviewViewControllerTransitioningStyleZoom":{"name":"QMUIImagePreviewViewControllerTransitioningStyleZoom","abstract":"<p>present 时从某个指定的位置缩放到屏幕中央，dismiss 时缩放到指定位置，必须实现 sourceImageView 并返回一个非空的值</p>","parent_name":"QMUIImagePreviewViewControllerTransitioningStyle"},"Enums/QMUIImagePreviewMediaType.html#/c:@E@QMUIImagePreviewMediaType@QMUIImagePreviewMediaTypeImage":{"name":"QMUIImagePreviewMediaTypeImage","abstract":"<p>Undocumented</p>","parent_name":"QMUIImagePreviewMediaType"},"Enums/QMUIImagePreviewMediaType.html#/c:@E@QMUIImagePreviewMediaType@QMUIImagePreviewMediaTypeLivePhoto":{"name":"QMUIImagePreviewMediaTypeLivePhoto","abstract":"<p>Undocumented</p>","parent_name":"QMUIImagePreviewMediaType"},"Enums/QMUIImagePreviewMediaType.html#/c:@E@QMUIImagePreviewMediaType@QMUIImagePreviewMediaTypeVideo":{"name":"QMUIImagePreviewMediaTypeVideo","abstract":"<p>Undocumented</p>","parent_name":"QMUIImagePreviewMediaType"},"Enums/QMUIImagePreviewMediaType.html#/c:@E@QMUIImagePreviewMediaType@QMUIImagePreviewMediaTypeOthers":{"name":"QMUIImagePreviewMediaTypeOthers","abstract":"<p>Undocumented</p>","parent_name":"QMUIImagePreviewMediaType"},"Enums/QMUIAssetAuthorizationStatus.html#/c:@E@QMUIAssetAuthorizationStatus@QMUIAssetAuthorizationStatusNotDetermined":{"name":"QMUIAssetAuthorizationStatusNotDetermined","abstract":"<p>Undocumented</p>","parent_name":"QMUIAssetAuthorizationStatus"},"Enums/QMUIAssetAuthorizationStatus.html#/c:@E@QMUIAssetAuthorizationStatus@QMUIAssetAuthorizationStatusAuthorized":{"name":"QMUIAssetAuthorizationStatusAuthorized","abstract":"<p>Undocumented</p>","parent_name":"QMUIAssetAuthorizationStatus"},"Enums/QMUIAssetAuthorizationStatus.html#/c:@E@QMUIAssetAuthorizationStatus@QMUIAssetAuthorizationStatusNotAuthorized":{"name":"QMUIAssetAuthorizationStatusNotAuthorized","abstract":"<p>Undocumented</p>","parent_name":"QMUIAssetAuthorizationStatus"},"Enums/QMUIAlbumSortType.html#/c:@E@QMUIAlbumSortType@QMUIAlbumSortTypePositive":{"name":"QMUIAlbumSortTypePositive","abstract":"<p>Undocumented</p>","parent_name":"QMUIAlbumSortType"},"Enums/QMUIAlbumSortType.html#/c:@E@QMUIAlbumSortType@QMUIAlbumSortTypeReverse":{"name":"QMUIAlbumSortTypeReverse","abstract":"<p>Undocumented</p>","parent_name":"QMUIAlbumSortType"},"Enums/QMUIAlbumContentType.html#/c:@E@QMUIAlbumContentType@QMUIAlbumContentTypeAll":{"name":"QMUIAlbumContentTypeAll","abstract":"<p>Undocumented</p>","parent_name":"QMUIAlbumContentType"},"Enums/QMUIAlbumContentType.html#/c:@E@QMUIAlbumContentType@QMUIAlbumContentTypeOnlyPhoto":{"name":"QMUIAlbumContentTypeOnlyPhoto","abstract":"<p>Undocumented</p>","parent_name":"QMUIAlbumContentType"},"Enums/QMUIAlbumContentType.html#/c:@E@QMUIAlbumContentType@QMUIAlbumContentTypeOnlyVideo":{"name":"QMUIAlbumContentTypeOnlyVideo","abstract":"<p>Undocumented</p>","parent_name":"QMUIAlbumContentType"},"Enums/QMUIAlbumContentType.html#/c:@E@QMUIAlbumContentType@QMUIAlbumContentTypeOnlyAudio":{"name":"QMUIAlbumContentTypeOnlyAudio","abstract":"<p>Undocumented</p>","parent_name":"QMUIAlbumContentType"},"Enums/QMUIAssetDownloadStatus.html#/c:@E@QMUIAssetDownloadStatus@QMUIAssetDownloadStatusSucceed":{"name":"QMUIAssetDownloadStatusSucceed","abstract":"<p>Undocumented</p>","parent_name":"QMUIAssetDownloadStatus"},"Enums/QMUIAssetDownloadStatus.html#/c:@E@QMUIAssetDownloadStatus@QMUIAssetDownloadStatusDownloading":{"name":"QMUIAssetDownloadStatusDownloading","abstract":"<p>Undocumented</p>","parent_name":"QMUIAssetDownloadStatus"},"Enums/QMUIAssetDownloadStatus.html#/c:@E@QMUIAssetDownloadStatus@QMUIAssetDownloadStatusCanceled":{"name":"QMUIAssetDownloadStatusCanceled","abstract":"<p>Undocumented</p>","parent_name":"QMUIAssetDownloadStatus"},"Enums/QMUIAssetDownloadStatus.html#/c:@E@QMUIAssetDownloadStatus@QMUIAssetDownloadStatusFailed":{"name":"QMUIAssetDownloadStatusFailed","abstract":"<p>Undocumented</p>","parent_name":"QMUIAssetDownloadStatus"},"Enums/QMUIAssetSubType.html#/c:@E@QMUIAssetSubType@QMUIAssetSubTypeUnknow":{"name":"QMUIAssetSubTypeUnknow","abstract":"<p>Undocumented</p>","parent_name":"QMUIAssetSubType"},"Enums/QMUIAssetSubType.html#/c:@E@QMUIAssetSubType@QMUIAssetSubTypeImage":{"name":"QMUIAssetSubTypeImage","abstract":"<p>Undocumented</p>","parent_name":"QMUIAssetSubType"},"Enums/QMUIAssetSubType.html#/c:@E@QMUIAssetSubType@QMUIAssetSubTypeLivePhoto":{"name":"QMUIAssetSubTypeLivePhoto","abstract":"<p>Undocumented</p>","parent_name":"QMUIAssetSubType"},"Enums/QMUIAssetSubType.html#/c:@E@QMUIAssetSubType@QMUIAssetSubTypeGIF":{"name":"QMUIAssetSubTypeGIF","abstract":"<p>Undocumented</p>","parent_name":"QMUIAssetSubType"},"Enums/QMUIAssetType.html#/c:@E@QMUIAssetType@QMUIAssetTypeUnknow":{"name":"QMUIAssetTypeUnknow","abstract":"<p>Undocumented</p>","parent_name":"QMUIAssetType"},"Enums/QMUIAssetType.html#/c:@E@QMUIAssetType@QMUIAssetTypeImage":{"name":"QMUIAssetTypeImage","abstract":"<p>Undocumented</p>","parent_name":"QMUIAssetType"},"Enums/QMUIAssetType.html#/c:@E@QMUIAssetType@QMUIAssetTypeVideo":{"name":"QMUIAssetTypeVideo","abstract":"<p>Undocumented</p>","parent_name":"QMUIAssetType"},"Enums/QMUIAssetType.html#/c:@E@QMUIAssetType@QMUIAssetTypeAudio":{"name":"QMUIAssetTypeAudio","abstract":"<p>Undocumented</p>","parent_name":"QMUIAssetType"},"Enums/QMUIModalPresentationAnimationStyle.html#/c:@E@QMUIModalPresentationAnimationStyle@QMUIModalPresentationAnimationStyleFade":{"name":"QMUIModalPresentationAnimationStyleFade","abstract":"<p>Undocumented</p>","parent_name":"QMUIModalPresentationAnimationStyle"},"Enums/QMUIModalPresentationAnimationStyle.html#/c:@E@QMUIModalPresentationAnimationStyle@QMUIModalPresentationAnimationStylePopup":{"name":"QMUIModalPresentationAnimationStylePopup","abstract":"<p>Undocumented</p>","parent_name":"QMUIModalPresentationAnimationStyle"},"Enums/QMUIModalPresentationAnimationStyle.html#/c:@E@QMUIModalPresentationAnimationStyle@QMUIModalPresentationAnimationStyleSlide":{"name":"QMUIModalPresentationAnimationStyleSlide","abstract":"<p>Undocumented</p>","parent_name":"QMUIModalPresentationAnimationStyle"},"Enums/QMUIAlertControllerStyle.html#/c:@E@QMUIAlertControllerStyle@QMUIAlertControllerStyleActionSheet":{"name":"QMUIAlertControllerStyleActionSheet","abstract":"<p>Undocumented</p>","parent_name":"QMUIAlertControllerStyle"},"Enums/QMUIAlertControllerStyle.html#/c:@E@QMUIAlertControllerStyle@QMUIAlertControllerStyleAlert":{"name":"QMUIAlertControllerStyleAlert","abstract":"<p>Undocumented</p>","parent_name":"QMUIAlertControllerStyle"},"Enums/QMUIAlertActionStyle.html#/c:@E@QMUIAlertActionStyle@QMUIAlertActionStyleDefault":{"name":"QMUIAlertActionStyleDefault","abstract":"<p>Undocumented</p>","parent_name":"QMUIAlertActionStyle"},"Enums/QMUIAlertActionStyle.html#/c:@E@QMUIAlertActionStyle@QMUIAlertActionStyleCancel":{"name":"QMUIAlertActionStyleCancel","abstract":"<p>Undocumented</p>","parent_name":"QMUIAlertActionStyle"},"Enums/QMUIAlertActionStyle.html#/c:@E@QMUIAlertActionStyle@QMUIAlertActionStyleDestructive":{"name":"QMUIAlertActionStyleDestructive","abstract":"<p>Undocumented</p>","parent_name":"QMUIAlertActionStyle"},"Enums/QMUIToastAnimationType.html#/c:@E@QMUIToastAnimationType@QMUIToastAnimationTypeFade":{"name":"QMUIToastAnimationTypeFade","abstract":"<p>Undocumented</p>","parent_name":"QMUIToastAnimationType"},"Enums/QMUIToastAnimationType.html#/c:@E@QMUIToastAnimationType@QMUIToastAnimationTypeZoom":{"name":"QMUIToastAnimationTypeZoom","abstract":"<p>Undocumented</p>","parent_name":"QMUIToastAnimationType"},"Enums/QMUIToastAnimationType.html#/c:@E@QMUIToastAnimationType@QMUIToastAnimationTypeSlide":{"name":"QMUIToastAnimationTypeSlide","abstract":"<p>Undocumented</p>","parent_name":"QMUIToastAnimationType"},"Enums/QMUIToastViewPosition.html#/c:@E@QMUIToastViewPosition@QMUIToastViewPositionTop":{"name":"QMUIToastViewPositionTop","abstract":"<p>Undocumented</p>","parent_name":"QMUIToastViewPosition"},"Enums/QMUIToastViewPosition.html#/c:@E@QMUIToastViewPosition@QMUIToastViewPositionCenter":{"name":"QMUIToastViewPositionCenter","abstract":"<p>Undocumented</p>","parent_name":"QMUIToastViewPosition"},"Enums/QMUIToastViewPosition.html#/c:@E@QMUIToastViewPosition@QMUIToastViewPositionBottom":{"name":"QMUIToastViewPositionBottom","abstract":"<p>Undocumented</p>","parent_name":"QMUIToastViewPosition"},"Enums/QMUIStaticTableViewCellAccessoryType.html#/c:@E@QMUIStaticTableViewCellAccessoryType@QMUIStaticTableViewCellAccessoryTypeNone":{"name":"QMUIStaticTableViewCellAccessoryTypeNone","abstract":"<p>Undocumented</p>","parent_name":"QMUIStaticTableViewCellAccessoryType"},"Enums/QMUIStaticTableViewCellAccessoryType.html#/c:@E@QMUIStaticTableViewCellAccessoryType@QMUIStaticTableViewCellAccessoryTypeDisclosureIndicator":{"name":"QMUIStaticTableViewCellAccessoryTypeDisclosureIndicator","abstract":"<p>Undocumented</p>","parent_name":"QMUIStaticTableViewCellAccessoryType"},"Enums/QMUIStaticTableViewCellAccessoryType.html#/c:@E@QMUIStaticTableViewCellAccessoryType@QMUIStaticTableViewCellAccessoryTypeDetailDisclosureButton":{"name":"QMUIStaticTableViewCellAccessoryTypeDetailDisclosureButton","abstract":"<p>Undocumented</p>","parent_name":"QMUIStaticTableViewCellAccessoryType"},"Enums/QMUIStaticTableViewCellAccessoryType.html#/c:@E@QMUIStaticTableViewCellAccessoryType@QMUIStaticTableViewCellAccessoryTypeCheckmark":{"name":"QMUIStaticTableViewCellAccessoryTypeCheckmark","abstract":"<p>Undocumented</p>","parent_name":"QMUIStaticTableViewCellAccessoryType"},"Enums/QMUIStaticTableViewCellAccessoryType.html#/c:@E@QMUIStaticTableViewCellAccessoryType@QMUIStaticTableViewCellAccessoryTypeDetailButton":{"name":"QMUIStaticTableViewCellAccessoryTypeDetailButton","abstract":"<p>Undocumented</p>","parent_name":"QMUIStaticTableViewCellAccessoryType"},"Enums/QMUIStaticTableViewCellAccessoryType.html#/c:@E@QMUIStaticTableViewCellAccessoryType@QMUIStaticTableViewCellAccessoryTypeSwitch":{"name":"QMUIStaticTableViewCellAccessoryTypeSwitch","abstract":"<p>Undocumented</p>","parent_name":"QMUIStaticTableViewCellAccessoryType"},"Enums/QMUIStaticTableViewCellAccessoryType.html":{"name":"QMUIStaticTableViewCellAccessoryType","abstract":"<p>Undocumented</p>"},"Enums/QMUIToastViewPosition.html":{"name":"QMUIToastViewPosition","abstract":"<p>Undocumented</p>"},"Enums/QMUIToastAnimationType.html":{"name":"QMUIToastAnimationType","abstract":"<p>Undocumented</p>"},"Enums/QMUIAlertActionStyle.html":{"name":"QMUIAlertActionStyle","abstract":"<p>Undocumented</p>"},"Enums/QMUIAlertControllerStyle.html":{"name":"QMUIAlertControllerStyle","abstract":"<p>Undocumented</p>"},"Enums/QMUIModalPresentationAnimationStyle.html":{"name":"QMUIModalPresentationAnimationStyle","abstract":"<p>Undocumented</p>"},"Enums/QMUIAssetType.html":{"name":"QMUIAssetType","abstract":"<p>Undocumented</p>"},"Enums/QMUIAssetSubType.html":{"name":"QMUIAssetSubType","abstract":"<p>Undocumented</p>"},"Enums/QMUIAssetDownloadStatus.html":{"name":"QMUIAssetDownloadStatus","abstract":"<p>Status when download asset from iCloud</p>"},"Enums/QMUIAlbumContentType.html":{"name":"QMUIAlbumContentType","abstract":"<p>相册展示内容的类型</p>"},"Enums/QMUIAlbumSortType.html":{"name":"QMUIAlbumSortType","abstract":"<p>相册展示内容按日期排序的方式</p>"},"Enums/QMUIAssetAuthorizationStatus.html":{"name":"QMUIAssetAuthorizationStatus","abstract":"<p>Asset 授权的状态</p>"},"Enums/QMUIImagePreviewMediaType.html":{"name":"QMUIImagePreviewMediaType","abstract":"<p>Undocumented</p>"},"Enums/QMUIImagePreviewViewControllerTransitioningStyle.html":{"name":"QMUIImagePreviewViewControllerTransitioningStyle","abstract":"<p>Undocumented</p>"},"Enums/QMUIAnimationEasings.html":{"name":"QMUIAnimationEasings","abstract":"<p>Undocumented</p>"},"Enums/QMUIPopupContainerViewLayoutDirection.html":{"name":"QMUIPopupContainerViewLayoutDirection","abstract":"<p>Undocumented</p>"},"Enums/QMUILogLevel.html":{"name":"QMUILogLevel","abstract":"<p>Undocumented</p>"},"Enums/QMUIButtonImagePosition.html":{"name":"QMUIButtonImagePosition","abstract":"<p>控制图片在UIButton里的位置，默认为QMUIButtonImagePositionLeft</p>"},"Enums/QMUIFillButtonColor.html":{"name":"QMUIFillButtonColor","abstract":"<p>Undocumented</p>"},"Enums/QMUIGhostButtonColor.html":{"name":"QMUIGhostButtonColor","abstract":"<p>Undocumented</p>"},"Enums/QMUIToolbarButtonType.html":{"name":"QMUIToolbarButtonType","abstract":"<p>Undocumented</p>"},"Enums/QMUINavigationButtonType.html":{"name":"QMUINavigationButtonType","abstract":"<p>Undocumented</p>"},"Enums/QMUINavigationTitleViewStyle.html":{"name":"QMUINavigationTitleViewStyle","abstract":"<p>设置title和subTitle的布局方式，默认是水平布局。</p>"},"Enums/QMUINavigationTitleViewAccessoryType.html":{"name":"QMUINavigationTitleViewAccessoryType","abstract":"<p>设置titleView的样式，默认没有任何修饰</p>"},"Enums/QMUIPieProgressViewShape.html":{"name":"QMUIPieProgressViewShape","abstract":"<p>饼状进度条控件</p>"},"Enums/QMUITableViewHeaderFooterViewType.html":{"name":"QMUITableViewHeaderFooterViewType","abstract":"<p>Undocumented</p>"},"Enums/QMUICollectionViewPagingLayoutStyle.html":{"name":"QMUICollectionViewPagingLayoutStyle","abstract":"<p>Undocumented</p>"},"Constants.html#/c:@QMUIImagePreviewViewControllerCornerRadiusAutomaticDimension":{"name":"QMUIImagePreviewViewControllerCornerRadiusAutomaticDimension","abstract":"<p>Undocumented</p>"},"Constants.html#/c:@QMUIThemeDidChangeNotification":{"name":"QMUIThemeDidChangeNotification","abstract":"<p>当主题发生变化时发出这个通知，会先于 UIViewController/UIView 的 qmui_themeDidChangeByManager:identifier:theme:</p>"},"Constants.html#/c:@QMUIThemeManagerNameDefault":{"name":"QMUIThemeManagerNameDefault","abstract":"<p>Undocumented</p>"},"Constants.html#/c:@QMUILoggerAllNamesKeyInUserDefaults":{"name":"QMUILoggerAllNamesKeyInUserDefaults","abstract":"<p>所有 QMUILog 的 name 都会以这个 key 存储到 NSUserDefaults 里（类型为 NSDictionary<NSString *, NSNumber *> *），可通过 dictionaryForKey: 获取到所有的 name 及对应的 enabled 状态。</p>"},"Constants.html#/c:@QMUIFloatLayoutViewAutomaticalMaximumItemSize":{"name":"QMUIFloatLayoutViewAutomaticalMaximumItemSize","abstract":"<p>用于属性 maximumItemSize，是它的默认值。表示 item 的最大宽高会自动根据当前 floatLayoutView 的内容大小来调整，从而避免 item 内容过多时可能溢出 floatLayoutView。</p>"},"Constants.html#/c:@QMUIFillButtonCornerRadiusAdjustsBounds":{"name":"QMUIFillButtonCornerRadiusAdjustsBounds","abstract":"<p>用于 <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/QMUIFillButton.html#/c:objc(cs)QMUIFillButton(py)cornerRadius\">QMUIFillButton.cornerRadius</a></code> 属性，当 <code>cornerRadius</code> 为 <code>QMUIFillButtonCornerRadiusAdjustsBounds</code> 时，<code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/QMUIFillButton.html\">QMUIFillButton</a></code> 会在高度变化时自动调整 <code>cornerRadius</code>，使其始终保持为高度的 1/2。</p>"},"Constants.html#/c:@QMUIGhostButtonCornerRadiusAdjustsBounds":{"name":"QMUIGhostButtonCornerRadiusAdjustsBounds","abstract":"<p>用于 <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/QMUIGhostButton.html#/c:objc(cs)QMUIGhostButton(py)cornerRadius\">QMUIGhostButton.cornerRadius</a></code> 属性，当 <code>cornerRadius</code> 为 <code>QMUIGhostButtonCornerRadiusAdjustsBounds</code> 时，<code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/QMUIGhostButton.html\">QMUIGhostButton</a></code> 会在高度变化时自动调整 <code>cornerRadius</code>，使其始终保持为高度的 1/2。</p>"},"Constants.html#/c:@QMUIDialogSelectionViewControllerSelectedItemIndexNone":{"name":"QMUIDialogSelectionViewControllerSelectedItemIndexNone","abstract":"<p>表示没有选中的item</p>"},"Constants.html#/c:@QMUICollectionViewPagingLayoutRotationRadiusAutomatic":{"name":"QMUICollectionViewPagingLayoutRotationRadiusAutomatic","abstract":"<p>Undocumented</p>"},"Constants.html#/c:@QMUITipsAutomaticallyHideToastSeconds":{"name":"QMUITipsAutomaticallyHideToastSeconds","abstract":"<p>Undocumented</p>"},"Classes/QMUIAppearance.html#/c:objc(cs)QMUIAppearance(cm)appearanceForClass:":{"name":"+appearanceForClass:","abstract":"<p>获取指定 Class 的 appearance 对象，每个 Class 全局只会存在一个 appearance 对象。</p>","parent_name":"QMUIAppearance"},"Classes/QMUIEmotionView.html#/c:objc(cs)QMUIEmotionView(py)emotions":{"name":"emotions","abstract":"<p>要展示的所有表情</p>","parent_name":"QMUIEmotionView"},"Classes/QMUIEmotionView.html#/c:objc(cs)QMUIEmotionView(py)didSelectEmotionBlock":{"name":"didSelectEmotionBlock","abstract":"<p>选中表情时的回调","parent_name":"QMUIEmotionView"},"Classes/QMUIEmotionView.html#/c:objc(cs)QMUIEmotionView(py)didSelectDeleteButtonBlock":{"name":"didSelectDeleteButtonBlock","abstract":"<p>删除按钮的点击事件回调</p>","parent_name":"QMUIEmotionView"},"Classes/QMUIEmotionView.html#/c:objc(cs)QMUIEmotionView(py)collectionView":{"name":"collectionView","abstract":"<p>用于展示表情面板的横向滚动collectionView，布局撑满整个控件</p>","parent_name":"QMUIEmotionView"},"Classes/QMUIEmotionView.html#/c:objc(cs)QMUIEmotionView(py)collectionViewLayout":{"name":"collectionViewLayout","abstract":"<p>用于横向按页滚动的collectionViewLayout</p>","parent_name":"QMUIEmotionView"},"Classes/QMUIEmotionView.html#/c:objc(cs)QMUIEmotionView(py)pageControl":{"name":"pageControl","abstract":"<p>控件底部的分页控件，可点击切换表情页面</p>","parent_name":"QMUIEmotionView"},"Classes/QMUIEmotionView.html#/c:objc(cs)QMUIEmotionView(py)sendButton":{"name":"sendButton","abstract":"<p>控件右下角的发送按钮</p>","parent_name":"QMUIEmotionView"},"Classes/QMUIEmotionView.html#/c:objc(cs)QMUIEmotionView(py)paddingInPage":{"name":"paddingInPage","abstract":"<p>每一页表情的上下左右padding，默认为{18, 18, 65, 18}</p>","parent_name":"QMUIEmotionView"},"Classes/QMUIEmotionView.html#/c:objc(cs)QMUIEmotionView(py)numberOfRowsPerPage":{"name":"numberOfRowsPerPage","abstract":"<p>每一页表情允许的最大行数，默认为4</p>","parent_name":"QMUIEmotionView"},"Classes/QMUIEmotionView.html#/c:objc(cs)QMUIEmotionView(py)emotionSize":{"name":"emotionSize","abstract":"<p>表情的图片大小，不管<code>QMUIEmotion.image.size</code>多大，都会被缩放到<code>emotionSize</code>里显示，默认为{30, 30}</p>","parent_name":"QMUIEmotionView"},"Classes/QMUIEmotionView.html#/c:objc(cs)QMUIEmotionView(py)emotionSelectedBackgroundExtension":{"name":"emotionSelectedBackgroundExtension","abstract":"<p>表情点击时的背景遮罩相对于<code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/QMUIEmotionView.html#/c:objc(cs)QMUIEmotionView(py)emotionSize\">emotionSize</a></code>往外拓展的区域，负值表示遮罩比表情还大，正值表示遮罩比表情还小，默认为{-3, -3, -3, -3}</p>","parent_name":"QMUIEmotionView"},"Classes/QMUIEmotionView.html#/c:objc(cs)QMUIEmotionView(py)minimumEmotionHorizontalSpacing":{"name":"minimumEmotionHorizontalSpacing","abstract":"<p>表情与表情之间的最小水平间距，默认为10</p>","parent_name":"QMUIEmotionView"},"Classes/QMUIEmotionView.html#/c:objc(cs)QMUIEmotionView(py)deleteButtonImage":{"name":"deleteButtonImage","abstract":"<p>表情面板右下角的删除按钮的图片，默认为<code>[QMUIHelper imageWithName:@&quot;QMUI_emotion_delete&quot;]</code></p>","parent_name":"QMUIEmotionView"},"Classes/QMUIEmotionView.html#/c:objc(cs)QMUIEmotionView(py)sendButtonTitleAttributes":{"name":"sendButtonTitleAttributes","abstract":"<p>发送按钮的文字样式，默认为{NSFontAttributeName: UIFontMake(15), NSForegroundColorAttributeName: UIColorWhite}</p>","parent_name":"QMUIEmotionView"},"Classes/QMUIEmotionView.html#/c:objc(cs)QMUIEmotionView(py)sendButtonBackgroundColor":{"name":"sendButtonBackgroundColor","abstract":"<p>发送按钮的背景色，默认为<code>UIColorBlue</code></p>","parent_name":"QMUIEmotionView"},"Classes/QMUIEmotionView.html#/c:objc(cs)QMUIEmotionView(py)sendButtonCornerRadius":{"name":"sendButtonCornerRadius","abstract":"<p>发送按钮的圆角大小，默认为4</p>","parent_name":"QMUIEmotionView"},"Classes/QMUIEmotionView.html#/c:objc(cs)QMUIEmotionView(py)sendButtonMargins":{"name":"sendButtonMargins","abstract":"<p>发送按钮布局时的外边距，相对于控件右下角。仅right/bottom有效，默认为{0, 0, 16, 16}</p>","parent_name":"QMUIEmotionView"},"Classes/QMUIEmotionView.html#/c:objc(cs)QMUIEmotionView(py)pageControlMarginBottom":{"name":"pageControlMarginBottom","abstract":"<p>分页控件距离底部的间距，默认为22</p>","parent_name":"QMUIEmotionView"},"Classes/QMUIEmotion.html#/c:objc(cs)QMUIEmotion(py)identifier":{"name":"identifier","abstract":"<p>当前表情的标识符，可用于区分不同表情</p>","parent_name":"QMUIEmotion"},"Classes/QMUIEmotion.html#/c:objc(cs)QMUIEmotion(py)displayName":{"name":"displayName","abstract":"<p>当前表情展示出来的名字，可用于输入框里的占位文字，请务必使用统一的左右标识符将表情名称包裹起来（例如常见的“[]”），否则在 <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/QMUIEmotionInputManager.html\">QMUIEmotionInputManager</a></code> 里会因为找不到标识符而无法准确识别出一串文本里的哪些字符是代表一个表情。合法的 displayName 例子：“[委屈]”</p>","parent_name":"QMUIEmotion"},"Classes/QMUIEmotion.html#/c:objc(cs)QMUIEmotion(py)image":{"name":"image","abstract":"<p>表情对应的图片。若表情图片存放于项目内，则建议用当前表情的<code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/QMUIEmotion.html#/c:objc(cs)QMUIEmotion(py)identifier\">identifier</a></code>作为图片名</p>","parent_name":"QMUIEmotion"},"Classes/QMUIEmotion.html#/c:objc(cs)QMUIEmotion(cm)emotionWithIdentifier:displayName:":{"name":"+emotionWithIdentifier:displayName:","abstract":"<p>快速生成一个<code>QMUIEmotion</code>对象，并且以<code>identifier</code>为图片名在当前项目里查找，作为表情的图片</p>","parent_name":"QMUIEmotion"},"Classes/QMUITextView.html#/c:objc(cs)QMUITextView(py)delegate":{"name":"delegate","abstract":"<p>Undocumented</p>","parent_name":"QMUITextView"},"Classes/QMUITextView.html#/c:objc(cs)QMUITextView(py)shouldResponseToProgrammaticallyTextChanges":{"name":"shouldResponseToProgrammaticallyTextChanges","abstract":"<p>当通过 <code>setText:</code>、<code>setAttributedText:</code>等方式修改文字时，是否应该自动触发 <code>UITextViewDelegate</code> 里的 <code>textView:shouldChangeTextInRange:replacementText:</code>、 <code>textViewDidChange:</code> 方法</p>","parent_name":"QMUITextView"},"Classes/QMUITextView.html#/c:objc(cs)QMUITextView(py)maximumTextLength":{"name":"maximumTextLength","abstract":"<p>显示允许输入的最大文字长度，默认为 NSUIntegerMax，也即不限制长度。</p>","parent_name":"QMUITextView"},"Classes/QMUITextView.html#/c:objc(cs)QMUITextView(py)shouldCountingNonASCIICharacterAsTwo":{"name":"shouldCountingNonASCIICharacterAsTwo","abstract":"<p>在使用 maximumTextLength 功能的时候，是否应该把文字长度按照 [NSString (QMUI) qmui_lengthWhenCountingNonASCIICharacterAsTwo] 的方法来计算。","parent_name":"QMUITextView"},"Classes/QMUITextView.html#/c:objc(cs)QMUITextView(py)placeholder":{"name":"placeholder","abstract":"<p>placeholder 的文字</p>","parent_name":"QMUITextView"},"Classes/QMUITextView.html#/c:objc(cs)QMUITextView(py)placeholderColor":{"name":"placeholderColor","abstract":"<p>placeholder 文字的颜色</p>","parent_name":"QMUITextView"},"Classes/QMUITextView.html#/c:objc(cs)QMUITextView(py)placeholderMargins":{"name":"placeholderMargins","abstract":"<p>placeholder 在默认位置上的偏移（默认位置会自动根据 textContainerInset、contentInset 来调整）</p>","parent_name":"QMUITextView"},"Classes/QMUITextView.html#/c:objc(cs)QMUITextView(py)maximumHeight":{"name":"maximumHeight","abstract":"<p>最大高度，当设置了这个属性后，超过这个高度值的 frame 是不生效的。默认为 CGFLOAT_MAX，也即无限制。</p>","parent_name":"QMUITextView"},"Classes/QMUITextView.html#/c:objc(cs)QMUITextView(py)canPerformPasteActionBlock":{"name":"canPerformPasteActionBlock","abstract":"<p>控制输入框是否要出现“粘贴”menu</p>","parent_name":"QMUITextView"},"Classes/QMUITextView.html#/c:objc(cs)QMUITextView(py)pasteBlock":{"name":"pasteBlock","abstract":"<p>当输入框的“粘贴”事件被触发时，可通过这个 block 去接管事件的响应。</p>","parent_name":"QMUITextView"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(im)showLoading":{"name":"-showLoading","abstract":"<p>实例方法：需要自己addSubview，hide之后不会自动removeFromSuperView</p>","parent_name":"QMUITips"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(im)showLoading:":{"name":"-showLoading:","abstract":"<p>Undocumented</p>","parent_name":"QMUITips"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(im)showLoadingHideAfterDelay:":{"name":"-showLoadingHideAfterDelay:","abstract":"<p>Undocumented</p>","parent_name":"QMUITips"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(im)showLoading:hideAfterDelay:":{"name":"-showLoading:hideAfterDelay:","abstract":"<p>Undocumented</p>","parent_name":"QMUITips"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(im)showLoading:detailText:":{"name":"-showLoading:detailText:","abstract":"<p>Undocumented</p>","parent_name":"QMUITips"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(im)showLoading:detailText:hideAfterDelay:":{"name":"-showLoading:detailText:hideAfterDelay:","abstract":"<p>Undocumented</p>","parent_name":"QMUITips"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(im)showWithText:":{"name":"-showWithText:","abstract":"<p>Undocumented</p>","parent_name":"QMUITips"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(im)showWithText:hideAfterDelay:":{"name":"-showWithText:hideAfterDelay:","abstract":"<p>Undocumented</p>","parent_name":"QMUITips"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(im)showWithText:detailText:":{"name":"-showWithText:detailText:","abstract":"<p>Undocumented</p>","parent_name":"QMUITips"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(im)showWithText:detailText:hideAfterDelay:":{"name":"-showWithText:detailText:hideAfterDelay:","abstract":"<p>Undocumented</p>","parent_name":"QMUITips"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(im)showSucceed:":{"name":"-showSucceed:","abstract":"<p>Undocumented</p>","parent_name":"QMUITips"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(im)showSucceed:hideAfterDelay:":{"name":"-showSucceed:hideAfterDelay:","abstract":"<p>Undocumented</p>","parent_name":"QMUITips"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(im)showSucceed:detailText:":{"name":"-showSucceed:detailText:","abstract":"<p>Undocumented</p>","parent_name":"QMUITips"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(im)showSucceed:detailText:hideAfterDelay:":{"name":"-showSucceed:detailText:hideAfterDelay:","abstract":"<p>Undocumented</p>","parent_name":"QMUITips"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(im)showError:":{"name":"-showError:","abstract":"<p>Undocumented</p>","parent_name":"QMUITips"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(im)showError:hideAfterDelay:":{"name":"-showError:hideAfterDelay:","abstract":"<p>Undocumented</p>","parent_name":"QMUITips"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(im)showError:detailText:":{"name":"-showError:detailText:","abstract":"<p>Undocumented</p>","parent_name":"QMUITips"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(im)showError:detailText:hideAfterDelay:":{"name":"-showError:detailText:hideAfterDelay:","abstract":"<p>Undocumented</p>","parent_name":"QMUITips"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(im)showInfo:":{"name":"-showInfo:","abstract":"<p>Undocumented</p>","parent_name":"QMUITips"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(im)showInfo:hideAfterDelay:":{"name":"-showInfo:hideAfterDelay:","abstract":"<p>Undocumented</p>","parent_name":"QMUITips"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(im)showInfo:detailText:":{"name":"-showInfo:detailText:","abstract":"<p>Undocumented</p>","parent_name":"QMUITips"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(im)showInfo:detailText:hideAfterDelay:":{"name":"-showInfo:detailText:hideAfterDelay:","abstract":"<p>Undocumented</p>","parent_name":"QMUITips"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(cm)createTipsToView:":{"name":"+createTipsToView:","abstract":"<p>类方法：主要用在局部一次性使用的场景，hide之后会自动removeFromSuperView</p>","parent_name":"QMUITips"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(cm)showLoadingInView:":{"name":"+showLoadingInView:","abstract":"<p>Undocumented</p>","parent_name":"QMUITips"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(cm)showLoading:inView:":{"name":"+showLoading:inView:","abstract":"<p>Undocumented</p>","parent_name":"QMUITips"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(cm)showLoadingInView:hideAfterDelay:":{"name":"+showLoadingInView:hideAfterDelay:","abstract":"<p>Undocumented</p>","parent_name":"QMUITips"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(cm)showLoading:inView:hideAfterDelay:":{"name":"+showLoading:inView:hideAfterDelay:","abstract":"<p>Undocumented</p>","parent_name":"QMUITips"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(cm)showLoading:detailText:inView:":{"name":"+showLoading:detailText:inView:","abstract":"<p>Undocumented</p>","parent_name":"QMUITips"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(cm)showLoading:detailText:inView:hideAfterDelay:":{"name":"+showLoading:detailText:inView:hideAfterDelay:","abstract":"<p>Undocumented</p>","parent_name":"QMUITips"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(cm)showWithText:":{"name":"+showWithText:","abstract":"<p>Undocumented</p>","parent_name":"QMUITips"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(cm)showWithText:detailText:":{"name":"+showWithText:detailText:","abstract":"<p>Undocumented</p>","parent_name":"QMUITips"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(cm)showWithText:inView:":{"name":"+showWithText:inView:","abstract":"<p>Undocumented</p>","parent_name":"QMUITips"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(cm)showWithText:inView:hideAfterDelay:":{"name":"+showWithText:inView:hideAfterDelay:","abstract":"<p>Undocumented</p>","parent_name":"QMUITips"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(cm)showWithText:detailText:inView:":{"name":"+showWithText:detailText:inView:","abstract":"<p>Undocumented</p>","parent_name":"QMUITips"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(cm)showWithText:detailText:inView:hideAfterDelay:":{"name":"+showWithText:detailText:inView:hideAfterDelay:","abstract":"<p>Undocumented</p>","parent_name":"QMUITips"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(cm)showSucceed:":{"name":"+showSucceed:","abstract":"<p>Undocumented</p>","parent_name":"QMUITips"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(cm)showSucceed:detailText:":{"name":"+showSucceed:detailText:","abstract":"<p>Undocumented</p>","parent_name":"QMUITips"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(cm)showSucceed:inView:":{"name":"+showSucceed:inView:","abstract":"<p>Undocumented</p>","parent_name":"QMUITips"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(cm)showSucceed:inView:hideAfterDelay:":{"name":"+showSucceed:inView:hideAfterDelay:","abstract":"<p>Undocumented</p>","parent_name":"QMUITips"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(cm)showSucceed:detailText:inView:":{"name":"+showSucceed:detailText:inView:","abstract":"<p>Undocumented</p>","parent_name":"QMUITips"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(cm)showSucceed:detailText:inView:hideAfterDelay:":{"name":"+showSucceed:detailText:inView:hideAfterDelay:","abstract":"<p>Undocumented</p>","parent_name":"QMUITips"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(cm)showError:":{"name":"+showError:","abstract":"<p>Undocumented</p>","parent_name":"QMUITips"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(cm)showError:detailText:":{"name":"+showError:detailText:","abstract":"<p>Undocumented</p>","parent_name":"QMUITips"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(cm)showError:inView:":{"name":"+showError:inView:","abstract":"<p>Undocumented</p>","parent_name":"QMUITips"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(cm)showError:inView:hideAfterDelay:":{"name":"+showError:inView:hideAfterDelay:","abstract":"<p>Undocumented</p>","parent_name":"QMUITips"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(cm)showError:detailText:inView:":{"name":"+showError:detailText:inView:","abstract":"<p>Undocumented</p>","parent_name":"QMUITips"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(cm)showError:detailText:inView:hideAfterDelay:":{"name":"+showError:detailText:inView:hideAfterDelay:","abstract":"<p>Undocumented</p>","parent_name":"QMUITips"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(cm)showInfo:":{"name":"+showInfo:","abstract":"<p>Undocumented</p>","parent_name":"QMUITips"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(cm)showInfo:detailText:":{"name":"+showInfo:detailText:","abstract":"<p>Undocumented</p>","parent_name":"QMUITips"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(cm)showInfo:inView:":{"name":"+showInfo:inView:","abstract":"<p>Undocumented</p>","parent_name":"QMUITips"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(cm)showInfo:inView:hideAfterDelay:":{"name":"+showInfo:inView:hideAfterDelay:","abstract":"<p>Undocumented</p>","parent_name":"QMUITips"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(cm)showInfo:detailText:inView:":{"name":"+showInfo:detailText:inView:","abstract":"<p>Undocumented</p>","parent_name":"QMUITips"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(cm)showInfo:detailText:inView:hideAfterDelay:":{"name":"+showInfo:detailText:inView:hideAfterDelay:","abstract":"<p>Undocumented</p>","parent_name":"QMUITips"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(cm)hideAllTipsInView:":{"name":"+hideAllTipsInView:","abstract":"<p>隐藏 tips</p>","parent_name":"QMUITips"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(cm)hideAllTips":{"name":"+hideAllTips","abstract":"<p>Undocumented</p>","parent_name":"QMUITips"},"Classes/QMUITips.html#/c:objc(cs)QMUITips(cm)smartDelaySecondsForTipsText:":{"name":"+smartDelaySecondsForTipsText:","abstract":"<p>自动隐藏 toast 可以使用这个方法自动计算秒数</p>","parent_name":"QMUITips"},"Classes/QMUICollectionViewPagingLayout.html#/c:objc(cs)QMUICollectionViewPagingLayout(im)initWithStyle:":{"name":"-initWithStyle:","abstract":"<p>Undocumented</p>","parent_name":"QMUICollectionViewPagingLayout"},"Classes/QMUICollectionViewPagingLayout.html#/c:objc(cs)QMUICollectionViewPagingLayout(py)style":{"name":"style","abstract":"<p>Undocumented</p>","parent_name":"QMUICollectionViewPagingLayout"},"Classes/QMUICollectionViewPagingLayout.html#/c:objc(cs)QMUICollectionViewPagingLayout(py)velocityForEnsurePageDown":{"name":"velocityForEnsurePageDown","abstract":"<p>规定超过这个滚动速度就强制翻页，从而使翻页更容易触发。默认为 0.4</p>","parent_name":"QMUICollectionViewPagingLayout"},"Classes/QMUICollectionViewPagingLayout.html#/c:objc(cs)QMUICollectionViewPagingLayout(py)allowsMultipleItemScroll":{"name":"allowsMultipleItemScroll","abstract":"<p>是否支持一次滑动可以滚动多个 item，默认为 YES</p>","parent_name":"QMUICollectionViewPagingLayout"},"Classes/QMUICollectionViewPagingLayout.html#/c:objc(cs)QMUICollectionViewPagingLayout(py)multipleItemScrollVelocityLimit":{"name":"multipleItemScrollVelocityLimit","abstract":"<p>规定了当支持一次滑动允许滚动多个 item 的时候，滑动速度要达到多少才会滚动多个 item，默认为 2.5</p>","parent_name":"QMUICollectionViewPagingLayout"},"Classes/QMUICollectionViewPagingLayout.html#/c:objc(cs)QMUICollectionViewPagingLayout(py)pagingThreshold":{"name":"pagingThreshold","abstract":"<p>当前 cell 的百分之多少滚过临界点时就会触发滚到下一张的动作，默认为 .666，也即超过 2/3 即会滚到下一张。","parent_name":"QMUICollectionViewPagingLayout"},"Classes/QMUICollectionViewPagingLayout.html#/c:objc(cs)QMUICollectionViewPagingLayout(py)debug":{"name":"debug","abstract":"<p>打开时，会在 collectionView.backgroundView 上添加一条红线，用来标志分页的参考点位置。仅对 Default style 有效。</p>","parent_name":"QMUICollectionViewPagingLayout"},"Classes/QMUICollectionViewPagingLayout.html#/c:objc(cs)QMUICollectionViewPagingLayout(py)maximumScale":{"name":"maximumScale","abstract":"<p>中间那张卡片基于初始大小的缩放倍数，默认为 1.0</p>","parent_name":"QMUICollectionViewPagingLayout"},"Classes/QMUICollectionViewPagingLayout.html#/c:objc(cs)QMUICollectionViewPagingLayout(py)minimumScale":{"name":"minimumScale","abstract":"<p>除了中间之外的其他卡片基于初始大小的缩放倍数，默认为 0.9</p>","parent_name":"QMUICollectionViewPagingLayout"},"Classes/QMUICollectionViewPagingLayout.html#/c:objc(cs)QMUICollectionViewPagingLayout(py)rotationRatio":{"name":"rotationRatio","abstract":"<p>旋转卡片相关","parent_name":"QMUICollectionViewPagingLayout"},"Classes/QMUICollectionViewPagingLayout.html#/c:objc(cs)QMUICollectionViewPagingLayout(py)rotationRadius":{"name":"rotationRadius","abstract":"<p>Undocumented</p>","parent_name":"QMUICollectionViewPagingLayout"},"Classes/QMUIMarqueeLabel.html#/c:objc(cs)QMUIMarqueeLabel(py)speed":{"name":"speed","abstract":"<p>控制滚动的速度，1 表示一帧滚动 1pt，10 表示一帧滚动 10pt，默认为 .5，与系统一致。</p>","parent_name":"QMUIMarqueeLabel"},"Classes/QMUIMarqueeLabel.html#/c:objc(cs)QMUIMarqueeLabel(py)pauseDurationWhenMoveToEdge":{"name":"pauseDurationWhenMoveToEdge","abstract":"<p>当文字第一次显示在界面上，以及重复滚动到开头时都要停顿一下，这个属性控制停顿的时长，默认为 2.5（也是与系统一致），单位为秒。</p>","parent_name":"QMUIMarqueeLabel"},"Classes/QMUIMarqueeLabel.html#/c:objc(cs)QMUIMarqueeLabel(py)spacingBetweenHeadToTail":{"name":"spacingBetweenHeadToTail","abstract":"<p>用于控制首尾连接的文字之间的间距，默认为 40pt。</p>","parent_name":"QMUIMarqueeLabel"},"Classes/QMUIMarqueeLabel.html#/c:objc(cs)QMUIMarqueeLabel(py)fadeWidthPercent":{"name":"fadeWidthPercent","abstract":"<p>Undocumented</p>","parent_name":"QMUIMarqueeLabel"},"Classes/QMUIMarqueeLabel.html#/c:objc(cs)QMUIMarqueeLabel(py)automaticallyValidateVisibleFrame":{"name":"automaticallyValidateVisibleFrame","abstract":"<p>自动判断 label 的 frame 是否超出当前的 UIWindow 可视范围，超出则自动停止动画。默认为 YES。</p>","parent_name":"QMUIMarqueeLabel"},"Classes/QMUIMarqueeLabel.html#/c:objc(cs)QMUIMarqueeLabel(py)shouldFadeAtEdge":{"name":"shouldFadeAtEdge","abstract":"<p>在文字滚动到左右边缘时，是否要显示一个阴影渐变遮罩，默认为 YES。</p>","parent_name":"QMUIMarqueeLabel"},"Classes/QMUIMarqueeLabel.html#/c:objc(cs)QMUIMarqueeLabel(py)textStartAfterFade":{"name":"textStartAfterFade","abstract":"<p>YES 表示文字会在打开 shouldFadeAtEdge 的情况下，从左边的渐隐区域之后显示，NO 表示不管有没有打开 shouldFadeAtEdge，都会从 label 的边缘开始显示。默认为 NO。</p>","parent_name":"QMUIMarqueeLabel"},"Classes/QMUIMarqueeLabel.html#/c:objc(cs)QMUIMarqueeLabel(im)requestToStartAnimation":{"name":"-requestToStartAnimation","abstract":"<p>尝试开启 label 的滚动动画</p>","parent_name":"QMUIMarqueeLabel"},"Classes/QMUIMarqueeLabel.html#/c:objc(cs)QMUIMarqueeLabel(im)requestToStopAnimation":{"name":"-requestToStopAnimation","abstract":"<p>尝试停止 label 的滚动动画</p>","parent_name":"QMUIMarqueeLabel"},"Classes/QMUISlider.html#/c:objc(cs)QMUISlider(py)trackHeight":{"name":"trackHeight","abstract":"<p>背后导轨的高度，默认为 0，表示使用系统默认的高度。</p>","parent_name":"QMUISlider"},"Classes/QMUISlider.html#/c:objc(cs)QMUISlider(py)thumbSize":{"name":"thumbSize","abstract":"<p>中间圆球的大小，默认为 CGSizeZero</p>","parent_name":"QMUISlider"},"Classes/QMUISlider.html#/c:objc(cs)QMUISlider(py)thumbColor":{"name":"thumbColor","abstract":"<p>中间圆球的颜色，默认为 nil。</p>","parent_name":"QMUISlider"},"Classes/QMUISlider.html#/c:objc(cs)QMUISlider(py)thumbShadowColor":{"name":"thumbShadowColor","abstract":"<p>中间圆球的阴影颜色，默认为 nil</p>","parent_name":"QMUISlider"},"Classes/QMUISlider.html#/c:objc(cs)QMUISlider(py)thumbShadowOffset":{"name":"thumbShadowOffset","abstract":"<p>中间圆球的阴影偏移值，默认为 CGSizeZero</p>","parent_name":"QMUISlider"},"Classes/QMUISlider.html#/c:objc(cs)QMUISlider(py)thumbShadowRadius":{"name":"thumbShadowRadius","abstract":"<p>中间圆球的阴影扩散度，默认为 0</p>","parent_name":"QMUISlider"},"Classes/QMUIOrderedDictionary.html#/c:objc(cs)QMUIOrderedDictionary(im)initWithKeysAndObjects:":{"name":"-initWithKeysAndObjects:","abstract":"<p>Undocumented</p>","parent_name":"QMUIOrderedDictionary"},"Classes/QMUIOrderedDictionary.html#/c:objc(cs)QMUIOrderedDictionary(py)count":{"name":"count","abstract":"<p>Undocumented</p>","parent_name":"QMUIOrderedDictionary"},"Classes/QMUIOrderedDictionary.html#/c:objc(cs)QMUIOrderedDictionary(py)allKeys":{"name":"allKeys","abstract":"<p>Undocumented</p>","parent_name":"QMUIOrderedDictionary"},"Classes/QMUIOrderedDictionary.html#/c:objc(cs)QMUIOrderedDictionary(im)setObject:forKey:":{"name":"-setObject:forKey:","abstract":"<p>Undocumented</p>","parent_name":"QMUIOrderedDictionary"},"Classes/QMUIOrderedDictionary.html#/c:objc(cs)QMUIOrderedDictionary(im)addObject:forKey:":{"name":"-addObject:forKey:","abstract":"<p>Undocumented</p>","parent_name":"QMUIOrderedDictionary"},"Classes/QMUIOrderedDictionary.html#/c:objc(cs)QMUIOrderedDictionary(im)addObjects:forKeys:":{"name":"-addObjects:forKeys:","abstract":"<p>Undocumented</p>","parent_name":"QMUIOrderedDictionary"},"Classes/QMUIOrderedDictionary.html#/c:objc(cs)QMUIOrderedDictionary(im)insertObject:forKey:atIndex:":{"name":"-insertObject:forKey:atIndex:","abstract":"<p>Undocumented</p>","parent_name":"QMUIOrderedDictionary"},"Classes/QMUIOrderedDictionary.html#/c:objc(cs)QMUIOrderedDictionary(im)insertObjects:forKeys:atIndex:":{"name":"-insertObjects:forKeys:atIndex:","abstract":"<p>Undocumented</p>","parent_name":"QMUIOrderedDictionary"},"Classes/QMUIOrderedDictionary.html#/c:objc(cs)QMUIOrderedDictionary(im)removeObject:forKey:":{"name":"-removeObject:forKey:","abstract":"<p>Undocumented</p>","parent_name":"QMUIOrderedDictionary"},"Classes/QMUIOrderedDictionary.html#/c:objc(cs)QMUIOrderedDictionary(im)removeObject:atIndex:":{"name":"-removeObject:atIndex:","abstract":"<p>Undocumented</p>","parent_name":"QMUIOrderedDictionary"},"Classes/QMUIOrderedDictionary.html#/c:objc(cs)QMUIOrderedDictionary(im)objectForKey:":{"name":"-objectForKey:","abstract":"<p>Undocumented</p>","parent_name":"QMUIOrderedDictionary"},"Classes/QMUIOrderedDictionary.html#/c:objc(cs)QMUIOrderedDictionary(im)objectAtIndex:":{"name":"-objectAtIndex:","abstract":"<p>Undocumented</p>","parent_name":"QMUIOrderedDictionary"},"Classes/QMUIOrderedDictionary.html#/c:objc(cs)QMUIOrderedDictionary(im)objectForKeyedSubscript:":{"name":"-objectForKeyedSubscript:","abstract":"<p>Undocumented</p>","parent_name":"QMUIOrderedDictionary"},"Classes/QMUIOrderedDictionary.html#/c:objc(cs)QMUIOrderedDictionary(im)objectAtIndexedSubscript:":{"name":"-objectAtIndexedSubscript:","abstract":"<p>Undocumented</p>","parent_name":"QMUIOrderedDictionary"},"Classes/QMUIEmotionInputManager.html#/c:objc(cs)QMUIEmotionInputManager(py)boundTextField":{"name":"boundTextField","abstract":"<p>要绑定的 UITextField</p>","parent_name":"QMUIEmotionInputManager"},"Classes/QMUIEmotionInputManager.html#/c:objc(cs)QMUIEmotionInputManager(py)boundTextView":{"name":"boundTextView","abstract":"<p>要绑定的 UITextView</p>","parent_name":"QMUIEmotionInputManager"},"Classes/QMUIEmotionInputManager.html#/c:objc(cs)QMUIEmotionInputManager(py)selectedRangeForBoundTextInput":{"name":"selectedRangeForBoundTextInput","abstract":"<p><code>selectedRangeForBoundTextInput</code>决定了表情将会被插入（删除）的位置，因此使用控件的时候需要及时更新它。</p>","parent_name":"QMUIEmotionInputManager"},"Classes/QMUIEmotionInputManager.html#/c:objc(cs)QMUIEmotionInputManager(py)emotionView":{"name":"emotionView","abstract":"<p>表情面板，已被设置了默认的<code>didSelectEmotionBlock</code>和<code>didSelectDeleteButtonBlock</code>，在<code>QMUIEmotionInputManager</code>初始化完后，即可将<code>emotionView</code>添加到界面上。</p>","parent_name":"QMUIEmotionInputManager"},"Classes/QMUIEmotionInputManager.html#/c:objc(cs)QMUIEmotionInputManager(im)deleteEmotionDisplayNameAtCurrentSelectedRangeForce:":{"name":"-deleteEmotionDisplayNameAtCurrentSelectedRangeForce:","abstract":"<p>将当前光标所在位置的表情删除，在调用前请注意更新<code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/QMUIEmotionInputManager.html#/c:objc(cs)QMUIEmotionInputManager(py)selectedRangeForBoundTextInput\">selectedRangeForBoundTextInput</a></code></p>","parent_name":"QMUIEmotionInputManager"},"Classes/QMUIEmotionInputManager.html#/c:objc(cs)QMUIEmotionInputManager(im)shouldTakeOverControlDeleteKeyWithChangeTextInRange:replacementText:":{"name":"-shouldTakeOverControlDeleteKeyWithChangeTextInRange:replacementText:","parent_name":"QMUIEmotionInputManager"},"Classes/QMUITableViewHeaderFooterView.html#/c:objc(cs)QMUITableViewHeaderFooterView(py)parentTableView":{"name":"parentTableView","abstract":"<p>Undocumented</p>","parent_name":"QMUITableViewHeaderFooterView"},"Classes/QMUITableViewHeaderFooterView.html#/c:objc(cs)QMUITableViewHeaderFooterView(py)type":{"name":"type","abstract":"<p>Undocumented</p>","parent_name":"QMUITableViewHeaderFooterView"},"Classes/QMUITableViewHeaderFooterView.html#/c:objc(cs)QMUITableViewHeaderFooterView(py)titleLabel":{"name":"titleLabel","abstract":"<p>Undocumented</p>","parent_name":"QMUITableViewHeaderFooterView"},"Classes/QMUITableViewHeaderFooterView.html#/c:objc(cs)QMUITableViewHeaderFooterView(py)accessoryView":{"name":"accessoryView","abstract":"<p>Undocumented</p>","parent_name":"QMUITableViewHeaderFooterView"},"Classes/QMUITableViewHeaderFooterView.html#/c:objc(cs)QMUITableViewHeaderFooterView(py)contentEdgeInsets":{"name":"contentEdgeInsets","abstract":"<p>Undocumented</p>","parent_name":"QMUITableViewHeaderFooterView"},"Classes/QMUITableViewHeaderFooterView.html#/c:objc(cs)QMUITableViewHeaderFooterView(py)accessoryViewMargins":{"name":"accessoryViewMargins","abstract":"<p>Undocumented</p>","parent_name":"QMUITableViewHeaderFooterView"},"Classes/QMUITableViewHeaderFooterView.html#/c:objc(cs)QMUITableViewHeaderFooterView(im)updateAppearance":{"name":"-updateAppearance","abstract":"<p>子类重写，用于修改样式，会在 parentTableView、type 属性发生变化的时候被调用</p>","parent_name":"QMUITableViewHeaderFooterView"},"Classes/QMUIKeyboardUserInfo.html#/c:objc(cs)QMUIKeyboardUserInfo(py)keyboardManager":{"name":"keyboardManager","abstract":"<p>所在的KeyboardManager</p>","parent_name":"QMUIKeyboardUserInfo"},"Classes/QMUIKeyboardUserInfo.html#/c:objc(cs)QMUIKeyboardUserInfo(py)notification":{"name":"notification","abstract":"<p>当前键盘的notification</p>","parent_name":"QMUIKeyboardUserInfo"},"Classes/QMUIKeyboardUserInfo.html#/c:objc(cs)QMUIKeyboardUserInfo(py)originUserInfo":{"name":"originUserInfo","abstract":"<p>notification自带的userInfo</p>","parent_name":"QMUIKeyboardUserInfo"},"Classes/QMUIKeyboardUserInfo.html#/c:objc(cs)QMUIKeyboardUserInfo(py)targetResponder":{"name":"targetResponder","abstract":"<p>触发键盘事件的UIResponder，注意这里的 <code>targetResponder</code> 不一定是通过 <code>addTargetResponder:</code> 添加的 UIResponder，而是当前触发键盘事件的 UIResponder。</p>","parent_name":"QMUIKeyboardUserInfo"},"Classes/QMUIKeyboardUserInfo.html#/c:objc(cs)QMUIKeyboardUserInfo(py)width":{"name":"width","abstract":"<p>获取键盘实际宽度</p>","parent_name":"QMUIKeyboardUserInfo"},"Classes/QMUIKeyboardUserInfo.html#/c:objc(cs)QMUIKeyboardUserInfo(py)height":{"name":"height","abstract":"<p>获取键盘的实际高度</p>","parent_name":"QMUIKeyboardUserInfo"},"Classes/QMUIKeyboardUserInfo.html#/c:objc(cs)QMUIKeyboardUserInfo(im)heightInView:":{"name":"-heightInView:","abstract":"<p>获取当前键盘在view上的可见高度，也就是键盘和view重叠的高度。如果view=nil，则直接返回键盘的实际高度。</p>","parent_name":"QMUIKeyboardUserInfo"},"Classes/QMUIKeyboardUserInfo.html#/c:objc(cs)QMUIKeyboardUserInfo(py)beginFrame":{"name":"beginFrame","abstract":"<p>获取键盘beginFrame</p>","parent_name":"QMUIKeyboardUserInfo"},"Classes/QMUIKeyboardUserInfo.html#/c:objc(cs)QMUIKeyboardUserInfo(py)endFrame":{"name":"endFrame","abstract":"<p>获取键盘endFrame</p>","parent_name":"QMUIKeyboardUserInfo"},"Classes/QMUIKeyboardUserInfo.html#/c:objc(cs)QMUIKeyboardUserInfo(py)animationDuration":{"name":"animationDuration","abstract":"<p>获取键盘出现动画的duration，对于第三方键盘，这个值有可能为0</p>","parent_name":"QMUIKeyboardUserInfo"},"Classes/QMUIKeyboardUserInfo.html#/c:objc(cs)QMUIKeyboardUserInfo(py)animationCurve":{"name":"animationCurve","abstract":"<p>获取键盘动画的Curve参数</p>","parent_name":"QMUIKeyboardUserInfo"},"Classes/QMUIKeyboardUserInfo.html#/c:objc(cs)QMUIKeyboardUserInfo(py)animationOptions":{"name":"animationOptions","abstract":"<p>获取键盘动画的Options参数</p>","parent_name":"QMUIKeyboardUserInfo"},"Classes/QMUIKeyboardManager.html#/c:objc(cs)QMUIKeyboardManager(im)initWithDelegate:":{"name":"-initWithDelegate:","abstract":"<p>指定初始化方法，以 delegate 的方式将键盘事件传递给监听者</p>","parent_name":"QMUIKeyboardManager"},"Classes/QMUIKeyboardManager.html#/c:objc(cs)QMUIKeyboardManager(py)delegate":{"name":"delegate","abstract":"<p>获取当前的 delegate</p>","parent_name":"QMUIKeyboardManager"},"Classes/QMUIKeyboardManager.html#/c:objc(cs)QMUIKeyboardManager(py)delegateEnabled":{"name":"delegateEnabled","abstract":"<p>是否允许触发delegate的回调，常见的场景例如在 UIViewController viewWillAppear: 里打开，在 viewWillDisappear: 里关闭，从而避免在键盘升起的状态下手势返回时界面布局会跟着键盘往下移动。","parent_name":"QMUIKeyboardManager"},"Classes/QMUIKeyboardManager.html#/c:objc(cs)QMUIKeyboardManager(py)ignoreApplicationState":{"name":"ignoreApplicationState","abstract":"<p>是否忽视 <code>applicationState</code> 状态的影响。默认为 NO，也即只有 <code>UIApplicationStateActive</code> 才会响应通知，如果设置为 YES，则任何 state 都会响应通知。</p>","parent_name":"QMUIKeyboardManager"},"Classes/QMUIKeyboardManager.html#/c:objc(cs)QMUIKeyboardManager(im)addTargetResponder:":{"name":"-addTargetResponder:","abstract":"<p>添加触发键盘事件的 UIResponder，一般是 UITextView 或者 UITextField ，不添加 targetResponder 的话，则默认接受任何 UIResponder 产生的键盘通知。","parent_name":"QMUIKeyboardManager"},"Classes/QMUIKeyboardManager.html#/c:objc(cs)QMUIKeyboardManager(im)allTargetResponders":{"name":"-allTargetResponders","abstract":"<p>获取当前所有的 target UIResponder，若不存在则返回 nil</p>","parent_name":"QMUIKeyboardManager"},"Classes/QMUIKeyboardManager.html#/c:objc(cs)QMUIKeyboardManager(im)removeTargetResponder:":{"name":"-removeTargetResponder:","abstract":"<p>移除 targetResponder 跟 keyboardManager 的关系，如果成功会返回 YES</p>","parent_name":"QMUIKeyboardManager"},"Classes/QMUIKeyboardManager.html#/c:objc(cs)QMUIKeyboardManager(cm)convertKeyboardRect:toView:":{"name":"+convertKeyboardRect:toView:","abstract":"<p>把键盘的rect转为相对于view的rect。一般用来把键盘的rect转化为相对于当前 self.view 的 rect，然后获取 y 值来布局对应的 view（这里一般不要获取键盘的高度，因为对于iPad的键盘，浮动状态下键盘的高度往往不是我们想要的）。</p>","parent_name":"QMUIKeyboardManager"},"Classes/QMUIKeyboardManager.html#/c:objc(cs)QMUIKeyboardManager(cm)distanceFromMinYToBottomInView:keyboardRect:":{"name":"+distanceFromMinYToBottomInView:keyboardRect:","abstract":"<p>获取键盘到顶部到相对于view底部的距离，这个值在某些情况下会等于endFrame.size.height或者visibleKeyboardHeight，不过在iPad浮动键盘的时候就包括了底部的空隙。所以建议使用这个方法。</p>","parent_name":"QMUIKeyboardManager"},"Classes/QMUIKeyboardManager.html#/c:objc(cs)QMUIKeyboardManager(cm)animateWithAnimated:keyboardUserInfo:animations:completion:":{"name":"+animateWithAnimated:keyboardUserInfo:animations:completion:","abstract":"<p>根据键盘的动画参数自己构建一个动画，调用者只需要设置view的位置即可</p>","parent_name":"QMUIKeyboardManager"},"Classes/QMUIKeyboardManager.html#/c:objc(cs)QMUIKeyboardManager(cm)handleKeyboardNotificationWithUserInfo:showBlock:hideBlock:":{"name":"+handleKeyboardNotificationWithUserInfo:showBlock:hideBlock:","abstract":"<p>这个方法特殊处理 iPad Pro 外接键盘的情况。使用外接键盘在完全不显示键盘的时候，不会调用willShow的通知，所以导致一些通过willShow回调来显示targetResponder的场景（例如微信朋友圈的评论输入框）无法把targetResponder正常的显示出来。通过这个方法，你只需要关心你的show和hide的状态就好了，不需要关心是否 iPad Pro 的情况。</p>","parent_name":"QMUIKeyboardManager"},"Classes/QMUIKeyboardManager.html#/c:objc(cs)QMUIKeyboardManager(cm)keyboardView":{"name":"+keyboardView","abstract":"<p>键盘面板的私有view，可能为nil</p>","parent_name":"QMUIKeyboardManager"},"Classes/QMUIKeyboardManager.html#/c:objc(cs)QMUIKeyboardManager(cm)keyboardWindow":{"name":"+keyboardWindow","abstract":"<p>键盘面板所在的私有window，可能为nil</p>","parent_name":"QMUIKeyboardManager"},"Classes/QMUIKeyboardManager.html#/c:objc(cs)QMUIKeyboardManager(cm)isKeyboardVisible":{"name":"+isKeyboardVisible","abstract":"<p>是否有键盘在显示</p>","parent_name":"QMUIKeyboardManager"},"Classes/QMUIKeyboardManager.html#/c:objc(cs)QMUIKeyboardManager(cm)currentKeyboardFrame":{"name":"+currentKeyboardFrame","abstract":"<p>当期那键盘相对于屏幕的frame</p>","parent_name":"QMUIKeyboardManager"},"Classes/QMUIKeyboardManager.html#/c:objc(cs)QMUIKeyboardManager(cm)visibleKeyboardHeight":{"name":"+visibleKeyboardHeight","abstract":"<p>当前键盘高度键盘的可见高度</p>","parent_name":"QMUIKeyboardManager"},"Classes/QMUIGridView.html#/c:objc(cs)QMUIGridView(py)columnCount":{"name":"columnCount","abstract":"<p>指定要显示的列数，默认为 0</p>","parent_name":"QMUIGridView"},"Classes/QMUIGridView.html#/c:objc(cs)QMUIGridView(py)rowHeight":{"name":"rowHeight","abstract":"<p>指定每一行的高度，默认为 0</p>","parent_name":"QMUIGridView"},"Classes/QMUIGridView.html#/c:objc(cs)QMUIGridView(py)separatorWidth":{"name":"separatorWidth","abstract":"<p>指定 item 之间的分隔线宽度，默认为 0</p>","parent_name":"QMUIGridView"},"Classes/QMUIGridView.html#/c:objc(cs)QMUIGridView(py)separatorColor":{"name":"separatorColor","abstract":"<p>指定 item 之间的分隔线颜色，默认为 UIColorSeparator</p>","parent_name":"QMUIGridView"},"Classes/QMUIGridView.html#/c:objc(cs)QMUIGridView(py)separatorDashed":{"name":"separatorDashed","abstract":"<p>item 之间的分隔线是否要用虚线显示，默认为 NO</p>","parent_name":"QMUIGridView"},"Classes/QMUIGridView.html#/c:objc(cs)QMUIGridView(im)initWithColumn:rowHeight:":{"name":"-initWithColumn:rowHeight:","abstract":"<p>候选的初始化方法，亦可通过 initWithFrame:、init 来初始化。</p>","parent_name":"QMUIGridView"},"Classes/QMUIEmptyView.html#/c:objc(cs)QMUIEmptyView(py)loadingView":{"name":"loadingView","abstract":"<p>Undocumented</p>","parent_name":"QMUIEmptyView"},"Classes/QMUIEmptyView.html#/c:objc(cs)QMUIEmptyView(py)imageView":{"name":"imageView","abstract":"<p>Undocumented</p>","parent_name":"QMUIEmptyView"},"Classes/QMUIEmptyView.html#/c:objc(cs)QMUIEmptyView(py)textLabel":{"name":"textLabel","abstract":"<p>Undocumented</p>","parent_name":"QMUIEmptyView"},"Classes/QMUIEmptyView.html#/c:objc(cs)QMUIEmptyView(py)detailTextLabel":{"name":"detailTextLabel","abstract":"<p>Undocumented</p>","parent_name":"QMUIEmptyView"},"Classes/QMUIEmptyView.html#/c:objc(cs)QMUIEmptyView(py)actionButton":{"name":"actionButton","abstract":"<p>Undocumented</p>","parent_name":"QMUIEmptyView"},"Classes/QMUIEmptyView.html#/c:objc(cs)QMUIEmptyView(py)imageViewInsets":{"name":"imageViewInsets","abstract":"<p>Undocumented</p>","parent_name":"QMUIEmptyView"},"Classes/QMUIEmptyView.html#/c:objc(cs)QMUIEmptyView(py)loadingViewInsets":{"name":"loadingViewInsets","abstract":"<p>Undocumented</p>","parent_name":"QMUIEmptyView"},"Classes/QMUIEmptyView.html#/c:objc(cs)QMUIEmptyView(py)textLabelInsets":{"name":"textLabelInsets","abstract":"<p>Undocumented</p>","parent_name":"QMUIEmptyView"},"Classes/QMUIEmptyView.html#/c:objc(cs)QMUIEmptyView(py)detailTextLabelInsets":{"name":"detailTextLabelInsets","abstract":"<p>Undocumented</p>","parent_name":"QMUIEmptyView"},"Classes/QMUIEmptyView.html#/c:objc(cs)QMUIEmptyView(py)actionButtonInsets":{"name":"actionButtonInsets","abstract":"<p>Undocumented</p>","parent_name":"QMUIEmptyView"},"Classes/QMUIEmptyView.html#/c:objc(cs)QMUIEmptyView(py)verticalOffset":{"name":"verticalOffset","abstract":"<p>Undocumented</p>","parent_name":"QMUIEmptyView"},"Classes/QMUIEmptyView.html#/c:objc(cs)QMUIEmptyView(py)textLabelFont":{"name":"textLabelFont","abstract":"<p>Undocumented</p>","parent_name":"QMUIEmptyView"},"Classes/QMUIEmptyView.html#/c:objc(cs)QMUIEmptyView(py)detailTextLabelFont":{"name":"detailTextLabelFont","abstract":"<p>Undocumented</p>","parent_name":"QMUIEmptyView"},"Classes/QMUIEmptyView.html#/c:objc(cs)QMUIEmptyView(py)actionButtonFont":{"name":"actionButtonFont","abstract":"<p>Undocumented</p>","parent_name":"QMUIEmptyView"},"Classes/QMUIEmptyView.html#/c:objc(cs)QMUIEmptyView(py)textLabelTextColor":{"name":"textLabelTextColor","abstract":"<p>Undocumented</p>","parent_name":"QMUIEmptyView"},"Classes/QMUIEmptyView.html#/c:objc(cs)QMUIEmptyView(py)detailTextLabelTextColor":{"name":"detailTextLabelTextColor","abstract":"<p>Undocumented</p>","parent_name":"QMUIEmptyView"},"Classes/QMUIEmptyView.html#/c:objc(cs)QMUIEmptyView(py)actionButtonTitleColor":{"name":"actionButtonTitleColor","abstract":"<p>Undocumented</p>","parent_name":"QMUIEmptyView"},"Classes/QMUIEmptyView.html#/c:objc(cs)QMUIEmptyView(im)setLoadingViewHidden:":{"name":"-setLoadingViewHidden:","abstract":"<p>Undocumented</p>","parent_name":"QMUIEmptyView"},"Classes/QMUIEmptyView.html#/c:objc(cs)QMUIEmptyView(im)setImage:":{"name":"-setImage:","abstract":"<p>设置要显示的图片</p>","parent_name":"QMUIEmptyView"},"Classes/QMUIEmptyView.html#/c:objc(cs)QMUIEmptyView(im)setTextLabelText:":{"name":"-setTextLabelText:","abstract":"<p>设置提示语</p>","parent_name":"QMUIEmptyView"},"Classes/QMUIEmptyView.html#/c:objc(cs)QMUIEmptyView(im)setDetailTextLabelText:":{"name":"-setDetailTextLabelText:","abstract":"<p>设置详细提示语的文本</p>","parent_name":"QMUIEmptyView"},"Classes/QMUIEmptyView.html#/c:objc(cs)QMUIEmptyView(im)setActionButtonTitle:":{"name":"-setActionButtonTitle:","abstract":"<p>设置操作按钮的文本</p>","parent_name":"QMUIEmptyView"},"Classes/QMUIEmptyView.html#/c:objc(cs)QMUIEmptyView(py)contentView":{"name":"contentView","abstract":"<p>如果要继承QMUIEmptyView并添加新的子 view，则必须：</p>","parent_name":"QMUIEmptyView"},"Classes/QMUIEmptyView.html#/c:objc(cs)QMUIEmptyView(im)sizeThatContentViewFits":{"name":"-sizeThatContentViewFits","abstract":"<p>Undocumented</p>","parent_name":"QMUIEmptyView"},"Classes/QMUIMoreOperationItemView.html#/c:objc(cs)QMUIMoreOperationItemView(py)indexPath":{"name":"indexPath","abstract":"<p>Undocumented</p>","parent_name":"QMUIMoreOperationItemView"},"Classes/QMUIMoreOperationItemView.html#/c:objc(cs)QMUIMoreOperationItemView(py)tag":{"name":"tag","abstract":"<p>Undocumented</p>","parent_name":"QMUIMoreOperationItemView"},"Classes/QMUIMoreOperationItemView.html#/c:objc(cs)QMUIMoreOperationItemView(cm)itemViewWithImage:title:handler:":{"name":"+itemViewWithImage:title:handler:","abstract":"<p>Undocumented</p>","parent_name":"QMUIMoreOperationItemView"},"Classes/QMUIMoreOperationItemView.html#/c:objc(cs)QMUIMoreOperationItemView(cm)itemViewWithImage:selectedImage:title:selectedTitle:handler:":{"name":"+itemViewWithImage:selectedImage:title:selectedTitle:handler:","abstract":"<p>Undocumented</p>","parent_name":"QMUIMoreOperationItemView"},"Classes/QMUIMoreOperationItemView.html#/c:objc(cs)QMUIMoreOperationItemView(cm)itemViewWithImage:title:tag:handler:":{"name":"+itemViewWithImage:title:tag:handler:","abstract":"<p>Undocumented</p>","parent_name":"QMUIMoreOperationItemView"},"Classes/QMUIMoreOperationItemView.html#/c:objc(cs)QMUIMoreOperationItemView(cm)itemViewWithImage:selectedImage:title:selectedTitle:tag:handler:":{"name":"+itemViewWithImage:selectedImage:title:selectedTitle:tag:handler:","abstract":"<p>Undocumented</p>","parent_name":"QMUIMoreOperationItemView"},"Classes/QMUIMoreOperationController.html#/c:objc(cs)QMUIMoreOperationController(py)contentBackgroundColor":{"name":"contentBackgroundColor","abstract":"<p>Undocumented</p>","parent_name":"QMUIMoreOperationController"},"Classes/QMUIMoreOperationController.html#/c:objc(cs)QMUIMoreOperationController(py)contentEdgeMargins":{"name":"contentEdgeMargins","abstract":"<p>Undocumented</p>","parent_name":"QMUIMoreOperationController"},"Classes/QMUIMoreOperationController.html#/c:objc(cs)QMUIMoreOperationController(py)contentMaximumWidth":{"name":"contentMaximumWidth","abstract":"<p>Undocumented</p>","parent_name":"QMUIMoreOperationController"},"Classes/QMUIMoreOperationController.html#/c:objc(cs)QMUIMoreOperationController(py)contentCornerRadius":{"name":"contentCornerRadius","abstract":"<p>Undocumented</p>","parent_name":"QMUIMoreOperationController"},"Classes/QMUIMoreOperationController.html#/c:objc(cs)QMUIMoreOperationController(py)contentPaddings":{"name":"contentPaddings","abstract":"<p>Undocumented</p>","parent_name":"QMUIMoreOperationController"},"Classes/QMUIMoreOperationController.html#/c:objc(cs)QMUIMoreOperationController(py)scrollViewSeparatorColor":{"name":"scrollViewSeparatorColor","abstract":"<p>Undocumented</p>","parent_name":"QMUIMoreOperationController"},"Classes/QMUIMoreOperationController.html#/c:objc(cs)QMUIMoreOperationController(py)scrollViewContentInsets":{"name":"scrollViewContentInsets","abstract":"<p>Undocumented</p>","parent_name":"QMUIMoreOperationController"},"Classes/QMUIMoreOperationController.html#/c:objc(cs)QMUIMoreOperationController(py)itemBackgroundColor":{"name":"itemBackgroundColor","abstract":"<p>Undocumented</p>","parent_name":"QMUIMoreOperationController"},"Classes/QMUIMoreOperationController.html#/c:objc(cs)QMUIMoreOperationController(py)itemTitleColor":{"name":"itemTitleColor","abstract":"<p>Undocumented</p>","parent_name":"QMUIMoreOperationController"},"Classes/QMUIMoreOperationController.html#/c:objc(cs)QMUIMoreOperationController(py)itemTitleFont":{"name":"itemTitleFont","abstract":"<p>Undocumented</p>","parent_name":"QMUIMoreOperationController"},"Classes/QMUIMoreOperationController.html#/c:objc(cs)QMUIMoreOperationController(py)itemPaddingHorizontal":{"name":"itemPaddingHorizontal","abstract":"<p>Undocumented</p>","parent_name":"QMUIMoreOperationController"},"Classes/QMUIMoreOperationController.html#/c:objc(cs)QMUIMoreOperationController(py)itemTitleMarginTop":{"name":"itemTitleMarginTop","abstract":"<p>Undocumented</p>","parent_name":"QMUIMoreOperationController"},"Classes/QMUIMoreOperationController.html#/c:objc(cs)QMUIMoreOperationController(py)itemMinimumMarginHorizontal":{"name":"itemMinimumMarginHorizontal","abstract":"<p>Undocumented</p>","parent_name":"QMUIMoreOperationController"},"Classes/QMUIMoreOperationController.html#/c:objc(cs)QMUIMoreOperationController(py)automaticallyAdjustItemMargins":{"name":"automaticallyAdjustItemMargins","abstract":"<p>Undocumented</p>","parent_name":"QMUIMoreOperationController"},"Classes/QMUIMoreOperationController.html#/c:objc(cs)QMUIMoreOperationController(py)cancelButtonBackgroundColor":{"name":"cancelButtonBackgroundColor","abstract":"<p>Undocumented</p>","parent_name":"QMUIMoreOperationController"},"Classes/QMUIMoreOperationController.html#/c:objc(cs)QMUIMoreOperationController(py)cancelButtonTitleColor":{"name":"cancelButtonTitleColor","abstract":"<p>Undocumented</p>","parent_name":"QMUIMoreOperationController"},"Classes/QMUIMoreOperationController.html#/c:objc(cs)QMUIMoreOperationController(py)cancelButtonSeparatorColor":{"name":"cancelButtonSeparatorColor","abstract":"<p>Undocumented</p>","parent_name":"QMUIMoreOperationController"},"Classes/QMUIMoreOperationController.html#/c:objc(cs)QMUIMoreOperationController(py)cancelButtonFont":{"name":"cancelButtonFont","abstract":"<p>Undocumented</p>","parent_name":"QMUIMoreOperationController"},"Classes/QMUIMoreOperationController.html#/c:objc(cs)QMUIMoreOperationController(py)cancelButtonHeight":{"name":"cancelButtonHeight","abstract":"<p>Undocumented</p>","parent_name":"QMUIMoreOperationController"},"Classes/QMUIMoreOperationController.html#/c:objc(cs)QMUIMoreOperationController(py)cancelButtonMarginTop":{"name":"cancelButtonMarginTop","abstract":"<p>Undocumented</p>","parent_name":"QMUIMoreOperationController"},"Classes/QMUIMoreOperationController.html#/c:objc(cs)QMUIMoreOperationController(py)delegate":{"name":"delegate","abstract":"<p>Undocumented</p>","parent_name":"QMUIMoreOperationController"},"Classes/QMUIMoreOperationController.html#/c:objc(cs)QMUIMoreOperationController(py)contentView":{"name":"contentView","abstract":"<p>Undocumented</p>","parent_name":"QMUIMoreOperationController"},"Classes/QMUIMoreOperationController.html#/c:objc(cs)QMUIMoreOperationController(py)scrollViews":{"name":"scrollViews","abstract":"<p>Undocumented</p>","parent_name":"QMUIMoreOperationController"},"Classes/QMUIMoreOperationController.html#/c:objc(cs)QMUIMoreOperationController(py)cancelButton":{"name":"cancelButton","abstract":"<p>取消按钮，如果不需要，则自行设置其 hidden 为 YES</p>","parent_name":"QMUIMoreOperationController"},"Classes/QMUIMoreOperationController.html#/c:objc(cs)QMUIMoreOperationController(py)isExtendBottomLayout":{"name":"isExtendBottomLayout","abstract":"<p>在 iPhoneX 机器上是否延伸底部背景色。因为在 iPhoneX 上我们会把整个面板往上移动 safeArea 的距离，如果你的面板本来就配置成撑满全屏的样式，那么就会露出底部的空隙，isExtendBottomLayout 可以帮助你把空暇填补上。默认为NO。</p>","parent_name":"QMUIMoreOperationController"},"Classes/QMUIMoreOperationController.html#/c:objc(cs)QMUIMoreOperationController(py)items":{"name":"items","abstract":"<p>Undocumented</p>","parent_name":"QMUIMoreOperationController"},"Classes/QMUIMoreOperationController.html#/c:objc(cs)QMUIMoreOperationController(im)addItemView:inSection:":{"name":"-addItemView:inSection:","abstract":"<p>添加一个 itemView 到指定 section 的末尾</p>","parent_name":"QMUIMoreOperationController"},"Classes/QMUIMoreOperationController.html#/c:objc(cs)QMUIMoreOperationController(im)insertItemView:atIndexPath:":{"name":"-insertItemView:atIndexPath:","abstract":"<p>插入一个 itemView 到指定的位置，NSIndexPath 请使用 section-item 组合，其中 section 表示行，item 表示 section 里的元素序号</p>","parent_name":"QMUIMoreOperationController"},"Classes/QMUIMoreOperationController.html#/c:objc(cs)QMUIMoreOperationController(im)removeItemViewAtIndexPath:":{"name":"-removeItemViewAtIndexPath:","abstract":"<p>移除指定位置的 itemView，NSIndexPath 请使用 section-item 组合，其中 section 表示行，item 表示 section 里的元素序号</p>","parent_name":"QMUIMoreOperationController"},"Classes/QMUIMoreOperationController.html#/c:objc(cs)QMUIMoreOperationController(im)itemViewWithTag:":{"name":"-itemViewWithTag:","abstract":"<p>获取指定 tag 的 itemView，如果不存在则返回 nil</p>","parent_name":"QMUIMoreOperationController"},"Classes/QMUIMoreOperationController.html#/c:objc(cs)QMUIMoreOperationController(im)indexPathWithItemView:":{"name":"-indexPathWithItemView:","abstract":"<p>获取指定 itemView 在当前控件里的 indexPath，如果不存在则返回 nil</p>","parent_name":"QMUIMoreOperationController"},"Classes/QMUIMoreOperationController.html#/c:objc(cs)QMUIMoreOperationController(im)showFromBottom":{"name":"-showFromBottom","abstract":"<p>弹出面板，一般在 init 完并且设置好 items 之后就调用这个接口来显示面板</p>","parent_name":"QMUIMoreOperationController"},"Classes/QMUIMoreOperationController.html#/c:objc(cs)QMUIMoreOperationController(im)hideToBottom":{"name":"-hideToBottom","abstract":"<p>隐藏面板</p>","parent_name":"QMUIMoreOperationController"},"Classes/QMUIMoreOperationController.html#/c:objc(cs)QMUIMoreOperationController(py)showing":{"name":"showing","abstract":"<p>更多操作面板是否正在显示</p>","parent_name":"QMUIMoreOperationController"},"Classes/QMUIMoreOperationController.html#/c:objc(cs)QMUIMoreOperationController(py)animating":{"name":"animating","abstract":"<p>Undocumented</p>","parent_name":"QMUIMoreOperationController"},"Classes/QMUIMoreOperationController.html#/c:objc(cs)QMUIMoreOperationController(cm)appearance":{"name":"+appearance","abstract":"<p>Undocumented</p>","parent_name":"QMUIMoreOperationController"},"Classes/QMUIPopupMenuView.html#/c:objc(cs)QMUIPopupMenuView(py)shouldShowItemSeparator":{"name":"shouldShowItemSeparator","abstract":"<p>是否需要显示每个 item 之间的分隔线，默认为 NO，当为 YES 时，每个 section 除了最后一个 item 外其他 item 底部都会显示分隔线。</p>","parent_name":"QMUIPopupMenuView"},"Classes/QMUIPopupMenuView.html#/c:objc(cs)QMUIPopupMenuView(py)itemSeparatorColor":{"name":"itemSeparatorColor","abstract":"<p>item 分隔线的颜色，默认为 UIColorSeparator。</p>","parent_name":"QMUIPopupMenuView"},"Classes/QMUIPopupMenuView.html#/c:objc(cs)QMUIPopupMenuView(py)itemSeparatorInset":{"name":"itemSeparatorInset","abstract":"<p>item 分隔线的位置偏移，默认为 UIEdgeInsetsZero。item 分隔线的默认布局是 menuView 宽度减去左右 padding，如果你希望分隔线左右贴边则可为这个属性设置一个负值的 left/right。</p>","parent_name":"QMUIPopupMenuView"},"Classes/QMUIPopupMenuView.html#/c:objc(cs)QMUIPopupMenuView(py)shouldShowSectionSeparator":{"name":"shouldShowSectionSeparator","abstract":"<p>是否显示 section 和 section 之间的分隔线，默认为 NO，当为 YES 时，除了最后一个 section，其他 section 底部都会显示一条分隔线。</p>","parent_name":"QMUIPopupMenuView"},"Classes/QMUIPopupMenuView.html#/c:objc(cs)QMUIPopupMenuView(py)sectionSeparatorColor":{"name":"sectionSeparatorColor","abstract":"<p>section 分隔线的颜色，默认为 UIColorSeparator。</p>","parent_name":"QMUIPopupMenuView"},"Classes/QMUIPopupMenuView.html#/c:objc(cs)QMUIPopupMenuView(py)sectionSeparatorInset":{"name":"sectionSeparatorInset","abstract":"<p>section 分隔线的位置偏移，默认为 UIEdgeInsetsZero。section 分隔线的默认布局是撑满整个 menuView，如果你不希望分隔线左右贴边则可为这个属性设置一个 left/right 不为 0 的值即可。</p>","parent_name":"QMUIPopupMenuView"},"Classes/QMUIPopupMenuView.html#/c:objc(cs)QMUIPopupMenuView(py)itemTitleFont":{"name":"itemTitleFont","abstract":"<p>item 里文字的字体，默认为 UIFontMake(16)。</p>","parent_name":"QMUIPopupMenuView"},"Classes/QMUIPopupMenuView.html#/c:objc(cs)QMUIPopupMenuView(py)itemTitleColor":{"name":"itemTitleColor","abstract":"<p>item 里文字的颜色，默认为 UIColorBlue</p>","parent_name":"QMUIPopupMenuView"},"Classes/QMUIPopupMenuView.html#/c:objc(cs)QMUIPopupMenuView(py)padding":{"name":"padding","abstract":"<p>整个 menuView 内部上下左右的 padding，其中 padding.left/right 会被作为 item.button.contentEdgeInsets.left/right，也即每个 item 的宽度一定是撑满整个 menuView 的。</p>","parent_name":"QMUIPopupMenuView"},"Classes/QMUIPopupMenuView.html#/c:objc(cs)QMUIPopupMenuView(py)itemHeight":{"name":"itemHeight","abstract":"<p>每个 item 的统一高度，默认为 44。如果某个 item 设置了自己的 height，则不受 itemHeight 属性的约束。</p>","parent_name":"QMUIPopupMenuView"},"Classes/QMUIPopupMenuView.html#/c:objc(cs)QMUIPopupMenuView(py)itemConfigurationHandler":{"name":"itemConfigurationHandler","abstract":"<p>批量设置 item 的样式</p>","parent_name":"QMUIPopupMenuView"},"Classes/QMUIPopupMenuView.html#/c:objc(cs)QMUIPopupMenuView(py)items":{"name":"items","abstract":"<p>设置 item，均处于同一个 section 内</p>","parent_name":"QMUIPopupMenuView"},"Classes/QMUIPopupMenuView.html#/c:objc(cs)QMUIPopupMenuView(py)itemSections":{"name":"itemSections","abstract":"<p>设置多个 section 的多个 item</p>","parent_name":"QMUIPopupMenuView"},"Classes/QMUIPopupMenuButtonItem.html#/c:objc(cs)QMUIPopupMenuButtonItem(py)image":{"name":"image","abstract":"<p>item 里的图片，默认在左边，也可通过 item.button.imagePosition 修改图片的位置</p>","parent_name":"QMUIPopupMenuButtonItem"},"Classes/QMUIPopupMenuButtonItem.html#/c:objc(cs)QMUIPopupMenuButtonItem(py)button":{"name":"button","abstract":"<p>每个 item 都通过一个 button 来显示内容，可直接修改 button 的相关属性达到自定义的效果。</p>","parent_name":"QMUIPopupMenuButtonItem"},"Classes/QMUIPopupMenuButtonItem.html#/c:objc(cs)QMUIPopupMenuButtonItem(py)highlightedBackgroundColor":{"name":"highlightedBackgroundColor","abstract":"<p>item 被点击时的背景色，默认为 TableViewCellSelectedBackgroundColor，与列表的 cell 点击背景色一致。</p>","parent_name":"QMUIPopupMenuButtonItem"},"Classes/QMUIPopupMenuButtonItem.html#/c:objc(cs)QMUIPopupMenuButtonItem(py)imageMarginRight":{"name":"imageMarginRight","abstract":"<p>item 里图片和文字之间的间距，默认为 6，只有同时存在图片和文字时这个属性才会生效。</p>","parent_name":"QMUIPopupMenuButtonItem"},"Classes/QMUIPopupMenuButtonItem.html#/c:objc(cs)QMUIPopupMenuButtonItem(cm)itemWithImage:title:handler:":{"name":"+itemWithImage:title:handler:","abstract":"<p>推荐的初始化方法</p>","parent_name":"QMUIPopupMenuButtonItem"},"Classes/QMUIPieProgressView.html#/c:objc(cs)QMUIPieProgressView(py)progressAnimationDuration":{"name":"progressAnimationDuration","abstract":"<p>进度动画的时长，默认为 0.5</p>","parent_name":"QMUIPieProgressView"},"Classes/QMUIPieProgressView.html#/c:objc(cs)QMUIPieProgressView(py)progress":{"name":"progress","abstract":"<p>当前进度值，默认为 0.0。调用 <code>setProgress:</code> 相当于调用 <code>setProgress:animated:NO</code></p>","parent_name":"QMUIPieProgressView"},"Classes/QMUIPieProgressView.html#/c:objc(cs)QMUIPieProgressView(py)borderWidth":{"name":"borderWidth","abstract":"<p>外边框的大小，默认为 1。</p>","parent_name":"QMUIPieProgressView"},"Classes/QMUIPieProgressView.html#/c:objc(cs)QMUIPieProgressView(py)borderInset":{"name":"borderInset","abstract":"<p>外边框与内部扇形之间的间隙，默认为 0。</p>","parent_name":"QMUIPieProgressView"},"Classes/QMUIPieProgressView.html#/c:objc(cs)QMUIPieProgressView(py)lineWidth":{"name":"lineWidth","abstract":"<p>线宽，用于环形绘制，默认为 0。</p>","parent_name":"QMUIPieProgressView"},"Classes/QMUIPieProgressView.html#/c:objc(cs)QMUIPieProgressView(py)shape":{"name":"shape","abstract":"<p>绘制形状，默认是扇形。</p>","parent_name":"QMUIPieProgressView"},"Classes/QMUIPieProgressView.html#/c:objc(cs)QMUIPieProgressView(im)setProgress:animated:":{"name":"-setProgress:animated:","abstract":"<p>修改当前的进度，会触发 UIControlEventValueChanged 事件</p>","parent_name":"QMUIPieProgressView"},"Classes/QMUIDialogTextFieldViewController.html#/c:objc(cs)QMUIDialogTextFieldViewController(py)textFieldLabelFont":{"name":"textFieldLabelFont","abstract":"<p>Undocumented</p>","parent_name":"QMUIDialogTextFieldViewController"},"Classes/QMUIDialogTextFieldViewController.html#/c:objc(cs)QMUIDialogTextFieldViewController(py)textFieldLabelTextColor":{"name":"textFieldLabelTextColor","abstract":"<p>Undocumented</p>","parent_name":"QMUIDialogTextFieldViewController"},"Classes/QMUIDialogTextFieldViewController.html#/c:objc(cs)QMUIDialogTextFieldViewController(py)textFieldFont":{"name":"textFieldFont","abstract":"<p>Undocumented</p>","parent_name":"QMUIDialogTextFieldViewController"},"Classes/QMUIDialogTextFieldViewController.html#/c:objc(cs)QMUIDialogTextFieldViewController(py)textFieldTextColor":{"name":"textFieldTextColor","abstract":"<p>Undocumented</p>","parent_name":"QMUIDialogTextFieldViewController"},"Classes/QMUIDialogTextFieldViewController.html#/c:objc(cs)QMUIDialogTextFieldViewController(py)textFieldSeparatorColor":{"name":"textFieldSeparatorColor","abstract":"<p>Undocumented</p>","parent_name":"QMUIDialogTextFieldViewController"},"Classes/QMUIDialogTextFieldViewController.html#/c:objc(cs)QMUIDialogTextFieldViewController(py)textFieldLabelMargins":{"name":"textFieldLabelMargins","abstract":"<p>输入框上方文字的间距，如果不存在文字则不使用这个间距</p>","parent_name":"QMUIDialogTextFieldViewController"},"Classes/QMUIDialogTextFieldViewController.html#/c:objc(cs)QMUIDialogTextFieldViewController(py)textFieldMargins":{"name":"textFieldMargins","abstract":"<p>输入框本身的间距，注意输入框内部自带 textInsets，所以可能文字实际的显示位置会比这个间距更往内部一点</p>","parent_name":"QMUIDialogTextFieldViewController"},"Classes/QMUIDialogTextFieldViewController.html#/c:objc(cs)QMUIDialogTextFieldViewController(py)textFieldHeight":{"name":"textFieldHeight","abstract":"<p>输入框的高度</p>","parent_name":"QMUIDialogTextFieldViewController"},"Classes/QMUIDialogTextFieldViewController.html#/c:objc(cs)QMUIDialogTextFieldViewController(py)textFieldSeparatorInsets":{"name":"textFieldSeparatorInsets","abstract":"<p>输入框底部分隔线基于默认布局的偏移，注意分隔线默认的布局为：宽度是输入框宽度减去输入框左右的 textInsets，y 紧贴输入框底部。如果 textFieldSeparatorLayer.hidden = YES 则布局时不考虑这个间距</p>","parent_name":"QMUIDialogTextFieldViewController"},"Classes/QMUIDialogTextFieldViewController.html#/c:objc(cs)QMUIDialogTextFieldViewController(im)addTextFieldWithTitle:configurationHandler:":{"name":"-addTextFieldWithTitle:configurationHandler:","abstract":"<p>Undocumented</p>","parent_name":"QMUIDialogTextFieldViewController"},"Classes/QMUIDialogTextFieldViewController.html#/c:objc(cs)QMUIDialogTextFieldViewController(py)textFieldTitleLabels":{"name":"textFieldTitleLabels","abstract":"<p>Undocumented</p>","parent_name":"QMUIDialogTextFieldViewController"},"Classes/QMUIDialogTextFieldViewController.html#/c:objc(cs)QMUIDialogTextFieldViewController(py)textFields":{"name":"textFields","abstract":"<p>Undocumented</p>","parent_name":"QMUIDialogTextFieldViewController"},"Classes/QMUIDialogTextFieldViewController.html#/c:objc(cs)QMUIDialogTextFieldViewController(py)textFieldSeparatorLayers":{"name":"textFieldSeparatorLayers","abstract":"<p>Undocumented</p>","parent_name":"QMUIDialogTextFieldViewController"},"Classes/QMUIDialogTextFieldViewController.html#/c:objc(cs)QMUIDialogTextFieldViewController(py)shouldManageTextFieldsReturnEventAutomatically":{"name":"shouldManageTextFieldsReturnEventAutomatically","abstract":"<p>是否应该自动管理输入框的键盘 Return 事件，默认为 YES，YES 表示当点击 Return 按钮时，视为点击了 dialog 的 submit 按钮。你也可以通过 UITextFieldDelegate 自己管理，此时请将此属性置为 NO。</p>","parent_name":"QMUIDialogTextFieldViewController"},"Classes/QMUIDialogTextFieldViewController.html#/c:objc(cs)QMUIDialogTextFieldViewController(py)enablesSubmitButtonAutomatically":{"name":"enablesSubmitButtonAutomatically","abstract":"<p>是否自动控制提交按钮的enabled状态，默认为YES，则当任一输入框内容为空时禁用提交按钮</p>","parent_name":"QMUIDialogTextFieldViewController"},"Classes/QMUIDialogTextFieldViewController.html#/c:objc(cs)QMUIDialogTextFieldViewController(py)shouldEnableSubmitButtonBlock":{"name":"shouldEnableSubmitButtonBlock","abstract":"<p>Undocumented</p>","parent_name":"QMUIDialogTextFieldViewController"},"Classes/QMUIDialogSelectionViewController.html#/c:objc(cs)QMUIDialogSelectionViewController(py)rowHeight":{"name":"rowHeight","abstract":"<p>每一行的高度，如果使用了 heightForItemBlock 则该属性不生效，默认值为配置表里的 TableViewCellNormalHeight</p>","parent_name":"QMUIDialogSelectionViewController"},"Classes/QMUIDialogSelectionViewController.html#/c:objc(cs)QMUIDialogSelectionViewController(py)tableView":{"name":"tableView","abstract":"<p>Undocumented</p>","parent_name":"QMUIDialogSelectionViewController"},"Classes/QMUIDialogSelectionViewController.html#/c:objc(cs)QMUIDialogSelectionViewController(py)items":{"name":"items","abstract":"<p>Undocumented</p>","parent_name":"QMUIDialogSelectionViewController"},"Classes/QMUIDialogSelectionViewController.html#/c:objc(cs)QMUIDialogSelectionViewController(py)selectedItemIndex":{"name":"selectedItemIndex","abstract":"<p>表示单选模式下已选中的item序号，默认为QMUIDialogSelectionViewControllerSelectedItemIndexNone。此属性与 <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/QMUIDialogSelectionViewController.html#/c:objc(cs)QMUIDialogSelectionViewController(py)selectedItemIndexes\">selectedItemIndexes</a></code> 互斥。</p>","parent_name":"QMUIDialogSelectionViewController"},"Classes/QMUIDialogSelectionViewController.html#/c:objc(cs)QMUIDialogSelectionViewController(py)selectedItemIndexes":{"name":"selectedItemIndexes","abstract":"<p>表示多选模式下已选中的item序号，默认为nil。此属性与 <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/QMUIDialogSelectionViewController.html#/c:objc(cs)QMUIDialogSelectionViewController(py)selectedItemIndex\">selectedItemIndex</a></code> 互斥。</p>","parent_name":"QMUIDialogSelectionViewController"},"Classes/QMUIDialogSelectionViewController.html#/c:objc(cs)QMUIDialogSelectionViewController(py)allowsMultipleSelection":{"name":"allowsMultipleSelection","abstract":"<p>控制是否允许多选，默认为NO。</p>","parent_name":"QMUIDialogSelectionViewController"},"Classes/QMUIDialogSelectionViewController.html#/c:objc(cs)QMUIDialogSelectionViewController(py)cellForItemBlock":{"name":"cellForItemBlock","abstract":"<p>Undocumented</p>","parent_name":"QMUIDialogSelectionViewController"},"Classes/QMUIDialogSelectionViewController.html#/c:objc(cs)QMUIDialogSelectionViewController(py)heightForItemBlock":{"name":"heightForItemBlock","abstract":"<p>Undocumented</p>","parent_name":"QMUIDialogSelectionViewController"},"Classes/QMUIDialogSelectionViewController.html#/c:objc(cs)QMUIDialogSelectionViewController(py)canSelectItemBlock":{"name":"canSelectItemBlock","abstract":"<p>Undocumented</p>","parent_name":"QMUIDialogSelectionViewController"},"Classes/QMUIDialogSelectionViewController.html#/c:objc(cs)QMUIDialogSelectionViewController(py)didSelectItemBlock":{"name":"didSelectItemBlock","abstract":"<p>Undocumented</p>","parent_name":"QMUIDialogSelectionViewController"},"Classes/QMUIDialogSelectionViewController.html#/c:objc(cs)QMUIDialogSelectionViewController(py)didDeselectItemBlock":{"name":"didDeselectItemBlock","abstract":"<p>Undocumented</p>","parent_name":"QMUIDialogSelectionViewController"},"Classes/QMUIDialogViewController.html#/c:objc(cs)QMUIDialogViewController(py)cornerRadius":{"name":"cornerRadius","abstract":"<p>Undocumented</p>","parent_name":"QMUIDialogViewController"},"Classes/QMUIDialogViewController.html#/c:objc(cs)QMUIDialogViewController(py)dialogViewMargins":{"name":"dialogViewMargins","abstract":"<p>Undocumented</p>","parent_name":"QMUIDialogViewController"},"Classes/QMUIDialogViewController.html#/c:objc(cs)QMUIDialogViewController(py)maximumContentViewWidth":{"name":"maximumContentViewWidth","abstract":"<p>Undocumented</p>","parent_name":"QMUIDialogViewController"},"Classes/QMUIDialogViewController.html#/c:objc(cs)QMUIDialogViewController(py)backgroundColor":{"name":"backgroundColor","abstract":"<p>Undocumented</p>","parent_name":"QMUIDialogViewController"},"Classes/QMUIDialogViewController.html#/c:objc(cs)QMUIDialogViewController(py)titleTintColor":{"name":"titleTintColor","abstract":"<p>标题的 tintColor，当没有设置 titleLabelTextColor 和 subTitleLabelTextColor 的情况下，标题和副标题的颜色均会使用 titleTintColor，当 titleLabelTextColor 和 subTitleLabelTextColor 其中任何一个被设置了值时，则 titleTintColor 作为候选项使用（也即谁为 nil 才会用 titleTintColor 顶替，不为 nil 则不会用到 titleTintColor）。","parent_name":"QMUIDialogViewController"},"Classes/QMUIDialogViewController.html#/c:objc(cs)QMUIDialogViewController(py)titleLabelFont":{"name":"titleLabelFont","abstract":"<p>Undocumented</p>","parent_name":"QMUIDialogViewController"},"Classes/QMUIDialogViewController.html#/c:objc(cs)QMUIDialogViewController(py)titleLabelTextColor":{"name":"titleLabelTextColor","abstract":"<p>主标题的文字颜色，当为 nil 时则会使用 titleView 的 tintColor 作为文字颜色</p>","parent_name":"QMUIDialogViewController"},"Classes/QMUIDialogViewController.html#/c:objc(cs)QMUIDialogViewController(py)subTitleLabelFont":{"name":"subTitleLabelFont","abstract":"<p>Undocumented</p>","parent_name":"QMUIDialogViewController"},"Classes/QMUIDialogViewController.html#/c:objc(cs)QMUIDialogViewController(py)subTitleLabelTextColor":{"name":"subTitleLabelTextColor","abstract":"<p>副标题的文字颜色，当为 nil 时则会使用 titleView 的 tintColor 作为文字颜色</p>","parent_name":"QMUIDialogViewController"},"Classes/QMUIDialogViewController.html#/c:objc(cs)QMUIDialogViewController(py)headerSeparatorColor":{"name":"headerSeparatorColor","abstract":"<p>Undocumented</p>","parent_name":"QMUIDialogViewController"},"Classes/QMUIDialogViewController.html#/c:objc(cs)QMUIDialogViewController(py)headerViewHeight":{"name":"headerViewHeight","abstract":"<p>Undocumented</p>","parent_name":"QMUIDialogViewController"},"Classes/QMUIDialogViewController.html#/c:objc(cs)QMUIDialogViewController(py)headerViewBackgroundColor":{"name":"headerViewBackgroundColor","abstract":"<p>Undocumented</p>","parent_name":"QMUIDialogViewController"},"Classes/QMUIDialogViewController.html#/c:objc(cs)QMUIDialogViewController(py)contentViewMargins":{"name":"contentViewMargins","abstract":"<p>Undocumented</p>","parent_name":"QMUIDialogViewController"},"Classes/QMUIDialogViewController.html#/c:objc(cs)QMUIDialogViewController(py)contentViewBackgroundColor":{"name":"contentViewBackgroundColor","abstract":"<p>Undocumented</p>","parent_name":"QMUIDialogViewController"},"Classes/QMUIDialogViewController.html#/c:objc(cs)QMUIDialogViewController(py)footerSeparatorColor":{"name":"footerSeparatorColor","abstract":"<p>Undocumented</p>","parent_name":"QMUIDialogViewController"},"Classes/QMUIDialogViewController.html#/c:objc(cs)QMUIDialogViewController(py)footerViewHeight":{"name":"footerViewHeight","abstract":"<p>Undocumented</p>","parent_name":"QMUIDialogViewController"},"Classes/QMUIDialogViewController.html#/c:objc(cs)QMUIDialogViewController(py)footerViewBackgroundColor":{"name":"footerViewBackgroundColor","abstract":"<p>Undocumented</p>","parent_name":"QMUIDialogViewController"},"Classes/QMUIDialogViewController.html#/c:objc(cs)QMUIDialogViewController(py)buttonBackgroundColor":{"name":"buttonBackgroundColor","abstract":"<p>Undocumented</p>","parent_name":"QMUIDialogViewController"},"Classes/QMUIDialogViewController.html#/c:objc(cs)QMUIDialogViewController(py)buttonHighlightedBackgroundColor":{"name":"buttonHighlightedBackgroundColor","abstract":"<p>Undocumented</p>","parent_name":"QMUIDialogViewController"},"Classes/QMUIDialogViewController.html#/c:objc(cs)QMUIDialogViewController(py)buttonTitleAttributes":{"name":"buttonTitleAttributes","abstract":"<p>Undocumented</p>","parent_name":"QMUIDialogViewController"},"Classes/QMUIDialogViewController.html#/c:objc(cs)QMUIDialogViewController(py)headerView":{"name":"headerView","abstract":"<p>Undocumented</p>","parent_name":"QMUIDialogViewController"},"Classes/QMUIDialogViewController.html#/c:objc(cs)QMUIDialogViewController(py)headerViewSeparatorLayer":{"name":"headerViewSeparatorLayer","abstract":"<p>Undocumented</p>","parent_name":"QMUIDialogViewController"},"Classes/QMUIDialogViewController.html#/c:objc(cs)QMUIDialogViewController(py)contentView":{"name":"contentView","abstract":"<p>dialog的主体内容部分，默认是一个空的白色UIView，建议设置为自己的UIView","parent_name":"QMUIDialogViewController"},"Classes/QMUIDialogViewController.html#/c:objc(cs)QMUIDialogViewController(py)footerView":{"name":"footerView","abstract":"<p>Undocumented</p>","parent_name":"QMUIDialogViewController"},"Classes/QMUIDialogViewController.html#/c:objc(cs)QMUIDialogViewController(py)footerViewSeparatorLayer":{"name":"footerViewSeparatorLayer","abstract":"<p>Undocumented</p>","parent_name":"QMUIDialogViewController"},"Classes/QMUIDialogViewController.html#/c:objc(cs)QMUIDialogViewController(py)cancelButton":{"name":"cancelButton","abstract":"<p>Undocumented</p>","parent_name":"QMUIDialogViewController"},"Classes/QMUIDialogViewController.html#/c:objc(cs)QMUIDialogViewController(py)submitButton":{"name":"submitButton","abstract":"<p>Undocumented</p>","parent_name":"QMUIDialogViewController"},"Classes/QMUIDialogViewController.html#/c:objc(cs)QMUIDialogViewController(py)buttonSeparatorLayer":{"name":"buttonSeparatorLayer","abstract":"<p>Undocumented</p>","parent_name":"QMUIDialogViewController"},"Classes/QMUIDialogViewController.html#/c:objc(cs)QMUIDialogViewController(im)addCancelButtonWithText:block:":{"name":"-addCancelButtonWithText:block:","abstract":"<p>添加位于左下角的取消按钮，取消按钮点击时默认会自动 hide 弹窗，无需自己在 block 里调用 hide。</p>","parent_name":"QMUIDialogViewController"},"Classes/QMUIDialogViewController.html#/c:objc(cs)QMUIDialogViewController(im)removeCancelButton":{"name":"-removeCancelButton","abstract":"<p>移除当前的取消按钮</p>","parent_name":"QMUIDialogViewController"},"Classes/QMUIDialogViewController.html#/c:objc(cs)QMUIDialogViewController(im)addSubmitButtonWithText:block:":{"name":"-addSubmitButtonWithText:block:","abstract":"<p>添加位于右下角的提交按钮</p>","parent_name":"QMUIDialogViewController"},"Classes/QMUIDialogViewController.html#/c:objc(cs)QMUIDialogViewController(im)removeSubmitButton":{"name":"-removeSubmitButton","abstract":"<p>移除提交按钮</p>","parent_name":"QMUIDialogViewController"},"Classes/QMUIDialogViewController.html#/c:objc(cs)QMUIDialogViewController(py)modalPresentationViewController":{"name":"modalPresentationViewController","abstract":"<p>用于展示 dialog 的 modalPresentationViewController</p>","parent_name":"QMUIDialogViewController"},"Classes/QMUIDialogViewController.html#/c:objc(cs)QMUIDialogViewController(im)show":{"name":"-show","abstract":"<p>以动画形式显示弹窗，等同于 [self showWithAnimated:YES completion:nil]</p>","parent_name":"QMUIDialogViewController"},"Classes/QMUIDialogViewController.html#/c:objc(cs)QMUIDialogViewController(im)showWithAnimated:completion:":{"name":"-showWithAnimated:completion:","abstract":"<p>显示弹窗</p>","parent_name":"QMUIDialogViewController"},"Classes/QMUIDialogViewController.html#/c:objc(cs)QMUIDialogViewController(im)hide":{"name":"-hide","abstract":"<p>以动画形式隐藏弹窗，等同于 [self hideWithAnimated:YES completion:nil]</p>","parent_name":"QMUIDialogViewController"},"Classes/QMUIDialogViewController.html#/c:objc(cs)QMUIDialogViewController(im)hideWithAnimated:completion:":{"name":"-hideWithAnimated:completion:","abstract":"<p>隐藏弹窗</p>","parent_name":"QMUIDialogViewController"},"Classes/QMUIDialogViewController.html#/c:objc(cs)QMUIDialogViewController(cm)appearance":{"name":"+appearance","abstract":"<p>Undocumented</p>","parent_name":"QMUIDialogViewController"},"Classes/QMUICellHeightIndexPathCache.html#/c:objc(cs)QMUICellHeightIndexPathCache(py)automaticallyInvalidateEnabled":{"name":"automaticallyInvalidateEnabled","abstract":"<p>Undocumented</p>","parent_name":"QMUICellHeightIndexPathCache"},"Classes/QMUICellHeightIndexPathCache.html#/c:objc(cs)QMUICellHeightIndexPathCache(im)existsHeightAtIndexPath:":{"name":"-existsHeightAtIndexPath:","abstract":"<p>Undocumented</p>","parent_name":"QMUICellHeightIndexPathCache"},"Classes/QMUICellHeightIndexPathCache.html#/c:objc(cs)QMUICellHeightIndexPathCache(im)cacheHeight:byIndexPath:":{"name":"-cacheHeight:byIndexPath:","abstract":"<p>Undocumented</p>","parent_name":"QMUICellHeightIndexPathCache"},"Classes/QMUICellHeightIndexPathCache.html#/c:objc(cs)QMUICellHeightIndexPathCache(im)heightForIndexPath:":{"name":"-heightForIndexPath:","abstract":"<p>Undocumented</p>","parent_name":"QMUICellHeightIndexPathCache"},"Classes/QMUICellHeightIndexPathCache.html#/c:objc(cs)QMUICellHeightIndexPathCache(im)invalidateHeightAtIndexPath:":{"name":"-invalidateHeightAtIndexPath:","abstract":"<p>Undocumented</p>","parent_name":"QMUICellHeightIndexPathCache"},"Classes/QMUICellHeightIndexPathCache.html#/c:objc(cs)QMUICellHeightIndexPathCache(im)invalidateAllHeightCache":{"name":"-invalidateAllHeightCache","abstract":"<p>Undocumented</p>","parent_name":"QMUICellHeightIndexPathCache"},"Classes/QMUICellHeightCache.html#/c:objc(cs)QMUICellHeightCache(im)existsHeightForKey:":{"name":"-existsHeightForKey:","abstract":"<p>Undocumented</p>","parent_name":"QMUICellHeightCache"},"Classes/QMUICellHeightCache.html#/c:objc(cs)QMUICellHeightCache(im)cacheHeight:byKey:":{"name":"-cacheHeight:byKey:","abstract":"<p>Undocumented</p>","parent_name":"QMUICellHeightCache"},"Classes/QMUICellHeightCache.html#/c:objc(cs)QMUICellHeightCache(im)heightForKey:":{"name":"-heightForKey:","abstract":"<p>Undocumented</p>","parent_name":"QMUICellHeightCache"},"Classes/QMUICellHeightCache.html#/c:objc(cs)QMUICellHeightCache(im)invalidateHeightForKey:":{"name":"-invalidateHeightForKey:","abstract":"<p>Undocumented</p>","parent_name":"QMUICellHeightCache"},"Classes/QMUICellHeightCache.html#/c:objc(cs)QMUICellHeightCache(im)invalidateAllHeightCache":{"name":"-invalidateAllHeightCache","abstract":"<p>Undocumented</p>","parent_name":"QMUICellHeightCache"},"Classes/QMUINavigationBarScrollingSnapAnimator.html#/c:objc(cs)QMUINavigationBarScrollingSnapAnimator(py)navigationBar":{"name":"navigationBar","abstract":"<p>指定要关联的 UINavigationBar，若不指定，会自动寻找当前 App 可视界面上的 navigationBar</p>","parent_name":"QMUINavigationBarScrollingSnapAnimator"},"Classes/QMUINavigationBarScrollingSnapAnimator.html#/c:objc(cs)QMUINavigationBarScrollingSnapAnimator(py)offsetYToStartAnimation":{"name":"offsetYToStartAnimation","abstract":"<p>contentOffset.y 到达哪个值即开始动画，默认为 0。</p>","parent_name":"QMUINavigationBarScrollingSnapAnimator"},"Classes/QMUINavigationBarScrollingSnapAnimator.html#/c:objc(cs)QMUINavigationBarScrollingSnapAnimator(py)adjustsOffsetYWithInsetTopAutomatically":{"name":"adjustsOffsetYWithInsetTopAutomatically","abstract":"<p>传给 offsetYToStartAnimation 的值是否要自动叠加上 -contentInset.top，默认为 YES。</p>","parent_name":"QMUINavigationBarScrollingSnapAnimator"},"Classes/QMUINavigationBarScrollingSnapAnimator.html#/c:objc(cs)QMUINavigationBarScrollingSnapAnimator(py)animationBlock":{"name":"animationBlock","abstract":"<p>当滚动到触发位置时，可在 block 里执行动画</p>","parent_name":"QMUINavigationBarScrollingSnapAnimator"},"Classes/QMUINavigationBarScrollingSnapAnimator.html#/c:objc(cs)QMUINavigationBarScrollingSnapAnimator(py)offsetYReached":{"name":"offsetYReached","abstract":"<p>是否已经过了临界点（也即 offsetYToStartAnimation）</p>","parent_name":"QMUINavigationBarScrollingSnapAnimator"},"Classes/QMUINavigationBarScrollingSnapAnimator.html#/c:objc(cs)QMUINavigationBarScrollingSnapAnimator(py)continuous":{"name":"continuous","abstract":"<p>如果为 NO，则当 offsetYReached 的值不再变化（例如 YES 后继续往下滚动，或者 NO 后继续往上滚动）时，就不会再触发动画，从而提升性能。</p>","parent_name":"QMUINavigationBarScrollingSnapAnimator"},"Classes/QMUINavigationBarScrollingAnimator.html#/c:objc(cs)QMUINavigationBarScrollingAnimator(py)navigationBar":{"name":"navigationBar","abstract":"<p>指定要关联的 UINavigationBar，若不指定，会自动寻找当前 App 可视界面上的 navigationBar</p>","parent_name":"QMUINavigationBarScrollingAnimator"},"Classes/QMUINavigationBarScrollingAnimator.html#/c:objc(cs)QMUINavigationBarScrollingAnimator(py)offsetYToStartAnimation":{"name":"offsetYToStartAnimation","abstract":"<p>contentOffset.y 到达哪个值即开始动画，默认为 0</p>","parent_name":"QMUINavigationBarScrollingAnimator"},"Classes/QMUINavigationBarScrollingAnimator.html#/c:objc(cs)QMUINavigationBarScrollingAnimator(py)distanceToStopAnimation":{"name":"distanceToStopAnimation","abstract":"<p>控制从 offsetYToStartAnimation 开始，要滚动多长的距离就打到动画结束的位置，默认为 44</p>","parent_name":"QMUINavigationBarScrollingAnimator"},"Classes/QMUINavigationBarScrollingAnimator.html#/c:objc(cs)QMUINavigationBarScrollingAnimator(py)adjustsOffsetYWithInsetTopAutomatically":{"name":"adjustsOffsetYWithInsetTopAutomatically","abstract":"<p>传给 offsetYToStartAnimation 的值是否要自动叠加上 -contentInset.top，默认为 YES。</p>","parent_name":"QMUINavigationBarScrollingAnimator"},"Classes/QMUINavigationBarScrollingAnimator.html#/c:objc(cs)QMUINavigationBarScrollingAnimator(py)progress":{"name":"progress","abstract":"<p>当前滚动位置对应的进度</p>","parent_name":"QMUINavigationBarScrollingAnimator"},"Classes/QMUINavigationBarScrollingAnimator.html#/c:objc(cs)QMUINavigationBarScrollingAnimator(py)continuous":{"name":"continuous","abstract":"<p>如果为 NO，则当 progress 的值不再变化（例如达到 0 后继续往上滚动，或者达到 1 后继续往下滚动）时，就不会再触发动画，从而提升性能。</p>","parent_name":"QMUINavigationBarScrollingAnimator"},"Classes/QMUINavigationBarScrollingAnimator.html#/c:objc(cs)QMUINavigationBarScrollingAnimator(py)animationBlock":{"name":"animationBlock","abstract":"<p>用于控制不同滚动位置下的表现，总的动画 block，如果定义了这个，则滚动时不会再调用后面那几个 block</p>","parent_name":"QMUINavigationBarScrollingAnimator"},"Classes/QMUINavigationBarScrollingAnimator.html#/c:objc(cs)QMUINavigationBarScrollingAnimator(py)backgroundImageBlock":{"name":"backgroundImageBlock","abstract":"<p>返回不同滚动位置下对应的背景图</p>","parent_name":"QMUINavigationBarScrollingAnimator"},"Classes/QMUINavigationBarScrollingAnimator.html#/c:objc(cs)QMUINavigationBarScrollingAnimator(py)shadowImageBlock":{"name":"shadowImageBlock","abstract":"<p>返回不同滚动位置下对应的导航栏底部分隔线的图片</p>","parent_name":"QMUINavigationBarScrollingAnimator"},"Classes/QMUINavigationBarScrollingAnimator.html#/c:objc(cs)QMUINavigationBarScrollingAnimator(py)tintColorBlock":{"name":"tintColorBlock","abstract":"<p>返回不同滚动位置下对应的导航栏的 tintColor</p>","parent_name":"QMUINavigationBarScrollingAnimator"},"Classes/QMUINavigationBarScrollingAnimator.html#/c:objc(cs)QMUINavigationBarScrollingAnimator(py)titleViewTintColorBlock":{"name":"titleViewTintColorBlock","abstract":"<p>返回不同滚动位置下对应的导航栏的 titleView tintColor</p>","parent_name":"QMUINavigationBarScrollingAnimator"},"Classes/QMUINavigationBarScrollingAnimator.html#/c:objc(cs)QMUINavigationBarScrollingAnimator(py)statusbarStyleBlock":{"name":"statusbarStyleBlock","abstract":"<p>返回不同滚动位置下对应的状态栏样式</p>","parent_name":"QMUINavigationBarScrollingAnimator"},"Classes/QMUINavigationBarScrollingAnimator.html#/c:objc(cs)QMUINavigationBarScrollingAnimator(py)barTintColorBlock":{"name":"barTintColorBlock","abstract":"<p>返回不同滚动位置下对应的导航栏的 barTintColor</p>","parent_name":"QMUINavigationBarScrollingAnimator"},"Classes/QMUIScrollAnimator.html#/c:objc(cs)QMUIScrollAnimator(py)scrollView":{"name":"scrollView","abstract":"<p>绑定的 UIScrollView</p>","parent_name":"QMUIScrollAnimator"},"Classes/QMUIScrollAnimator.html#/c:objc(cs)QMUIScrollAnimator(py)didScrollBlock":{"name":"didScrollBlock","abstract":"<p>UIScrollView 滚动时会调用这个 block</p>","parent_name":"QMUIScrollAnimator"},"Classes/QMUIScrollAnimator.html#/c:objc(cs)QMUIScrollAnimator(py)enabled":{"name":"enabled","abstract":"<p>当 enabled 为 NO 时，即便 scrollView 滚动，didScrollBlock 也不会被调用。默认为 YES。</p>","parent_name":"QMUIScrollAnimator"},"Classes/QMUIScrollAnimator.html#/c:objc(cs)QMUIScrollAnimator(im)updateScroll":{"name":"-updateScroll","abstract":"<p>立即根据当前的滚动位置更新状态</p>","parent_name":"QMUIScrollAnimator"},"Classes/QMUIVisualEffectView.html#/c:objc(cs)QMUIVisualEffectView(py)foregroundColor":{"name":"foregroundColor","abstract":"<p>Undocumented</p>","parent_name":"QMUIVisualEffectView"},"Classes/QMUITableView.html#/c:objc(cs)QMUITableView(py)delegate":{"name":"delegate","abstract":"<p>Undocumented</p>","parent_name":"QMUITableView"},"Classes/QMUITableView.html#/c:objc(cs)QMUITableView(py)dataSource":{"name":"dataSource","abstract":"<p>Undocumented</p>","parent_name":"QMUITableView"},"Classes/QMUILogManagerViewController.html#/c:objc(cs)QMUILogManagerViewController(py)rowCountWhenShowSearchBar":{"name":"rowCountWhenShowSearchBar","abstract":"<p>cell 总个数大于等于这个数值时才会出搜索框和右边的 section title 索引条，方便检索。默认值为 10。</p>","parent_name":"QMUILogManagerViewController"},"Classes/QMUILogManagerViewController.html#/c:objc(cs)QMUILogManagerViewController(py)formatLogNameForSortingBlock":{"name":"formatLogNameForSortingBlock","abstract":"<p>一般项目的 logName 都会带有统一前缀（例如 @&ldquo;QMUIImagePickerLibrary&quot;），而在排序的时候，前缀通常是无意义的，因此这里提供一个 block 让你可以根据传进去的 logName 返回一个不带前缀的用于排序的 logName，且这个返回值的第一个字母将会作为 section 的索引显示在列表右边。若不实现这个 block 则直接拿原 logName 进行排序。</p>","parent_name":"QMUILogManagerViewController"},"Classes/QMUILogManagerViewController.html#/c:objc(cs)QMUILogManagerViewController(py)formatCellTextBlock":{"name":"formatCellTextBlock","abstract":"<p>可自定义 cell 的文字样式，方便区分不同的 logName</p>","parent_name":"QMUILogManagerViewController"},"Classes/QMUILabel.html#/c:objc(cs)QMUILabel(py)contentEdgeInsets":{"name":"contentEdgeInsets","abstract":"<p>控制label内容的padding，默认为UIEdgeInsetsZero</p>","parent_name":"QMUILabel"},"Classes/QMUILabel.html#/c:objc(cs)QMUILabel(py)canPerformCopyAction":{"name":"canPerformCopyAction","abstract":"<p>是否需要长按复制的功能，默认为 NO。","parent_name":"QMUILabel"},"Classes/QMUILabel.html#/c:objc(cs)QMUILabel(py)menuItemTitleForCopyAction":{"name":"menuItemTitleForCopyAction","abstract":"<p>当 canPerformCopyAction 开启时，长按出来的菜单上的复制按钮的文本，默认为 nil，nil 时 menuItem 上的文字为“复制”</p>","parent_name":"QMUILabel"},"Classes/QMUILabel.html#/c:objc(cs)QMUILabel(py)highlightedBackgroundColor":{"name":"highlightedBackgroundColor","abstract":"<p>label 在 highlighted 时的背景色，通常用于两种场景：</p>","parent_name":"QMUILabel"},"Classes/QMUILabel.html#/c:objc(cs)QMUILabel(py)didCopyBlock":{"name":"didCopyBlock","abstract":"<p>点击了“复制”后的回调</p>","parent_name":"QMUILabel"},"Classes/QMUIImagePickerViewController.html#/c:objc(cs)QMUIImagePickerViewController(py)imagePickerViewControllerDelegate":{"name":"imagePickerViewControllerDelegate","abstract":"<p>Undocumented</p>","parent_name":"QMUIImagePickerViewController"},"Classes/QMUIImagePickerViewController.html#/c:objc(cs)QMUIImagePickerViewController(py)minimumImageWidth":{"name":"minimumImageWidth","abstract":"<p>Undocumented</p>","parent_name":"QMUIImagePickerViewController"},"Classes/QMUIImagePickerViewController.html#/c:objc(cs)QMUIImagePickerViewController(py)collectionViewLayout":{"name":"collectionViewLayout","abstract":"<p>Undocumented</p>","parent_name":"QMUIImagePickerViewController"},"Classes/QMUIImagePickerViewController.html#/c:objc(cs)QMUIImagePickerViewController(py)collectionView":{"name":"collectionView","abstract":"<p>Undocumented</p>","parent_name":"QMUIImagePickerViewController"},"Classes/QMUIImagePickerViewController.html#/c:objc(cs)QMUIImagePickerViewController(py)operationToolBarView":{"name":"operationToolBarView","abstract":"<p>Undocumented</p>","parent_name":"QMUIImagePickerViewController"},"Classes/QMUIImagePickerViewController.html#/c:objc(cs)QMUIImagePickerViewController(py)previewButton":{"name":"previewButton","abstract":"<p>Undocumented</p>","parent_name":"QMUIImagePickerViewController"},"Classes/QMUIImagePickerViewController.html#/c:objc(cs)QMUIImagePickerViewController(py)sendButton":{"name":"sendButton","abstract":"<p>Undocumented</p>","parent_name":"QMUIImagePickerViewController"},"Classes/QMUIImagePickerViewController.html#/c:objc(cs)QMUIImagePickerViewController(py)imageCountLabel":{"name":"imageCountLabel","abstract":"<p>Undocumented</p>","parent_name":"QMUIImagePickerViewController"},"Classes/QMUIImagePickerViewController.html#/c:objc(cs)QMUIImagePickerViewController(im)refreshWithAssetsGroup:":{"name":"-refreshWithAssetsGroup:","abstract":"<p>也可以直接传入 QMUIAssetsGroup，然后读取其中的 QMUIAsset 并储存到 imagesAssetArray 中，传入后会赋值到 QMUIAssetsGroup，并自动刷新 UI 展示</p>","parent_name":"QMUIImagePickerViewController"},"Classes/QMUIImagePickerViewController.html#/c:objc(cs)QMUIImagePickerViewController(py)imagesAssetArray":{"name":"imagesAssetArray","abstract":"<p>Undocumented</p>","parent_name":"QMUIImagePickerViewController"},"Classes/QMUIImagePickerViewController.html#/c:objc(cs)QMUIImagePickerViewController(py)assetsGroup":{"name":"assetsGroup","abstract":"<p>Undocumented</p>","parent_name":"QMUIImagePickerViewController"},"Classes/QMUIImagePickerViewController.html#/c:objc(cs)QMUIImagePickerViewController(py)selectedImageAssetArray":{"name":"selectedImageAssetArray","abstract":"<p>当前被选择的图片对应的 QMUIAsset 对象数组</p>","parent_name":"QMUIImagePickerViewController"},"Classes/QMUIImagePickerViewController.html#/c:objc(cs)QMUIImagePickerViewController(py)allowsMultipleSelection":{"name":"allowsMultipleSelection","abstract":"<p>是否允许图片多选，默认为 YES。如果为 NO，则不显示 checkbox 和底部工具栏。</p>","parent_name":"QMUIImagePickerViewController"},"Classes/QMUIImagePickerViewController.html#/c:objc(cs)QMUIImagePickerViewController(py)maximumSelectImageCount":{"name":"maximumSelectImageCount","abstract":"<p>最多可以选择的图片数，默认为无符号整形数的最大值，相当于没有限制</p>","parent_name":"QMUIImagePickerViewController"},"Classes/QMUIImagePickerViewController.html#/c:objc(cs)QMUIImagePickerViewController(py)minimumSelectImageCount":{"name":"minimumSelectImageCount","abstract":"<p>最少需要选择的图片数，默认为 0</p>","parent_name":"QMUIImagePickerViewController"},"Classes/QMUIImagePickerViewController.html#/c:objc(cs)QMUIImagePickerViewController(py)alertTitleWhenExceedMaxSelectImageCount":{"name":"alertTitleWhenExceedMaxSelectImageCount","abstract":"<p>选择图片超出最大图片限制时 alertView 的标题</p>","parent_name":"QMUIImagePickerViewController"},"Classes/QMUIImagePickerViewController.html#/c:objc(cs)QMUIImagePickerViewController(py)alertButtonTitleWhenExceedMaxSelectImageCount":{"name":"alertButtonTitleWhenExceedMaxSelectImageCount","abstract":"<p>选择图片超出最大图片限制时 alertView 底部按钮的标题</p>","parent_name":"QMUIImagePickerViewController"},"Classes/QMUIImagePickerViewController.html#/c:objc(cs)QMUIImagePickerViewController(py)shouldShowDefaultLoadingView":{"name":"shouldShowDefaultLoadingView","abstract":"<p>加载相册列表时会出现 loading，若需要自定义 loading 的形式，可将该属性置为 NO，默认为 YES。</p>","parent_name":"QMUIImagePickerViewController"},"Classes/QMUIImagePickerViewController.html#/c:objc(cs)QMUIImagePickerViewController(cm)appearance":{"name":"+appearance","abstract":"<p>Undocumented</p>","parent_name":"QMUIImagePickerViewController"},"Classes/QMUIImagePickerPreviewViewController.html#/c:objc(cs)QMUIImagePickerPreviewViewController(py)delegate":{"name":"delegate","abstract":"<p>Undocumented</p>","parent_name":"QMUIImagePickerPreviewViewController"},"Classes/QMUIImagePickerPreviewViewController.html#/c:objc(cs)QMUIImagePickerPreviewViewController(py)toolBarBackgroundColor":{"name":"toolBarBackgroundColor","abstract":"<p>Undocumented</p>","parent_name":"QMUIImagePickerPreviewViewController"},"Classes/QMUIImagePickerPreviewViewController.html#/c:objc(cs)QMUIImagePickerPreviewViewController(py)toolBarTintColor":{"name":"toolBarTintColor","abstract":"<p>Undocumented</p>","parent_name":"QMUIImagePickerPreviewViewController"},"Classes/QMUIImagePickerPreviewViewController.html#/c:objc(cs)QMUIImagePickerPreviewViewController(py)topToolBarView":{"name":"topToolBarView","abstract":"<p>Undocumented</p>","parent_name":"QMUIImagePickerPreviewViewController"},"Classes/QMUIImagePickerPreviewViewController.html#/c:objc(cs)QMUIImagePickerPreviewViewController(py)backButton":{"name":"backButton","abstract":"<p>Undocumented</p>","parent_name":"QMUIImagePickerPreviewViewController"},"Classes/QMUIImagePickerPreviewViewController.html#/c:objc(cs)QMUIImagePickerPreviewViewController(py)checkboxButton":{"name":"checkboxButton","abstract":"<p>Undocumented</p>","parent_name":"QMUIImagePickerPreviewViewController"},"Classes/QMUIImagePickerPreviewViewController.html#/c:objc(cs)QMUIImagePickerPreviewViewController(py)imagesAssetArray":{"name":"imagesAssetArray","abstract":"<p>由于组件需要通过本地图片的 QMUIAsset 对象读取图片的详细信息，因此这里的需要传入的是包含一个或多个 QMUIAsset 对象的数组</p>","parent_name":"QMUIImagePickerPreviewViewController"},"Classes/QMUIImagePickerPreviewViewController.html#/c:objc(cs)QMUIImagePickerPreviewViewController(py)selectedImageAssetArray":{"name":"selectedImageAssetArray","abstract":"<p>Undocumented</p>","parent_name":"QMUIImagePickerPreviewViewController"},"Classes/QMUIImagePickerPreviewViewController.html#/c:objc(cs)QMUIImagePickerPreviewViewController(py)downloadStatus":{"name":"downloadStatus","abstract":"<p>Undocumented</p>","parent_name":"QMUIImagePickerPreviewViewController"},"Classes/QMUIImagePickerPreviewViewController.html#/c:objc(cs)QMUIImagePickerPreviewViewController(py)maximumSelectImageCount":{"name":"maximumSelectImageCount","abstract":"<p>最多可以选择的图片数，默认为无穷大</p>","parent_name":"QMUIImagePickerPreviewViewController"},"Classes/QMUIImagePickerPreviewViewController.html#/c:objc(cs)QMUIImagePickerPreviewViewController(py)minimumSelectImageCount":{"name":"minimumSelectImageCount","abstract":"<p>最少需要选择的图片数，默认为 0</p>","parent_name":"QMUIImagePickerPreviewViewController"},"Classes/QMUIImagePickerPreviewViewController.html#/c:objc(cs)QMUIImagePickerPreviewViewController(py)alertTitleWhenExceedMaxSelectImageCount":{"name":"alertTitleWhenExceedMaxSelectImageCount","abstract":"<p>选择图片超出最大图片限制时 alertView 的标题</p>","parent_name":"QMUIImagePickerPreviewViewController"},"Classes/QMUIImagePickerPreviewViewController.html#/c:objc(cs)QMUIImagePickerPreviewViewController(py)alertButtonTitleWhenExceedMaxSelectImageCount":{"name":"alertButtonTitleWhenExceedMaxSelectImageCount","abstract":"<p>选择图片超出最大图片限制时 alertView 的标题</p>","parent_name":"QMUIImagePickerPreviewViewController"},"Classes/QMUIImagePickerPreviewViewController.html#/c:objc(cs)QMUIImagePickerPreviewViewController(im)updateImagePickerPreviewViewWithImagesAssetArray:selectedImageAssetArray:currentImageIndex:singleCheckMode:":{"name":"-updateImagePickerPreviewViewWithImagesAssetArray:selectedImageAssetArray:currentImageIndex:singleCheckMode:","abstract":"<p>更新数据并刷新 UI，手工调用</p>","parent_name":"QMUIImagePickerPreviewViewController"},"Classes/QMUIImagePickerPreviewViewController.html#/c:objc(cs)QMUIImagePickerPreviewViewController(cm)appearance":{"name":"+appearance","abstract":"<p>Undocumented</p>","parent_name":"QMUIImagePickerPreviewViewController"},"Classes/QMUIImagePickerCollectionViewCell.html#/c:objc(cs)QMUIImagePickerCollectionViewCell(py)favoriteImage":{"name":"favoriteImage","abstract":"<p>收藏的资源的心形图片</p>","parent_name":"QMUIImagePickerCollectionViewCell"},"Classes/QMUIImagePickerCollectionViewCell.html#/c:objc(cs)QMUIImagePickerCollectionViewCell(py)favoriteImageMargins":{"name":"favoriteImageMargins","abstract":"<p>收藏的资源的心形图片的上下左右间距，相对于 cell 左下角零点而言，也即如果 left 越大则越往右，bottom 越大则越往上，另外 top 会影响底部遮罩的高度</p>","parent_name":"QMUIImagePickerCollectionViewCell"},"Classes/QMUIImagePickerCollectionViewCell.html#/c:objc(cs)QMUIImagePickerCollectionViewCell(py)checkboxImage":{"name":"checkboxImage","abstract":"<p>checkbox 未被选中时显示的图片</p>","parent_name":"QMUIImagePickerCollectionViewCell"},"Classes/QMUIImagePickerCollectionViewCell.html#/c:objc(cs)QMUIImagePickerCollectionViewCell(py)checkboxCheckedImage":{"name":"checkboxCheckedImage","abstract":"<p>checkbox 被选中时显示的图片</p>","parent_name":"QMUIImagePickerCollectionViewCell"},"Classes/QMUIImagePickerCollectionViewCell.html#/c:objc(cs)QMUIImagePickerCollectionViewCell(py)checkboxButtonMargins":{"name":"checkboxButtonMargins","abstract":"<p>checkbox 的 margin，定位从每个 cell（即每张图片）的最右边开始计算</p>","parent_name":"QMUIImagePickerCollectionViewCell"},"Classes/QMUIImagePickerCollectionViewCell.html#/c:objc(cs)QMUIImagePickerCollectionViewCell(py)videoDurationLabelFont":{"name":"videoDurationLabelFont","abstract":"<p>videoDurationLabel 的字号</p>","parent_name":"QMUIImagePickerCollectionViewCell"},"Classes/QMUIImagePickerCollectionViewCell.html#/c:objc(cs)QMUIImagePickerCollectionViewCell(py)videoDurationLabelTextColor":{"name":"videoDurationLabelTextColor","abstract":"<p>videoDurationLabel 的字体颜色</p>","parent_name":"QMUIImagePickerCollectionViewCell"},"Classes/QMUIImagePickerCollectionViewCell.html#/c:objc(cs)QMUIImagePickerCollectionViewCell(py)videoDurationLabelMargins":{"name":"videoDurationLabelMargins","abstract":"<p>视频时长文字的间距，相对于 cell 右下角而言，也即如果 right 越大则越往左，bottom 越大则越往上，另外 top 会影响底部遮罩的高度</p>","parent_name":"QMUIImagePickerCollectionViewCell"},"Classes/QMUIImagePickerCollectionViewCell.html#/c:objc(cs)QMUIImagePickerCollectionViewCell(py)contentImageView":{"name":"contentImageView","abstract":"<p>Undocumented</p>","parent_name":"QMUIImagePickerCollectionViewCell"},"Classes/QMUIImagePickerCollectionViewCell.html#/c:objc(cs)QMUIImagePickerCollectionViewCell(py)favoriteImageView":{"name":"favoriteImageView","abstract":"<p>Undocumented</p>","parent_name":"QMUIImagePickerCollectionViewCell"},"Classes/QMUIImagePickerCollectionViewCell.html#/c:objc(cs)QMUIImagePickerCollectionViewCell(py)checkboxButton":{"name":"checkboxButton","abstract":"<p>Undocumented</p>","parent_name":"QMUIImagePickerCollectionViewCell"},"Classes/QMUIImagePickerCollectionViewCell.html#/c:objc(cs)QMUIImagePickerCollectionViewCell(py)videoDurationLabel":{"name":"videoDurationLabel","abstract":"<p>Undocumented</p>","parent_name":"QMUIImagePickerCollectionViewCell"},"Classes/QMUIImagePickerCollectionViewCell.html#/c:objc(cs)QMUIImagePickerCollectionViewCell(py)bottomShadowLayer":{"name":"bottomShadowLayer","abstract":"<p>Undocumented</p>","parent_name":"QMUIImagePickerCollectionViewCell"},"Classes/QMUIImagePickerCollectionViewCell.html#/c:objc(cs)QMUIImagePickerCollectionViewCell(py)selectable":{"name":"selectable","abstract":"<p>Undocumented</p>","parent_name":"QMUIImagePickerCollectionViewCell"},"Classes/QMUIImagePickerCollectionViewCell.html#/c:objc(cs)QMUIImagePickerCollectionViewCell(py)checked":{"name":"checked","abstract":"<p>Undocumented</p>","parent_name":"QMUIImagePickerCollectionViewCell"},"Classes/QMUIImagePickerCollectionViewCell.html#/c:objc(cs)QMUIImagePickerCollectionViewCell(py)downloadStatus":{"name":"downloadStatus","abstract":"<p>Undocumented</p>","parent_name":"QMUIImagePickerCollectionViewCell"},"Classes/QMUIImagePickerCollectionViewCell.html#/c:objc(cs)QMUIImagePickerCollectionViewCell(py)assetIdentifier":{"name":"assetIdentifier","abstract":"<p>Undocumented</p>","parent_name":"QMUIImagePickerCollectionViewCell"},"Classes/QMUIImagePickerCollectionViewCell.html#/c:objc(cs)QMUIImagePickerCollectionViewCell(im)renderWithAsset:referenceSize:":{"name":"-renderWithAsset:referenceSize:","abstract":"<p>Undocumented</p>","parent_name":"QMUIImagePickerCollectionViewCell"},"Classes/QMUITableViewCell.html#/c:objc(cs)QMUITableViewCell(py)style":{"name":"style","abstract":"<p>Undocumented</p>","parent_name":"QMUITableViewCell"},"Classes/QMUITableViewCell.html#/c:objc(cs)QMUITableViewCell(py)imageEdgeInsets":{"name":"imageEdgeInsets","abstract":"<p>调整 imageView 的位置偏移，常用于调整 imageView 和 textLabel 之间的间距，默认为 UIEdgeInsetsZero。</p>","parent_name":"QMUITableViewCell"},"Classes/QMUITableViewCell.html#/c:objc(cs)QMUITableViewCell(py)textLabelEdgeInsets":{"name":"textLabelEdgeInsets","abstract":"<p>调整 textLabel 的位置偏移，默认为 UIEdgeInsetsZero。</p>","parent_name":"QMUITableViewCell"},"Classes/QMUITableViewCell.html#/c:objc(cs)QMUITableViewCell(py)detailTextLabelEdgeInsets":{"name":"detailTextLabelEdgeInsets","abstract":"<p>调整 detailTextLabel 的位置偏移，默认为 UIEdgeInsetsZero。</p>","parent_name":"QMUITableViewCell"},"Classes/QMUITableViewCell.html#/c:objc(cs)QMUITableViewCell(py)accessoryEdgeInsets":{"name":"accessoryEdgeInsets","abstract":"<p>调整右边 accessoryView 的布局偏移，默认为 UIEdgeInsetsZero。</p>","parent_name":"QMUITableViewCell"},"Classes/QMUITableViewCell.html#/c:objc(cs)QMUITableViewCell(py)accessoryHitTestEdgeInsets":{"name":"accessoryHitTestEdgeInsets","abstract":"<p>调整右边 accessoryView 的点击响应区域，可用负值扩大点击范围，默认为(-12, -12, -12, -12)。</p>","parent_name":"QMUITableViewCell"},"Classes/QMUITableViewCell.html#/c:objc(cs)QMUITableViewCell(py)enabled":{"name":"enabled","abstract":"<p>设置当前 cell 是否可用，setter 方法里面会修改当前的 subviews 样式，以展示出禁用的样式，具体样式请查看源码。</p>","parent_name":"QMUITableViewCell"},"Classes/QMUITableViewCell.html#/c:objc(cs)QMUITableViewCell(py)parentTableView":{"name":"parentTableView","abstract":"<p>保存对 tableView 的弱引用，在布局时可能会使用到 tableView 的一些属性例如 separatorColor 等</p>","parent_name":"QMUITableViewCell"},"Classes/QMUITableViewCell.html#/c:objc(cs)QMUITableViewCell(py)cellPosition":{"name":"cellPosition","abstract":"<p>cell 处于 section 中的位置，要求：</p>","parent_name":"QMUITableViewCell"},"Classes/QMUITableViewCell.html#/c:objc(cs)QMUITableViewCell(im)initForTableView:withStyle:reuseIdentifier:":{"name":"-initForTableView:withStyle:reuseIdentifier:","abstract":"<p>首选初始化方法</p>","parent_name":"QMUITableViewCell"},"Classes/QMUITableViewCell.html#/c:objc(cs)QMUITableViewCell(im)initForTableView:withReuseIdentifier:":{"name":"-initForTableView:withReuseIdentifier:","abstract":"<p>同上</p>","parent_name":"QMUITableViewCell"},"Classes/QMUITableViewCell.html#/c:objc(cs)QMUITableViewCell(im)didInitializeWithStyle:":{"name":"-didInitializeWithStyle:","abstract":"<p>初始化时调用的方法，会在两个 NS_DESIGNATED_INITIALIZER 方法中被调用，所以子类如果需要同时支持两个 NS_DESIGNATED_INITIALIZER 方法，则建议把初始化时要做的事情放到这个方法里。否则仅需重写要支持的那个 NS_DESIGNATED_INITIALIZER 方法即可。</p>","parent_name":"QMUITableViewCell"},"Classes/QMUITableViewCell.html#/c:objc(cs)QMUITableViewCell(im)updateCellAppearanceWithIndexPath:":{"name":"-updateCellAppearanceWithIndexPath:","abstract":"<p>用于继承的接口，设置一些cell相关的UI，需要自 cellForRowAtIndexPath 里面调用。默认实现是设置当前cell在哪个position。</p>","parent_name":"QMUITableViewCell"},"Classes/QMUIAlbumViewController.html#/c:objc(cs)QMUIAlbumViewController(py)albumViewControllerDelegate":{"name":"albumViewControllerDelegate","abstract":"<p>Undocumented</p>","parent_name":"QMUIAlbumViewController"},"Classes/QMUIAlbumViewController.html#/c:objc(cs)QMUIAlbumViewController(py)albumTableViewCellHeight":{"name":"albumTableViewCellHeight","abstract":"<p>相册列表 cell 的高度，同时也是相册预览图的宽高，默认57</p>","parent_name":"QMUIAlbumViewController"},"Classes/QMUIAlbumViewController.html#/c:objc(cs)QMUIAlbumViewController(py)contentType":{"name":"contentType","abstract":"<p>相册展示内容的类型，可以控制只展示照片、视频或音频的其中一种，也可以同时展示所有类型的资源，默认展示所有类型的资源。</p>","parent_name":"QMUIAlbumViewController"},"Classes/QMUIAlbumViewController.html#/c:objc(cs)QMUIAlbumViewController(py)tipTextWhenNoPhotosAuthorization":{"name":"tipTextWhenNoPhotosAuthorization","abstract":"<p>Undocumented</p>","parent_name":"QMUIAlbumViewController"},"Classes/QMUIAlbumViewController.html#/c:objc(cs)QMUIAlbumViewController(py)tipTextWhenPhotosEmpty":{"name":"tipTextWhenPhotosEmpty","abstract":"<p>Undocumented</p>","parent_name":"QMUIAlbumViewController"},"Classes/QMUIAlbumViewController.html#/c:objc(cs)QMUIAlbumViewController(py)shouldShowDefaultLoadingView":{"name":"shouldShowDefaultLoadingView","abstract":"<p>加载相册列表时会出现 loading，若需要自定义 loading 的形式，可将该属性置为 NO，默认为 YES。</p>","parent_name":"QMUIAlbumViewController"},"Classes/QMUIAlbumViewController.html#/c:objc(cs)QMUIAlbumViewController(im)pickLastAlbumGroupDirectlyIfCan":{"name":"-pickLastAlbumGroupDirectlyIfCan","abstract":"<p>在 QMUIAlbumViewController 被放到 UINavigationController 里之后，可通过调用这个方法，来尝试直接进入上一次选中的相册列表</p>","parent_name":"QMUIAlbumViewController"},"Classes/QMUIAlbumViewController.html#/c:objc(cs)QMUIAlbumViewController(cm)appearance":{"name":"+appearance","abstract":"<p>Undocumented</p>","parent_name":"QMUIAlbumViewController"},"Classes/QMUIAlbumTableViewCell.html#/c:objc(cs)QMUIAlbumTableViewCell(py)albumImageSize":{"name":"albumImageSize","abstract":"<p>Undocumented</p>","parent_name":"QMUIAlbumTableViewCell"},"Classes/QMUIAlbumTableViewCell.html#/c:objc(cs)QMUIAlbumTableViewCell(py)albumImageMarginLeft":{"name":"albumImageMarginLeft","abstract":"<p>Undocumented</p>","parent_name":"QMUIAlbumTableViewCell"},"Classes/QMUIAlbumTableViewCell.html#/c:objc(cs)QMUIAlbumTableViewCell(py)albumNameInsets":{"name":"albumNameInsets","abstract":"<p>Undocumented</p>","parent_name":"QMUIAlbumTableViewCell"},"Classes/QMUIAlbumTableViewCell.html#/c:objc(cs)QMUIAlbumTableViewCell(py)albumNameFont":{"name":"albumNameFont","abstract":"<p>Undocumented</p>","parent_name":"QMUIAlbumTableViewCell"},"Classes/QMUIAlbumTableViewCell.html#/c:objc(cs)QMUIAlbumTableViewCell(py)albumNameColor":{"name":"albumNameColor","abstract":"<p>Undocumented</p>","parent_name":"QMUIAlbumTableViewCell"},"Classes/QMUIAlbumTableViewCell.html#/c:objc(cs)QMUIAlbumTableViewCell(py)albumAssetsNumberFont":{"name":"albumAssetsNumberFont","abstract":"<p>Undocumented</p>","parent_name":"QMUIAlbumTableViewCell"},"Classes/QMUIAlbumTableViewCell.html#/c:objc(cs)QMUIAlbumTableViewCell(py)albumAssetsNumberColor":{"name":"albumAssetsNumberColor","abstract":"<p>Undocumented</p>","parent_name":"QMUIAlbumTableViewCell"},"Classes/QMUIImagePickerHelper.html#/c:objc(cs)QMUIImagePickerHelper(cm)springAnimationOfImageSelectedCountChangeWithCountLabel:":{"name":"+springAnimationOfImageSelectedCountChangeWithCountLabel:","abstract":"<p>选中图片数量改变时，展示图片数量的 Label 的动画，动画过程如下：","parent_name":"QMUIImagePickerHelper"},"Classes/QMUIImagePickerHelper.html#/c:objc(cs)QMUIImagePickerHelper(cm)springAnimationOfImageCheckedWithCheckboxButton:":{"name":"+springAnimationOfImageCheckedWithCheckboxButton:","abstract":"<p>图片 checkBox 被选中时的动画</p>","parent_name":"QMUIImagePickerHelper"},"Classes/QMUIImagePickerHelper.html#/c:objc(cs)QMUIImagePickerHelper(cm)removeSpringAnimationOfImageCheckedWithCheckboxButton:":{"name":"+removeSpringAnimationOfImageCheckedWithCheckboxButton:","abstract":"<p>搭配<i>springAnimationOfImageCheckedWithCheckboxButton:</i>一起使用，添加animation之前建议先remove</p>","parent_name":"QMUIImagePickerHelper"},"Classes/QMUIImagePickerHelper.html#/c:objc(cs)QMUIImagePickerHelper(cm)assetsGroupOfLastPickerAlbumWithUserIdentify:":{"name":"+assetsGroupOfLastPickerAlbumWithUserIdentify:","abstract":"<p>获取最近一次调用 updateLastAlbumWithAssetsGroup 方法调用时储存的 QMUIAssetsGroup 对象</p>","parent_name":"QMUIImagePickerHelper"},"Classes/QMUIImagePickerHelper.html#/c:objc(cs)QMUIImagePickerHelper(cm)updateLastestAlbumWithAssetsGroup:ablumContentType:userIdentify:":{"name":"+updateLastestAlbumWithAssetsGroup:ablumContentType:userIdentify:","abstract":"<p>储存一个 QMUIAssetsGroup，从而储存一个对应的相册，与 assetsGroupOfLatestPickerAlbumWithUserIdentify 方法对应使用</p>","parent_name":"QMUIImagePickerHelper"},"Classes/QMUIImagePickerHelper.html#/c:objc(cs)QMUIImagePickerHelper(cm)imageAssetsDownloaded:":{"name":"+imageAssetsDownloaded:","abstract":"<p>检测一组资源是否全部下载成功，如果有资源仍未从 iCloud 中下载成功，则返回 NO</p>","parent_name":"QMUIImagePickerHelper"},"Classes/QMUIImagePickerHelper.html#/c:objc(cs)QMUIImagePickerHelper(cm)requestImageAssetIfNeeded:completion:":{"name":"+requestImageAssetIfNeeded:completion:","abstract":"<p>检测资源是否已经在本地，如果资源仍未从 iCloud 中成功下载，则会发出请求从 iCloud 加载资源，并通过多次调用 block 返回请求结果</p>","parent_name":"QMUIImagePickerHelper"},"Classes/QMUINavigationTitleView.html#/c:objc(cs)QMUINavigationTitleView(py)delegate":{"name":"delegate","abstract":"<p>Undocumented</p>","parent_name":"QMUINavigationTitleView"},"Classes/QMUINavigationTitleView.html#/c:objc(cs)QMUINavigationTitleView(py)style":{"name":"style","abstract":"<p>Undocumented</p>","parent_name":"QMUINavigationTitleView"},"Classes/QMUINavigationTitleView.html#/c:objc(cs)QMUINavigationTitleView(py)active":{"name":"active","abstract":"<p>Undocumented</p>","parent_name":"QMUINavigationTitleView"},"Classes/QMUINavigationTitleView.html#/c:objc(cs)QMUINavigationTitleView(py)maximumWidth":{"name":"maximumWidth","abstract":"<p>Undocumented</p>","parent_name":"QMUINavigationTitleView"},"Classes/QMUINavigationTitleView.html#/c:objc(cs)QMUINavigationTitleView(py)titleLabel":{"name":"titleLabel","abstract":"<p>Undocumented</p>","parent_name":"QMUINavigationTitleView"},"Classes/QMUINavigationTitleView.html#/c:objc(cs)QMUINavigationTitleView(py)title":{"name":"title","abstract":"<p>Undocumented</p>","parent_name":"QMUINavigationTitleView"},"Classes/QMUINavigationTitleView.html#/c:objc(cs)QMUINavigationTitleView(py)subtitleLabel":{"name":"subtitleLabel","abstract":"<p>Undocumented</p>","parent_name":"QMUINavigationTitleView"},"Classes/QMUINavigationTitleView.html#/c:objc(cs)QMUINavigationTitleView(py)subtitle":{"name":"subtitle","abstract":"<p>Undocumented</p>","parent_name":"QMUINavigationTitleView"},"Classes/QMUINavigationTitleView.html#/c:objc(cs)QMUINavigationTitleView(py)adjustsSubviewsTintColorAutomatically":{"name":"adjustsSubviewsTintColorAutomatically","abstract":"<p>当 tintColor 发生变化时是否要自动把 titleLabel、subtitleLabel、loadingView 的颜色也更新为 tintColor 的色值，默认为 YES，如果你自己修改了 titleLabel、subtitleLabel、loadingView 的颜色，需要把这个值置为 NO</p>","parent_name":"QMUINavigationTitleView"},"Classes/QMUINavigationTitleView.html#/c:objc(cs)QMUINavigationTitleView(py)horizontalTitleFont":{"name":"horizontalTitleFont","abstract":"<p>水平布局下的标题字体，默认为 NavBarTitleFont</p>","parent_name":"QMUINavigationTitleView"},"Classes/QMUINavigationTitleView.html#/c:objc(cs)QMUINavigationTitleView(py)horizontalSubtitleFont":{"name":"horizontalSubtitleFont","abstract":"<p>水平布局下的副标题的字体，默认为 NavBarTitleFont</p>","parent_name":"QMUINavigationTitleView"},"Classes/QMUINavigationTitleView.html#/c:objc(cs)QMUINavigationTitleView(py)verticalTitleFont":{"name":"verticalTitleFont","abstract":"<p>垂直布局下的标题字体，默认为 UIFontMake(15)</p>","parent_name":"QMUINavigationTitleView"},"Classes/QMUINavigationTitleView.html#/c:objc(cs)QMUINavigationTitleView(py)verticalSubtitleFont":{"name":"verticalSubtitleFont","abstract":"<p>垂直布局下的副标题字体，默认为 UIFontLightMake(12)</p>","parent_name":"QMUINavigationTitleView"},"Classes/QMUINavigationTitleView.html#/c:objc(cs)QMUINavigationTitleView(py)titleEdgeInsets":{"name":"titleEdgeInsets","abstract":"<p>标题的上下左右间距，当标题不显示时，计算大小及布局时也不考虑这个间距，默认为 UIEdgeInsetsZero</p>","parent_name":"QMUINavigationTitleView"},"Classes/QMUINavigationTitleView.html#/c:objc(cs)QMUINavigationTitleView(py)subtitleEdgeInsets":{"name":"subtitleEdgeInsets","abstract":"<p>副标题的上下左右间距，当副标题不显示时，计算大小及布局时也不考虑这个间距，默认为 UIEdgeInsetsZero</p>","parent_name":"QMUINavigationTitleView"},"Classes/QMUINavigationTitleView.html#/c:objc(cs)QMUINavigationTitleView(py)loadingView":{"name":"loadingView","abstract":"<p>Undocumented</p>","parent_name":"QMUINavigationTitleView"},"Classes/QMUINavigationTitleView.html#/c:objc(cs)QMUINavigationTitleView(py)needsLoadingView":{"name":"needsLoadingView","abstract":"<p>Undocumented</p>","parent_name":"QMUINavigationTitleView"},"Classes/QMUINavigationTitleView.html#/c:objc(cs)QMUINavigationTitleView(py)loadingViewHidden":{"name":"loadingViewHidden","abstract":"<p>Undocumented</p>","parent_name":"QMUINavigationTitleView"},"Classes/QMUINavigationTitleView.html#/c:objc(cs)QMUINavigationTitleView(py)needsLoadingPlaceholderSpace":{"name":"needsLoadingPlaceholderSpace","abstract":"<p>Undocumented</p>","parent_name":"QMUINavigationTitleView"},"Classes/QMUINavigationTitleView.html#/c:objc(cs)QMUINavigationTitleView(py)loadingViewSize":{"name":"loadingViewSize","abstract":"<p>Undocumented</p>","parent_name":"QMUINavigationTitleView"},"Classes/QMUINavigationTitleView.html#/c:objc(cs)QMUINavigationTitleView(py)loadingViewMarginRight":{"name":"loadingViewMarginRight","abstract":"<p>Undocumented</p>","parent_name":"QMUINavigationTitleView"},"Classes/QMUINavigationTitleView.html#/c:objc(cs)QMUINavigationTitleView(py)accessoryView":{"name":"accessoryView","abstract":"<p>Undocumented</p>","parent_name":"QMUINavigationTitleView"},"Classes/QMUINavigationTitleView.html#/c:objc(cs)QMUINavigationTitleView(py)accessoryType":{"name":"accessoryType","abstract":"<p>Undocumented</p>","parent_name":"QMUINavigationTitleView"},"Classes/QMUINavigationTitleView.html#/c:objc(cs)QMUINavigationTitleView(py)accessoryViewOffset":{"name":"accessoryViewOffset","abstract":"<p>Undocumented</p>","parent_name":"QMUINavigationTitleView"},"Classes/QMUINavigationTitleView.html#/c:objc(cs)QMUINavigationTitleView(py)needsAccessoryPlaceholderSpace":{"name":"needsAccessoryPlaceholderSpace","abstract":"<p>Undocumented</p>","parent_name":"QMUINavigationTitleView"},"Classes/QMUINavigationTitleView.html#/c:objc(cs)QMUINavigationTitleView(py)subAccessoryView":{"name":"subAccessoryView","abstract":"<p>Undocumented</p>","parent_name":"QMUINavigationTitleView"},"Classes/QMUINavigationTitleView.html#/c:objc(cs)QMUINavigationTitleView(py)subAccessoryViewOffset":{"name":"subAccessoryViewOffset","abstract":"<p>Undocumented</p>","parent_name":"QMUINavigationTitleView"},"Classes/QMUINavigationTitleView.html#/c:objc(cs)QMUINavigationTitleView(py)needsSubAccessoryPlaceholderSpace":{"name":"needsSubAccessoryPlaceholderSpace","abstract":"<p>Undocumented</p>","parent_name":"QMUINavigationTitleView"},"Classes/QMUINavigationTitleView.html#/c:objc(cs)QMUINavigationTitleView(im)initWithStyle:":{"name":"-initWithStyle:","abstract":"<p>Undocumented</p>","parent_name":"QMUINavigationTitleView"},"Classes/QMUIConsoleViewController.html#/c:objc(cs)QMUIConsoleViewController(py)popoverButton":{"name":"popoverButton","abstract":"<p>Undocumented</p>","parent_name":"QMUIConsoleViewController"},"Classes/QMUIConsoleViewController.html#/c:objc(cs)QMUIConsoleViewController(py)textView":{"name":"textView","abstract":"<p>Undocumented</p>","parent_name":"QMUIConsoleViewController"},"Classes/QMUIConsoleViewController.html#/c:objc(cs)QMUIConsoleViewController(py)toolbar":{"name":"toolbar","abstract":"<p>Undocumented</p>","parent_name":"QMUIConsoleViewController"},"Classes/QMUIConsoleViewController.html#/c:objc(cs)QMUIConsoleViewController(py)dateFormatter":{"name":"dateFormatter","abstract":"<p>Undocumented</p>","parent_name":"QMUIConsoleViewController"},"Classes/QMUIConsoleViewController.html#/c:objc(cs)QMUIConsoleViewController(py)backgroundColor":{"name":"backgroundColor","abstract":"<p>Undocumented</p>","parent_name":"QMUIConsoleViewController"},"Classes/QMUIConsoleViewController.html#/c:objc(cs)QMUIConsoleViewController(im)logWithLevel:name:logString:":{"name":"-logWithLevel:name:logString:","abstract":"<p>Undocumented</p>","parent_name":"QMUIConsoleViewController"},"Classes/QMUIConsoleViewController.html#/c:objc(cs)QMUIConsoleViewController(im)log:":{"name":"-log:","abstract":"<p>Undocumented</p>","parent_name":"QMUIConsoleViewController"},"Classes/QMUIConsoleViewController.html#/c:objc(cs)QMUIConsoleViewController(im)clear":{"name":"-clear","abstract":"<p>Undocumented</p>","parent_name":"QMUIConsoleViewController"},"Classes/QMUIConsoleToolbar.html#/c:objc(cs)QMUIConsoleToolbar(py)levelButton":{"name":"levelButton","abstract":"<p>Undocumented</p>","parent_name":"QMUIConsoleToolbar"},"Classes/QMUIConsoleToolbar.html#/c:objc(cs)QMUIConsoleToolbar(py)nameButton":{"name":"nameButton","abstract":"<p>Undocumented</p>","parent_name":"QMUIConsoleToolbar"},"Classes/QMUIConsoleToolbar.html#/c:objc(cs)QMUIConsoleToolbar(py)clearButton":{"name":"clearButton","abstract":"<p>Undocumented</p>","parent_name":"QMUIConsoleToolbar"},"Classes/QMUIConsoleToolbar.html#/c:objc(cs)QMUIConsoleToolbar(py)searchTextField":{"name":"searchTextField","abstract":"<p>Undocumented</p>","parent_name":"QMUIConsoleToolbar"},"Classes/QMUIConsoleToolbar.html#/c:objc(cs)QMUIConsoleToolbar(py)searchResultCountLabel":{"name":"searchResultCountLabel","abstract":"<p>Undocumented</p>","parent_name":"QMUIConsoleToolbar"},"Classes/QMUIConsoleToolbar.html#/c:objc(cs)QMUIConsoleToolbar(py)searchResultPreviousButton":{"name":"searchResultPreviousButton","abstract":"<p>Undocumented</p>","parent_name":"QMUIConsoleToolbar"},"Classes/QMUIConsoleToolbar.html#/c:objc(cs)QMUIConsoleToolbar(py)searchResultNextButton":{"name":"searchResultNextButton","abstract":"<p>Undocumented</p>","parent_name":"QMUIConsoleToolbar"},"Classes/QMUIConsoleToolbar.html#/c:objc(cs)QMUIConsoleToolbar(im)setNeedsLayoutSearchResultViews":{"name":"-setNeedsLayoutSearchResultViews","abstract":"<p>Undocumented</p>","parent_name":"QMUIConsoleToolbar"},"Classes/QMUINavigationButton.html#/c:objc(cs)QMUINavigationButton(py)type":{"name":"type","abstract":"<p>获取当前按钮的<code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/QMUINavigationButtonType.html\">QMUINavigationButtonType</a></code></p>","parent_name":"QMUINavigationButton"},"Classes/QMUINavigationButton.html#/c:objc(cs)QMUINavigationButton(py)adjustsImageTintColorAutomatically":{"name":"adjustsImageTintColorAutomatically","abstract":"<p>UIBarButtonItem 默认都是跟随 tintColor 的，所以这里声明是否让图片也是用 AlwaysTemplate 模式","parent_name":"QMUINavigationButton"},"Classes/QMUINavigationButton.html#/c:objc(cs)QMUINavigationButton(im)initWithType:title:":{"name":"-initWithType:title:","abstract":"<p>导航栏按钮的初始化函数，指定的初始化方法</p>","parent_name":"QMUINavigationButton"},"Classes/QMUINavigationButton.html#/c:objc(cs)QMUINavigationButton(im)initWithType:":{"name":"-initWithType:","abstract":"<p>导航栏按钮的初始化函数</p>","parent_name":"QMUINavigationButton"},"Classes/QMUINavigationButton.html#/c:objc(cs)QMUINavigationButton(im)initWithImage:":{"name":"-initWithImage:","abstract":"<p>导航栏按钮的初始化函数</p>","parent_name":"QMUINavigationButton"},"Classes/QMUIToolbarButton.html#/c:objc(cs)QMUIToolbarButton(py)type":{"name":"type","abstract":"<p>获取当前按钮的type</p>","parent_name":"QMUIToolbarButton"},"Classes/QMUIToolbarButton.html#/c:objc(cs)QMUIToolbarButton(im)initWithType:":{"name":"-initWithType:","abstract":"<p>工具栏按钮的初始化函数</p>","parent_name":"QMUIToolbarButton"},"Classes/QMUIToolbarButton.html#/c:objc(cs)QMUIToolbarButton(im)initWithType:title:":{"name":"-initWithType:title:","abstract":"<p>工具栏按钮的初始化函数</p>","parent_name":"QMUIToolbarButton"},"Classes/QMUIToolbarButton.html#/c:objc(cs)QMUIToolbarButton(im)initWithImage:":{"name":"-initWithImage:","abstract":"<p>工具栏按钮的初始化函数</p>","parent_name":"QMUIToolbarButton"},"Classes/QMUIToolbarButton.html#/c:objc(cs)QMUIToolbarButton(cm)barButtonItemWithToolbarButton:target:action:":{"name":"+barButtonItemWithToolbarButton:target:action:","abstract":"<p>在原有的QMUIToolbarButton上创建一个UIBarButtonItem</p>","parent_name":"QMUIToolbarButton"},"Classes/QMUIToolbarButton.html#/c:objc(cs)QMUIToolbarButton(cm)barButtonItemWithType:title:target:action:":{"name":"+barButtonItemWithType:title:target:action:","abstract":"<p>创建一个特定type的UIBarButtonItem</p>","parent_name":"QMUIToolbarButton"},"Classes/QMUIToolbarButton.html#/c:objc(cs)QMUIToolbarButton(cm)barButtonItemWithImage:target:action:":{"name":"+barButtonItemWithImage:target:action:","abstract":"<p>创建一个图标类型的UIBarButtonItem</p>","parent_name":"QMUIToolbarButton"},"Classes/QMUIGhostButton.html#/c:objc(cs)QMUIGhostButton(py)ghostColor":{"name":"ghostColor","abstract":"<p>Undocumented</p>","parent_name":"QMUIGhostButton"},"Classes/QMUIGhostButton.html#/c:objc(cs)QMUIGhostButton(py)borderWidth":{"name":"borderWidth","abstract":"<p>Undocumented</p>","parent_name":"QMUIGhostButton"},"Classes/QMUIGhostButton.html#/c:objc(cs)QMUIGhostButton(py)cornerRadius":{"name":"cornerRadius","abstract":"<p>Undocumented</p>","parent_name":"QMUIGhostButton"},"Classes/QMUIGhostButton.html#/c:objc(cs)QMUIGhostButton(py)adjustsImageWithGhostColor":{"name":"adjustsImageWithGhostColor","abstract":"<p>控制按钮里面的图片是否也要跟随 <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/QMUIGhostButton.html#/c:objc(cs)QMUIGhostButton(py)ghostColor\">ghostColor</a></code> 一起变化，默认为 <code>NO</code></p>","parent_name":"QMUIGhostButton"},"Classes/QMUIGhostButton.html#/c:objc(cs)QMUIGhostButton(im)initWithGhostType:":{"name":"-initWithGhostType:","abstract":"<p>Undocumented</p>","parent_name":"QMUIGhostButton"},"Classes/QMUIGhostButton.html#/c:objc(cs)QMUIGhostButton(im)initWithGhostColor:":{"name":"-initWithGhostColor:","abstract":"<p>Undocumented</p>","parent_name":"QMUIGhostButton"},"Classes/QMUILinkButton.html#/c:objc(cs)QMUILinkButton(py)underlineHidden":{"name":"underlineHidden","abstract":"<p>控制下划线隐藏或显示，默认为NO，也即显示下划线</p>","parent_name":"QMUILinkButton"},"Classes/QMUILinkButton.html#/c:objc(cs)QMUILinkButton(py)underlineWidth":{"name":"underlineWidth","abstract":"<p>设置下划线的宽度，默认为 1</p>","parent_name":"QMUILinkButton"},"Classes/QMUILinkButton.html#/c:objc(cs)QMUILinkButton(py)underlineColor":{"name":"underlineColor","abstract":"<p>控制下划线颜色，若设置为nil，则使用当前按钮的titleColor的颜色作为下划线的颜色。默认为 nil。</p>","parent_name":"QMUILinkButton"},"Classes/QMUILinkButton.html#/c:objc(cs)QMUILinkButton(py)underlineInsets":{"name":"underlineInsets","abstract":"<p>下划线的位置是基于 titleLabel 的位置来计算的，默认x、width均和titleLabel一致，而可以通过这个属性来调整下划线的偏移值。默认为UIEdgeInsetsZero。</p>","parent_name":"QMUILinkButton"},"Classes/QMUIFillButton.html#/c:objc(cs)QMUIFillButton(py)fillColor":{"name":"fillColor","abstract":"<p>Undocumented</p>","parent_name":"QMUIFillButton"},"Classes/QMUIFillButton.html#/c:objc(cs)QMUIFillButton(py)titleTextColor":{"name":"titleTextColor","abstract":"<p>Undocumented</p>","parent_name":"QMUIFillButton"},"Classes/QMUIFillButton.html#/c:objc(cs)QMUIFillButton(py)cornerRadius":{"name":"cornerRadius","abstract":"<p>Undocumented</p>","parent_name":"QMUIFillButton"},"Classes/QMUIFillButton.html#/c:objc(cs)QMUIFillButton(py)adjustsImageWithTitleTextColor":{"name":"adjustsImageWithTitleTextColor","abstract":"<p>控制按钮里面的图片是否也要跟随 <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/QMUIFillButton.html#/c:objc(cs)QMUIFillButton(py)titleTextColor\">titleTextColor</a></code> 一起变化，默认为 <code>NO</code></p>","parent_name":"QMUIFillButton"},"Classes/QMUIFillButton.html#/c:objc(cs)QMUIFillButton(im)initWithFillType:":{"name":"-initWithFillType:","abstract":"<p>Undocumented</p>","parent_name":"QMUIFillButton"},"Classes/QMUIFillButton.html#/c:objc(cs)QMUIFillButton(im)initWithFillType:frame:":{"name":"-initWithFillType:frame:","abstract":"<p>Undocumented</p>","parent_name":"QMUIFillButton"},"Classes/QMUIFillButton.html#/c:objc(cs)QMUIFillButton(im)initWithFillColor:titleTextColor:":{"name":"-initWithFillColor:titleTextColor:","abstract":"<p>Undocumented</p>","parent_name":"QMUIFillButton"},"Classes/QMUIFillButton.html#/c:objc(cs)QMUIFillButton(im)initWithFillColor:titleTextColor:frame:":{"name":"-initWithFillColor:titleTextColor:frame:","abstract":"<p>Undocumented</p>","parent_name":"QMUIFillButton"},"Classes/QMUIButton.html#/c:objc(cs)QMUIButton(im)didInitialize":{"name":"-didInitialize","abstract":"<p>子类继承时重写的方法，一般不建议重写 initWithXxx</p>","parent_name":"QMUIButton"},"Classes/QMUIButton.html#/c:objc(cs)QMUIButton(py)adjustsTitleTintColorAutomatically":{"name":"adjustsTitleTintColorAutomatically","abstract":"<p>让按钮的文字颜色自动跟随tintColor调整（系统默认titleColor是不跟随的）<br/>","parent_name":"QMUIButton"},"Classes/QMUIButton.html#/c:objc(cs)QMUIButton(py)adjustsImageTintColorAutomatically":{"name":"adjustsImageTintColorAutomatically","abstract":"<p>让按钮的图片颜色自动跟随tintColor调整（系统默认image是需要更改renderingMode才可以达到这种效果）<br/>","parent_name":"QMUIButton"},"Classes/QMUIButton.html#/c:objc(cs)QMUIButton(py)tintColorAdjustsTitleAndImage":{"name":"tintColorAdjustsTitleAndImage","abstract":"<p>等价于 adjustsTitleTintColorAutomatically = YES &amp; adjustsImageTintColorAutomatically = YES &amp; tintColor = xxx</p>","parent_name":"QMUIButton"},"Classes/QMUIButton.html#/c:objc(cs)QMUIButton(py)adjustsButtonWhenHighlighted":{"name":"adjustsButtonWhenHighlighted","abstract":"<p>是否自动调整highlighted时的按钮样式，默认为YES。<br/>","parent_name":"QMUIButton"},"Classes/QMUIButton.html#/c:objc(cs)QMUIButton(py)adjustsButtonWhenDisabled":{"name":"adjustsButtonWhenDisabled","abstract":"<p>是否自动调整disabled时的按钮样式，默认为YES。<br/>","parent_name":"QMUIButton"},"Classes/QMUIButton.html#/c:objc(cs)QMUIButton(py)highlightedBackgroundColor":{"name":"highlightedBackgroundColor","abstract":"<p>设置按钮点击时的背景色，默认为nil。</p>","parent_name":"QMUIButton"},"Classes/QMUIButton.html#/c:objc(cs)QMUIButton(py)highlightedBorderColor":{"name":"highlightedBorderColor","abstract":"<p>设置按钮点击时的边框颜色，默认为nil。</p>","parent_name":"QMUIButton"},"Classes/QMUIButton.html#/c:objc(cs)QMUIButton(py)imagePosition":{"name":"imagePosition","abstract":"<p>设置按钮里图标和文字的相对位置，默认为QMUIButtonImagePositionLeft<br/>","parent_name":"QMUIButton"},"Classes/QMUIButton.html#/c:objc(cs)QMUIButton(py)spacingBetweenImageAndTitle":{"name":"spacingBetweenImageAndTitle","abstract":"<p>设置按钮里图标和文字之间的间隔，会自动响应 imagePosition 的变化而变化，默认为0。<br/>","parent_name":"QMUIButton"},"Classes/QMUITextField.html#/c:objc(cs)QMUITextField(py)delegate":{"name":"delegate","abstract":"<p>Undocumented</p>","parent_name":"QMUITextField"},"Classes/QMUITextField.html#/c:objc(cs)QMUITextField(py)placeholderColor":{"name":"placeholderColor","abstract":"<p>修改 placeholder 的颜色，默认是 UIColorPlaceholder。</p>","parent_name":"QMUITextField"},"Classes/QMUITextField.html#/c:objc(cs)QMUITextField(py)textInsets":{"name":"textInsets","abstract":"<p>文字在输入框内的 padding。如果出现 clearButton，则 textInsets.right 会控制 clearButton 的右边距</p>","parent_name":"QMUITextField"},"Classes/QMUITextField.html#/c:objc(cs)QMUITextField(py)clearButtonPositionAdjustment":{"name":"clearButtonPositionAdjustment","abstract":"<p>clearButton 在默认位置上的偏移</p>","parent_name":"QMUITextField"},"Classes/QMUITextField.html#/c:objc(cs)QMUITextField(py)shouldResponseToProgrammaticallyTextChanges":{"name":"shouldResponseToProgrammaticallyTextChanges","abstract":"<p>当通过 <code>setText:</code>、<code>setAttributedText:</code>等方式修改文字时，是否应该自动触发 UIControlEventEditingChanged 事件及 UITextFieldTextDidChangeNotification 通知。</p>","parent_name":"QMUITextField"},"Classes/QMUITextField.html#/c:objc(cs)QMUITextField(py)maximumTextLength":{"name":"maximumTextLength","abstract":"<p>显示允许输入的最大文字长度，默认为 NSUIntegerMax，也即不限制长度。</p>","parent_name":"QMUITextField"},"Classes/QMUITextField.html#/c:objc(cs)QMUITextField(py)shouldCountingNonASCIICharacterAsTwo":{"name":"shouldCountingNonASCIICharacterAsTwo","abstract":"<p>在使用 maximumTextLength 功能的时候，是否应该把文字长度按照 [NSString (QMUI) qmui_lengthWhenCountingNonASCIICharacterAsTwo] 的方法来计算。","parent_name":"QMUITextField"},"Classes/QMUIMultipleDelegates.html#/c:objc(cs)QMUIMultipleDelegates(cm)weakDelegates":{"name":"+weakDelegates","abstract":"<p>Undocumented</p>","parent_name":"QMUIMultipleDelegates"},"Classes/QMUIMultipleDelegates.html#/c:objc(cs)QMUIMultipleDelegates(cm)strongDelegates":{"name":"+strongDelegates","abstract":"<p>Undocumented</p>","parent_name":"QMUIMultipleDelegates"},"Classes/QMUIMultipleDelegates.html#/c:objc(cs)QMUIMultipleDelegates(py)delegates":{"name":"delegates","abstract":"<p>Undocumented</p>","parent_name":"QMUIMultipleDelegates"},"Classes/QMUIMultipleDelegates.html#/c:objc(cs)QMUIMultipleDelegates(py)parentObject":{"name":"parentObject","abstract":"<p>Undocumented</p>","parent_name":"QMUIMultipleDelegates"},"Classes/QMUIMultipleDelegates.html#/c:objc(cs)QMUIMultipleDelegates(im)addDelegate:":{"name":"-addDelegate:","abstract":"<p>Undocumented</p>","parent_name":"QMUIMultipleDelegates"},"Classes/QMUIMultipleDelegates.html#/c:objc(cs)QMUIMultipleDelegates(im)removeDelegate:":{"name":"-removeDelegate:","abstract":"<p>Undocumented</p>","parent_name":"QMUIMultipleDelegates"},"Classes/QMUIMultipleDelegates.html#/c:objc(cs)QMUIMultipleDelegates(im)removeAllDelegates":{"name":"-removeAllDelegates","abstract":"<p>Undocumented</p>","parent_name":"QMUIMultipleDelegates"},"Classes/QMUIMultipleDelegates.html#/c:objc(cs)QMUIMultipleDelegates(im)containsDelegate:":{"name":"-containsDelegate:","abstract":"<p>Undocumented</p>","parent_name":"QMUIMultipleDelegates"},"Classes/QMUIFloatLayoutView.html#/c:objc(cs)QMUIFloatLayoutView(py)padding":{"name":"padding","abstract":"<p>QMUIFloatLayoutView 内部的间距，默认为 UIEdgeInsetsZero</p>","parent_name":"QMUIFloatLayoutView"},"Classes/QMUIFloatLayoutView.html#/c:objc(cs)QMUIFloatLayoutView(py)minimumItemSize":{"name":"minimumItemSize","abstract":"<p>item 的最小宽高，默认为 CGSizeZero，也即不限制。</p>","parent_name":"QMUIFloatLayoutView"},"Classes/QMUIFloatLayoutView.html#/c:objc(cs)QMUIFloatLayoutView(py)maximumItemSize":{"name":"maximumItemSize","abstract":"<p>item 的最大宽高，默认为 QMUIFloatLayoutViewAutomaticalMaximumItemSize，也即不超过 floatLayoutView 自身最大内容宽高。</p>","parent_name":"QMUIFloatLayoutView"},"Classes/QMUIFloatLayoutView.html#/c:objc(cs)QMUIFloatLayoutView(py)itemMargins":{"name":"itemMargins","abstract":"<p>item 之间的间距，默认为 UIEdgeInsetsZero。</p>","parent_name":"QMUIFloatLayoutView"},"Classes/QMUILogger.html#/c:objc(cs)QMUILogger(py)delegate":{"name":"delegate","abstract":"<p>Undocumented</p>","parent_name":"QMUILogger"},"Classes/QMUILogger.html#/c:objc(cs)QMUILogger(py)logNameManager":{"name":"logNameManager","abstract":"<p>Undocumented</p>","parent_name":"QMUILogger"},"Classes/QMUILogger.html#/c:objc(cs)QMUILogger(cm)sharedInstance":{"name":"+sharedInstance","abstract":"<p>Undocumented</p>","parent_name":"QMUILogger"},"Classes/QMUILogger.html#/c:objc(cs)QMUILogger(im)printLogWithFile:line:func:logItem:":{"name":"-printLogWithFile:line:func:logItem:","abstract":"<p>Undocumented</p>","parent_name":"QMUILogger"},"Classes/QMUILogNameManager.html#/c:objc(cs)QMUILogNameManager(py)allNames":{"name":"allNames","abstract":"<p>获取当前所有 logName，key 为 logName 名，value 为 name 的 enabled 状态，可通过 value.boolValue 读取它的值</p>","parent_name":"QMUILogNameManager"},"Classes/QMUILogNameManager.html#/c:objc(cs)QMUILogNameManager(im)containsLogName:":{"name":"-containsLogName:","abstract":"<p>Undocumented</p>","parent_name":"QMUILogNameManager"},"Classes/QMUILogNameManager.html#/c:objc(cs)QMUILogNameManager(im)setEnabled:forLogName:":{"name":"-setEnabled:forLogName:","abstract":"<p>Undocumented</p>","parent_name":"QMUILogNameManager"},"Classes/QMUILogNameManager.html#/c:objc(cs)QMUILogNameManager(im)enabledForLogName:":{"name":"-enabledForLogName:","abstract":"<p>Undocumented</p>","parent_name":"QMUILogNameManager"},"Classes/QMUILogNameManager.html#/c:objc(cs)QMUILogNameManager(im)removeLogName:":{"name":"-removeLogName:","abstract":"<p>Undocumented</p>","parent_name":"QMUILogNameManager"},"Classes/QMUILogNameManager.html#/c:objc(cs)QMUILogNameManager(im)removeAllNames":{"name":"-removeAllNames","abstract":"<p>Undocumented</p>","parent_name":"QMUILogNameManager"},"Classes/QMUILogItem.html#/c:objc(cs)QMUILogItem(py)level":{"name":"level","abstract":"<p>日志的等级，可通过 QMUIConfigurationTemplate 配置表控制全局每个 level 是否可用</p>","parent_name":"QMUILogItem"},"Classes/QMUILogItem.html#/c:objc(cs)QMUILogItem(py)levelDisplayString":{"name":"levelDisplayString","abstract":"<p>Undocumented</p>","parent_name":"QMUILogItem"},"Classes/QMUILogItem.html#/c:objc(cs)QMUILogItem(py)name":{"name":"name","abstract":"<p>可利用 name 字段为日志分类，QMUILogNameManager 可全局控制某一个 name 是否可用</p>","parent_name":"QMUILogItem"},"Classes/QMUILogItem.html#/c:objc(cs)QMUILogItem(py)logString":{"name":"logString","abstract":"<p>日志的内容</p>","parent_name":"QMUILogItem"},"Classes/QMUILogItem.html#/c:objc(cs)QMUILogItem(py)enabled":{"name":"enabled","abstract":"<p>当前 logItem 对应的 name 是否可用，可通过 QMUILogNameManager 控制，默认为 YES</p>","parent_name":"QMUILogItem"},"Classes/QMUILogItem.html#/c:objc(cs)QMUILogItem(cm)logItemWithLevel:name:logString:":{"name":"+logItemWithLevel:name:logString:","abstract":"<p>Undocumented</p>","parent_name":"QMUILogItem"},"Classes/QMUIPopupContainerView.html#/c:objc(cs)QMUIPopupContainerView@_backgroundLayer":{"name":"_backgroundLayer","abstract":"<p>Undocumented</p>","parent_name":"QMUIPopupContainerView"},"Classes/QMUIPopupContainerView.html#/c:objc(cs)QMUIPopupContainerView@_arrowMinX":{"name":"_arrowMinX","abstract":"<p>Undocumented</p>","parent_name":"QMUIPopupContainerView"},"Classes/QMUIPopupContainerView.html#/c:objc(cs)QMUIPopupContainerView@_arrowMinY":{"name":"_arrowMinY","abstract":"<p>Undocumented</p>","parent_name":"QMUIPopupContainerView"},"Classes/QMUIPopupContainerView.html#/c:objc(cs)QMUIPopupContainerView(py)debug":{"name":"debug","abstract":"<p>Undocumented</p>","parent_name":"QMUIPopupContainerView"},"Classes/QMUIPopupContainerView.html#/c:objc(cs)QMUIPopupContainerView(py)automaticallyHidesWhenUserTap":{"name":"automaticallyHidesWhenUserTap","abstract":"<p>在浮层显示时，点击空白地方是否要自动隐藏浮层，仅在用方法 2 显示时有效。","parent_name":"QMUIPopupContainerView"},"Classes/QMUIPopupContainerView.html#/c:objc(cs)QMUIPopupContainerView(py)contentView":{"name":"contentView","abstract":"<p>所有subview都应该添加到contentView上，默认contentView.userInteractionEnabled = NO，需要事件操作时自行打开</p>","parent_name":"QMUIPopupContainerView"},"Classes/QMUIPopupContainerView.html#/c:objc(cs)QMUIPopupContainerView(py)imageView":{"name":"imageView","abstract":"<p>预提供的UIImageView，默认为nil，调用到的时候才初始化</p>","parent_name":"QMUIPopupContainerView"},"Classes/QMUIPopupContainerView.html#/c:objc(cs)QMUIPopupContainerView(py)textLabel":{"name":"textLabel","abstract":"<p>预提供的UILabel，默认为nil，调用到的时候才初始化。默认支持多行。</p>","parent_name":"QMUIPopupContainerView"},"Classes/QMUIPopupContainerView.html#/c:objc(cs)QMUIPopupContainerView(py)contentEdgeInsets":{"name":"contentEdgeInsets","abstract":"<p>圆角矩形气泡内的padding（不包括三角箭头），默认是(8, 8, 8, 8)</p>","parent_name":"QMUIPopupContainerView"},"Classes/QMUIPopupContainerView.html#/c:objc(cs)QMUIPopupContainerView(py)imageEdgeInsets":{"name":"imageEdgeInsets","abstract":"<p>调整imageView的位置，默认为UIEdgeInsetsZero。top/left正值表示往下/右方偏移，bottom/right仅在对应位置存在下一个子View时生效（例如只有同时存在imageView和textLabel时，imageEdgeInsets.right才会生效）。</p>","parent_name":"QMUIPopupContainerView"},"Classes/QMUIPopupContainerView.html#/c:objc(cs)QMUIPopupContainerView(py)textEdgeInsets":{"name":"textEdgeInsets","abstract":"<p>调整textLabel的位置，默认为UIEdgeInsetsZero。top/left/bottom/right的作用同<i>imageEdgeInsets</i></p>","parent_name":"QMUIPopupContainerView"},"Classes/QMUIPopupContainerView.html#/c:objc(cs)QMUIPopupContainerView(py)arrowSize":{"name":"arrowSize","abstract":"<p>三角箭头的大小，默认为 CGSizeMake(18, 9)</p>","parent_name":"QMUIPopupContainerView"},"Classes/QMUIPopupContainerView.html#/c:objc(cs)QMUIPopupContainerView(py)maximumWidth":{"name":"maximumWidth","abstract":"<p>最大宽度（指整个控件的宽度，而不是contentView部分），默认为CGFLOAT_MAX</p>","parent_name":"QMUIPopupContainerView"},"Classes/QMUIPopupContainerView.html#/c:objc(cs)QMUIPopupContainerView(py)minimumWidth":{"name":"minimumWidth","abstract":"<p>最小宽度（指整个控件的宽度，而不是contentView部分），默认为0</p>","parent_name":"QMUIPopupContainerView"},"Classes/QMUIPopupContainerView.html#/c:objc(cs)QMUIPopupContainerView(py)maximumHeight":{"name":"maximumHeight","abstract":"<p>最大高度（指整个控件的高度，而不是contentView部分），默认为CGFLOAT_MAX</p>","parent_name":"QMUIPopupContainerView"},"Classes/QMUIPopupContainerView.html#/c:objc(cs)QMUIPopupContainerView(py)minimumHeight":{"name":"minimumHeight","abstract":"<p>最小高度（指整个控件的高度，而不是contentView部分），默认为0</p>","parent_name":"QMUIPopupContainerView"},"Classes/QMUIPopupContainerView.html#/c:objc(cs)QMUIPopupContainerView(py)preferLayoutDirection":{"name":"preferLayoutDirection","abstract":"<p>计算布局时期望的默认位置，默认为QMUIPopupContainerViewLayoutDirectionAbove，也即在目标的上方</p>","parent_name":"QMUIPopupContainerView"},"Classes/QMUIPopupContainerView.html#/c:objc(cs)QMUIPopupContainerView(py)currentLayoutDirection":{"name":"currentLayoutDirection","abstract":"<p>最终的布局方向（preferLayoutDirection只是期望的方向，但有可能那个方向已经没有剩余空间可摆放控件了，所以会自动变换）</p>","parent_name":"QMUIPopupContainerView"},"Classes/QMUIPopupContainerView.html#/c:objc(cs)QMUIPopupContainerView(py)distanceBetweenSource":{"name":"distanceBetweenSource","abstract":"<p>最终布局时箭头距离目标边缘的距离，默认为5</p>","parent_name":"QMUIPopupContainerView"},"Classes/QMUIPopupContainerView.html#/c:objc(cs)QMUIPopupContainerView(py)safetyMarginsOfSuperview":{"name":"safetyMarginsOfSuperview","abstract":"<p>最终布局时与父节点的边缘的临界点，默认为(10, 10, 10, 10)</p>","parent_name":"QMUIPopupContainerView"},"Classes/QMUIPopupContainerView.html#/c:objc(cs)QMUIPopupContainerView(py)backgroundColor":{"name":"backgroundColor","abstract":"<p>Undocumented</p>","parent_name":"QMUIPopupContainerView"},"Classes/QMUIPopupContainerView.html#/c:objc(cs)QMUIPopupContainerView(py)highlightedBackgroundColor":{"name":"highlightedBackgroundColor","abstract":"<p>Undocumented</p>","parent_name":"QMUIPopupContainerView"},"Classes/QMUIPopupContainerView.html#/c:objc(cs)QMUIPopupContainerView(py)maskViewBackgroundColor":{"name":"maskViewBackgroundColor","abstract":"<p>当使用方法 2 显示并且打开了 automaticallyHidesWhenUserTap 时，可修改背景遮罩的颜色，默认为 UIColorMask，若非使用方法 2，或者没有打开 automaticallyHidesWhenUserTap，则背景遮罩为透明（可视为不存在背景遮罩）</p>","parent_name":"QMUIPopupContainerView"},"Classes/QMUIPopupContainerView.html#/c:objc(cs)QMUIPopupContainerView(py)shadowColor":{"name":"shadowColor","abstract":"<p>Undocumented</p>","parent_name":"QMUIPopupContainerView"},"Classes/QMUIPopupContainerView.html#/c:objc(cs)QMUIPopupContainerView(py)borderColor":{"name":"borderColor","abstract":"<p>Undocumented</p>","parent_name":"QMUIPopupContainerView"},"Classes/QMUIPopupContainerView.html#/c:objc(cs)QMUIPopupContainerView(py)borderWidth":{"name":"borderWidth","abstract":"<p>Undocumented</p>","parent_name":"QMUIPopupContainerView"},"Classes/QMUIPopupContainerView.html#/c:objc(cs)QMUIPopupContainerView(py)cornerRadius":{"name":"cornerRadius","abstract":"<p>Undocumented</p>","parent_name":"QMUIPopupContainerView"},"Classes/QMUIPopupContainerView.html#/c:objc(cs)QMUIPopupContainerView(py)sourceBarItem":{"name":"sourceBarItem","abstract":"<p>可以是 UINavigationBar、UIToolbar 上的 UIBarButtonItem，或者 UITabBar 上的 UITabBarItem</p>","parent_name":"QMUIPopupContainerView"},"Classes/QMUIPopupContainerView.html#/c:objc(cs)QMUIPopupContainerView(py)sourceView":{"name":"sourceView","abstract":"<p>Undocumented</p>","parent_name":"QMUIPopupContainerView"},"Classes/QMUIPopupContainerView.html#/c:objc(cs)QMUIPopupContainerView(py)sourceRect":{"name":"sourceRect","abstract":"<p>rect 需要处于 QMUIPopupContainerView 所在的坐标系内，例如如果 popup 使用 addSubview: 的方式添加到界面，则 sourceRect 应该是 superview 坐标系内的；如果 popup 使用 window 的方式展示，则 sourceRect 需要转换为 window 坐标系内。</p>","parent_name":"QMUIPopupContainerView"},"Classes/QMUIPopupContainerView.html#/c:objc(cs)QMUIPopupContainerView(im)updateLayout":{"name":"-updateLayout","abstract":"<p>立即刷新当前 popup 的布局，前提是 popup 已经被 show 过。</p>","parent_name":"QMUIPopupContainerView"},"Classes/QMUIPopupContainerView.html#/c:objc(cs)QMUIPopupContainerView(im)showWithAnimated:":{"name":"-showWithAnimated:","abstract":"<p>Undocumented</p>","parent_name":"QMUIPopupContainerView"},"Classes/QMUIPopupContainerView.html#/c:objc(cs)QMUIPopupContainerView(im)showWithAnimated:completion:":{"name":"-showWithAnimated:completion:","abstract":"<p>Undocumented</p>","parent_name":"QMUIPopupContainerView"},"Classes/QMUIPopupContainerView.html#/c:objc(cs)QMUIPopupContainerView(im)hideWithAnimated:":{"name":"-hideWithAnimated:","abstract":"<p>Undocumented</p>","parent_name":"QMUIPopupContainerView"},"Classes/QMUIPopupContainerView.html#/c:objc(cs)QMUIPopupContainerView(im)hideWithAnimated:completion:":{"name":"-hideWithAnimated:completion:","abstract":"<p>Undocumented</p>","parent_name":"QMUIPopupContainerView"},"Classes/QMUIPopupContainerView.html#/c:objc(cs)QMUIPopupContainerView(im)isShowing":{"name":"-isShowing","abstract":"<p>Undocumented</p>","parent_name":"QMUIPopupContainerView"},"Classes/QMUIPopupContainerView.html#/c:objc(cs)QMUIPopupContainerView(py)willShowBlock":{"name":"willShowBlock","abstract":"<p>即将显示时的回调","parent_name":"QMUIPopupContainerView"},"Classes/QMUIPopupContainerView.html#/c:objc(cs)QMUIPopupContainerView(py)willHideBlock":{"name":"willHideBlock","abstract":"<p>即将隐藏时的回调","parent_name":"QMUIPopupContainerView"},"Classes/QMUIPopupContainerView.html#/c:objc(cs)QMUIPopupContainerView(py)didHideBlock":{"name":"didHideBlock","abstract":"<p>已经隐藏后的回调","parent_name":"QMUIPopupContainerView"},"Classes/QMUIPopupContainerView.html#/c:objc(cs)QMUIPopupContainerView(im)didInitialize":{"name":"-didInitialize","abstract":"<p>子类重写，在初始化时做一些操作</p>","parent_name":"QMUIPopupContainerView"},"Classes/QMUIPopupContainerView.html#/c:objc(cs)QMUIPopupContainerView(im)sizeThatFitsInContentView:":{"name":"-sizeThatFitsInContentView:","abstract":"<p>子类重写，告诉父类subviews的合适大小</p>","parent_name":"QMUIPopupContainerView"},"Classes/QMUIThemeVisualEffect.html#/c:objc(cs)QMUIThemeVisualEffect(py)managerName":{"name":"managerName","abstract":"<p>Undocumented</p>","parent_name":"QMUIThemeVisualEffect"},"Classes/QMUIThemeVisualEffect.html#/c:objc(cs)QMUIThemeVisualEffect(py)themeProvider":{"name":"themeProvider","abstract":"<p>Undocumented</p>","parent_name":"QMUIThemeVisualEffect"},"Classes/QMUIThemeImage.html#/c:objc(cs)QMUIThemeImage(py)managerName":{"name":"managerName","abstract":"<p>Undocumented</p>","parent_name":"QMUIThemeImage"},"Classes/QMUIThemeImage.html#/c:objc(cs)QMUIThemeImage(py)themeProvider":{"name":"themeProvider","abstract":"<p>Undocumented</p>","parent_name":"QMUIThemeImage"},"Classes/QMUIThemeColor.html#/c:objc(cs)QMUIThemeColor(py)managerName":{"name":"managerName","abstract":"<p>Undocumented</p>","parent_name":"QMUIThemeColor"},"Classes/QMUIThemeColor.html#/c:objc(cs)QMUIThemeColor(py)themeProvider":{"name":"themeProvider","abstract":"<p>Undocumented</p>","parent_name":"QMUIThemeColor"},"Classes/QMUIThemeManagerCenter.html#/c:objc(cs)QMUIThemeManagerCenter(cpy)defaultThemeManager":{"name":"defaultThemeManager","abstract":"<p>Undocumented</p>","parent_name":"QMUIThemeManagerCenter"},"Classes/QMUIThemeManagerCenter.html#/c:objc(cs)QMUIThemeManagerCenter(cpy)themeManagers":{"name":"themeManagers","abstract":"<p>Undocumented</p>","parent_name":"QMUIThemeManagerCenter"},"Classes/QMUIThemeManagerCenter.html#/c:objc(cs)QMUIThemeManagerCenter(cm)themeManagerWithName:":{"name":"+themeManagerWithName:","abstract":"<p>Undocumented</p>","parent_name":"QMUIThemeManagerCenter"},"Classes/QMUIThemeManager.html#/c:objc(cs)QMUIThemeManager(cm)sharedInstance":{"name":"+sharedInstance","abstract":"<p>Undocumented</p>","parent_name":"QMUIThemeManager"},"Classes/QMUIThemeManager.html#/c:objc(cs)QMUIThemeManager(im)initWithCoder:":{"name":"-initWithCoder:","abstract":"<p>Undocumented</p>","parent_name":"QMUIThemeManager"},"Classes/QMUIThemeManager.html#/c:objc(cs)QMUIThemeManager(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"QMUIThemeManager"},"Classes/QMUIThemeManager.html#/c:objc(cs)QMUIThemeManager(cm)new":{"name":"+new","abstract":"<p>Undocumented</p>","parent_name":"QMUIThemeManager"},"Classes/QMUIThemeManager.html#/c:objc(cs)QMUIThemeManager(py)name":{"name":"name","abstract":"<p>Undocumented</p>","parent_name":"QMUIThemeManager"},"Classes/QMUIThemeManager.html#/c:objc(cs)QMUIThemeManager(py)respondsSystemStyleAutomatically":{"name":"respondsSystemStyleAutomatically","abstract":"<p>自动响应 iOS 13 里的 Dark Mode 切换，默认为 NO。当为 YES 时，能自动监听系统 Dark Mode 的切换，并通过询问 identifierForTrait 来将当前的系统界面样式转换成业务定义的主题，剩下的事情就跟 iOS 12 及以下的系统相同了。</p>","parent_name":"QMUIThemeManager"},"Classes/QMUIThemeManager.html#/c:objc(cs)QMUIThemeManager(py)identifierForTrait":{"name":"identifierForTrait","abstract":"<p>当 respondsSystemStyleAutomatically 为 YES 并且系统样式发生变化时，会通过这个 block 将当前的 UITraitCollection.userInterfaceStyle 转换成对应的业务主题 identifier</p>","parent_name":"QMUIThemeManager"},"Classes/QMUIThemeManager.html#/c:objc(cs)QMUIThemeManager(py)themeIdentifiers":{"name":"themeIdentifiers","abstract":"<p>获取所有主题的 identifier</p>","parent_name":"QMUIThemeManager"},"Classes/QMUIThemeManager.html#/c:objc(cs)QMUIThemeManager(py)themes":{"name":"themes","abstract":"<p>获取所有主题的对象</p>","parent_name":"QMUIThemeManager"},"Classes/QMUIThemeManager.html#/c:objc(cs)QMUIThemeManager(py)currentThemeIdentifier":{"name":"currentThemeIdentifier","abstract":"<p>获取当前主题的 identifier</p>","parent_name":"QMUIThemeManager"},"Classes/QMUIThemeManager.html#/c:objc(cs)QMUIThemeManager(py)currentTheme":{"name":"currentTheme","abstract":"<p>获取当前主题的对象</p>","parent_name":"QMUIThemeManager"},"Classes/QMUIThemeManager.html#/c:objc(cs)QMUIThemeManager(py)themeGenerator":{"name":"themeGenerator","abstract":"<p>当切换 currentThemeIdentifier 时如果遇到该 identifier 尚未被注册，则会尝试通过这个 block 来获取对应的主题对象并添加到 QMUIThemeManager 里</p>","parent_name":"QMUIThemeManager"},"Classes/QMUIThemeManager.html#/c:objc(cs)QMUIThemeManager(py)themeIdentifierGenerator":{"name":"themeIdentifierGenerator","abstract":"<p>当切换 currentTheme 时如果遇到该 theme 尚未被注册，则会尝试通过这个 block 来获取对应的 identifier 并添加到 QMUIThemeManager 里</p>","parent_name":"QMUIThemeManager"},"Classes/QMUIThemeManager.html#/c:objc(cs)QMUIThemeManager(im)addThemeIdentifier:theme:":{"name":"-addThemeIdentifier:theme:","abstract":"<p>添加主题，不允许重复添加</p>","parent_name":"QMUIThemeManager"},"Classes/QMUIThemeManager.html#/c:objc(cs)QMUIThemeManager(im)removeThemeIdentifier:":{"name":"-removeThemeIdentifier:","abstract":"<p>移除指定 identifier 的主题</p>","parent_name":"QMUIThemeManager"},"Classes/QMUIThemeManager.html#/c:objc(cs)QMUIThemeManager(im)removeTheme:":{"name":"-removeTheme:","abstract":"<p>移除指定的主题对象</p>","parent_name":"QMUIThemeManager"},"Classes/QMUIThemeManager.html#/c:objc(cs)QMUIThemeManager(im)themeForIdentifier:":{"name":"-themeForIdentifier:","abstract":"<p>根据指定的 identifier 获取对应的主题对象</p>","parent_name":"QMUIThemeManager"},"Classes/QMUIThemeManager.html#/c:objc(cs)QMUIThemeManager(im)identifierForTheme:":{"name":"-identifierForTheme:","abstract":"<p>获取主题对应的 identifier</p>","parent_name":"QMUIThemeManager"},"Classes/QMUIDisplayLinkAnimation.html#/c:objc(cs)QMUIDisplayLinkAnimation(py)displayLink":{"name":"displayLink","abstract":"<p>Undocumented</p>","parent_name":"QMUIDisplayLinkAnimation"},"Classes/QMUIDisplayLinkAnimation.html#/c:objc(cs)QMUIDisplayLinkAnimation(py)fromValue":{"name":"fromValue","abstract":"<p>Undocumented</p>","parent_name":"QMUIDisplayLinkAnimation"},"Classes/QMUIDisplayLinkAnimation.html#/c:objc(cs)QMUIDisplayLinkAnimation(py)toValue":{"name":"toValue","abstract":"<p>Undocumented</p>","parent_name":"QMUIDisplayLinkAnimation"},"Classes/QMUIDisplayLinkAnimation.html#/c:objc(cs)QMUIDisplayLinkAnimation(py)duration":{"name":"duration","abstract":"<p>动画时间</p>","parent_name":"QMUIDisplayLinkAnimation"},"Classes/QMUIDisplayLinkAnimation.html#/c:objc(cs)QMUIDisplayLinkAnimation(py)easing":{"name":"easing","abstract":"<p>动画曲线</p>","parent_name":"QMUIDisplayLinkAnimation"},"Classes/QMUIDisplayLinkAnimation.html#/c:objc(cs)QMUIDisplayLinkAnimation(py)repeat":{"name":"repeat","abstract":"<p>是否需要重复，如果设置为YES，那么会无限重复动画，默认NO","parent_name":"QMUIDisplayLinkAnimation"},"Classes/QMUIDisplayLinkAnimation.html#/c:objc(cs)QMUIDisplayLinkAnimation(py)beginTime":{"name":"beginTime","abstract":"<p>延迟开始动画</p>","parent_name":"QMUIDisplayLinkAnimation"},"Classes/QMUIDisplayLinkAnimation.html#/c:objc(cs)QMUIDisplayLinkAnimation(py)repeatCount":{"name":"repeatCount","abstract":"<p>只有设置了repeat之后这个值才有用</p>","parent_name":"QMUIDisplayLinkAnimation"},"Classes/QMUIDisplayLinkAnimation.html#/c:objc(cs)QMUIDisplayLinkAnimation(py)autoreverses":{"name":"autoreverses","abstract":"<p>只有设置了repeat之后这个值才有用。如果YES，则往前做动画之后自动往后做动画，默认NO</p>","parent_name":"QMUIDisplayLinkAnimation"},"Classes/QMUIDisplayLinkAnimation.html#/c:objc(cs)QMUIDisplayLinkAnimation(py)animation":{"name":"animation","abstract":"<p>做动画的block，适用于只有一个属性需要做动画，curValue是经过计算后当前帧的值</p>","parent_name":"QMUIDisplayLinkAnimation"},"Classes/QMUIDisplayLinkAnimation.html#/c:objc(cs)QMUIDisplayLinkAnimation(py)animations":{"name":"animations","abstract":"<p>做动画的block，适用于多个属性做动画，需要在block里面自己计算当前帧的所有属性的值</p>","parent_name":"QMUIDisplayLinkAnimation"},"Classes/QMUIDisplayLinkAnimation.html#/c:objc(cs)QMUIDisplayLinkAnimation(im)initWithDuration:easing:fromValue:toValue:animation:":{"name":"-initWithDuration:easing:fromValue:toValue:animation:","abstract":"<p>Undocumented</p>","parent_name":"QMUIDisplayLinkAnimation"},"Classes/QMUIDisplayLinkAnimation.html#/c:objc(cs)QMUIDisplayLinkAnimation(im)initWithDuration:easing:animations:":{"name":"-initWithDuration:easing:animations:","abstract":"<p>Undocumented</p>","parent_name":"QMUIDisplayLinkAnimation"},"Classes/QMUIDisplayLinkAnimation.html#/c:objc(cs)QMUIDisplayLinkAnimation(im)startAnimation":{"name":"-startAnimation","abstract":"<p>开始动画，无论是第一次做动画或者暂停之后再重新做动画，都调用这个方法</p>","parent_name":"QMUIDisplayLinkAnimation"},"Classes/QMUIDisplayLinkAnimation.html#/c:objc(cs)QMUIDisplayLinkAnimation(im)stopAnimation":{"name":"-stopAnimation","abstract":"<p>停止动画，CADisplayLink 对象会被移出</p>","parent_name":"QMUIDisplayLinkAnimation"},"Classes/QMUIDisplayLinkAnimation.html#/c:objc(cs)QMUIDisplayLinkAnimation(py)willStartAnimation":{"name":"willStartAnimation","abstract":"<p>即将开始做动画</p>","parent_name":"QMUIDisplayLinkAnimation"},"Classes/QMUIDisplayLinkAnimation.html#/c:objc(cs)QMUIDisplayLinkAnimation(py)didStopAnimation":{"name":"didStopAnimation","abstract":"<p>动画结束</p>","parent_name":"QMUIDisplayLinkAnimation"},"Classes/QMUIDisplayLinkAnimation.html#/c:objc(cs)QMUIDisplayLinkAnimation(cm)springAnimateWithFromValue:toValue:animation:createdBlock:":{"name":"+springAnimateWithFromValue:toValue:animation:createdBlock:","abstract":"<p>Undocumented</p>","parent_name":"QMUIDisplayLinkAnimation"},"Classes/QMUIDisplayLinkAnimation.html#/c:objc(cs)QMUIDisplayLinkAnimation(cm)animateWithDuration:easing:fromValue:toValue:animation:":{"name":"+animateWithDuration:easing:fromValue:toValue:animation:","abstract":"<p>Undocumented</p>","parent_name":"QMUIDisplayLinkAnimation"},"Classes/QMUIDisplayLinkAnimation.html#/c:objc(cs)QMUIDisplayLinkAnimation(cm)animateWithDuration:easing:fromValue:toValue:animation:createdBlock:":{"name":"+animateWithDuration:easing:fromValue:toValue:animation:createdBlock:","abstract":"<p>Undocumented</p>","parent_name":"QMUIDisplayLinkAnimation"},"Classes/QMUIDisplayLinkAnimation.html#/c:objc(cs)QMUIDisplayLinkAnimation(cm)animateWithDuration:easing:fromValue:toValue:animation:createdBlock:didStopBlock:":{"name":"+animateWithDuration:easing:fromValue:toValue:animation:createdBlock:didStopBlock:","abstract":"<p>Undocumented</p>","parent_name":"QMUIDisplayLinkAnimation"},"Classes/QMUIDisplayLinkAnimation.html#/c:objc(cs)QMUIDisplayLinkAnimation(cm)springAnimateWithAnimations:createdBlock:":{"name":"+springAnimateWithAnimations:createdBlock:","abstract":"<p>Undocumented</p>","parent_name":"QMUIDisplayLinkAnimation"},"Classes/QMUIDisplayLinkAnimation.html#/c:objc(cs)QMUIDisplayLinkAnimation(cm)animateWithDuration:easing:animations:":{"name":"+animateWithDuration:easing:animations:","abstract":"<p>Undocumented</p>","parent_name":"QMUIDisplayLinkAnimation"},"Classes/QMUIDisplayLinkAnimation.html#/c:objc(cs)QMUIDisplayLinkAnimation(cm)animateWithDuration:easing:animations:createdBlock:":{"name":"+animateWithDuration:easing:animations:createdBlock:","abstract":"<p>Undocumented</p>","parent_name":"QMUIDisplayLinkAnimation"},"Classes/QMUIDisplayLinkAnimation.html#/c:objc(cs)QMUIDisplayLinkAnimation(cm)animateWithDuration:easing:animations:createdBlock:didStopBlock:":{"name":"+animateWithDuration:easing:animations:createdBlock:didStopBlock:","abstract":"<p>Undocumented</p>","parent_name":"QMUIDisplayLinkAnimation"},"Classes/QMUIAnimationHelper.html#/c:objc(cs)QMUIAnimationHelper(cm)interpolateFromValue:toValue:time:easing:":{"name":"+interpolateFromValue:toValue:time:easing:","abstract":"<p>动画插值器","parent_name":"QMUIAnimationHelper"},"Classes/QMUIAnimationHelper.html#/c:objc(cs)QMUIAnimationHelper(cm)interpolateSpringFromValue:toValue:time:mass:damping:stiffness:initialVelocity:easing:":{"name":"+interpolateSpringFromValue:toValue:time:mass:damping:stiffness:initialVelocity:easing:","abstract":"<p>动画插值器，支持弹簧参数","parent_name":"QMUIAnimationHelper"},"Classes/QMUIImagePreviewViewTransitionAnimator.html#/c:objc(cs)QMUIImagePreviewViewTransitionAnimator(py)imagePreviewViewController":{"name":"imagePreviewViewController","abstract":"<p>当前图片预览控件的引用，在为 QMUIImagePreviewViewController.transitioningAnimator 赋值时会自动建立这个引用关系</p>","parent_name":"QMUIImagePreviewViewTransitionAnimator"},"Classes/QMUIImagePreviewViewTransitionAnimator.html#/c:objc(cs)QMUIImagePreviewViewTransitionAnimator(py)duration":{"name":"duration","abstract":"<p>转场动画的持续时长，默认为 0.25</p>","parent_name":"QMUIImagePreviewViewTransitionAnimator"},"Classes/QMUIImagePreviewViewTransitionAnimator.html#/c:objc(cs)QMUIImagePreviewViewTransitionAnimator(py)cornerRadiusMaskLayer":{"name":"cornerRadiusMaskLayer","abstract":"<p>当 sourceImageView 本身带圆角时，动画过程中会通过这个 layer 来处理圆角的动画</p>","parent_name":"QMUIImagePreviewViewTransitionAnimator"},"Classes/QMUIImagePreviewViewTransitionAnimator.html#/c:objc(cs)QMUIImagePreviewViewTransitionAnimator(py)animationEnteringBlock":{"name":"animationEnteringBlock","abstract":"<p>动画开始前的准备工作可以在这里做</p>","parent_name":"QMUIImagePreviewViewTransitionAnimator"},"Classes/QMUIImagePreviewViewTransitionAnimator.html#/c:objc(cs)QMUIImagePreviewViewTransitionAnimator(py)animationBlock":{"name":"animationBlock","abstract":"<p>转场时的实际动画内容，整个 block 会在一个 UIView animation block 里被调用，因此直接写动画内容即可，无需包裹一个 animation block</p>","parent_name":"QMUIImagePreviewViewTransitionAnimator"},"Classes/QMUIImagePreviewViewTransitionAnimator.html#/c:objc(cs)QMUIImagePreviewViewTransitionAnimator(py)animationCompletionBlock":{"name":"animationCompletionBlock","abstract":"<p>动画结束后的事情，在执行完这个 block 后才会调用 [transitionContext completeTransition:]</p>","parent_name":"QMUIImagePreviewViewTransitionAnimator"},"Classes/QMUIImagePreviewViewController.html#/c:objc(cs)QMUIImagePreviewViewController(py)backgroundColor":{"name":"backgroundColor","abstract":"<p>图片背后的黑色背景，默认为配置表里的 UIColorBlack</p>","parent_name":"QMUIImagePreviewViewController"},"Classes/QMUIImagePreviewViewController.html#/c:objc(cs)QMUIImagePreviewViewController(py)imagePreviewView":{"name":"imagePreviewView","abstract":"<p>Undocumented</p>","parent_name":"QMUIImagePreviewViewController"},"Classes/QMUIImagePreviewViewController.html#/c:objc(cs)QMUIImagePreviewViewController(py)transitioningAnimator":{"name":"transitioningAnimator","abstract":"<p>以 present 方式进入大图预览的时候使用的转场动画 animator，可通过 QMUIImagePreviewViewTransitionAnimator 提供的若干个 block 属性自定义动画，也可以完全重写一个自己的 animator。</p>","parent_name":"QMUIImagePreviewViewController"},"Classes/QMUIImagePreviewViewController.html#/c:objc(cs)QMUIImagePreviewViewController(py)presentingStyle":{"name":"presentingStyle","abstract":"<p>present 时的动画，默认为 fade，当修改了 presentingStyle 时会自动把 dismissingStyle 也修改为相同的值。</p>","parent_name":"QMUIImagePreviewViewController"},"Classes/QMUIImagePreviewViewController.html#/c:objc(cs)QMUIImagePreviewViewController(py)dismissingStyle":{"name":"dismissingStyle","abstract":"<p>dismiss 时的动画，默认为 fade，默认与 presentingStyle 的值相同，若需要与之不同，请在设置完 presentingStyle 之后再设置 dismissingStyle。</p>","parent_name":"QMUIImagePreviewViewController"},"Classes/QMUIImagePreviewViewController.html#/c:objc(cs)QMUIImagePreviewViewController(py)sourceImageView":{"name":"sourceImageView","abstract":"<p>当以 zoom 动画进入/退出大图预览时，会通过这个 block 获取到原本界面上的图片所在的 view，从而进行动画的位置计算，如果返回的值为 nil，则会强制使用 fade 动画。当同时存在 sourceImageView 和 sourceImageRect 时，只有 sourceImageRect 会被调用。</p>","parent_name":"QMUIImagePreviewViewController"},"Classes/QMUIImagePreviewViewController.html#/c:objc(cs)QMUIImagePreviewViewController(py)sourceImageRect":{"name":"sourceImageRect","abstract":"<p>当以 zoom 动画进入/退出大图预览时，会通过这个 block 获取到原本界面上的图片所在的 view，从而进行动画的位置计算，如果返回的值为 CGRectZero，则会强制使用 fade 动画。注意返回值要进行坐标系转换。当同时存在 sourceImageView 和 sourceImageRect 时，只有 sourceImageRect 会被调用。</p>","parent_name":"QMUIImagePreviewViewController"},"Classes/QMUIImagePreviewViewController.html#/c:objc(cs)QMUIImagePreviewViewController(py)sourceImageCornerRadius":{"name":"sourceImageCornerRadius","abstract":"<p>当以 zoom 动画进入/退出大图预览时，可以指定一个圆角值，默认为 QMUIImagePreviewViewControllerCornerRadiusAutomaticDimension，也即自动从 sourceImageView.layer.cornerRadius 获取，如果使用的是 sourceImageRect 或希望自定义圆角值，则直接给 sourceImageCornerRadius 赋值即可。</p>","parent_name":"QMUIImagePreviewViewController"},"Classes/QMUIImagePreviewViewController.html#/c:objc(cs)QMUIImagePreviewViewController(py)dismissingGestureEnabled":{"name":"dismissingGestureEnabled","abstract":"<p>是否支持手势拖拽退出预览模式，默认为 YES。仅对以 present 方式进入大图预览的场景有效。</p>","parent_name":"QMUIImagePreviewViewController"},"Classes/QMUIImagePreviewViewController.html#/c:objc(cs)QMUIImagePreviewViewController(cm)appearance":{"name":"+appearance","abstract":"<p>Undocumented</p>","parent_name":"QMUIImagePreviewViewController"},"Classes/QMUIZoomImageViewVideoToolbar.html#/c:objc(cs)QMUIZoomImageViewVideoToolbar(py)playButton":{"name":"playButton","abstract":"<p>Undocumented</p>","parent_name":"QMUIZoomImageViewVideoToolbar"},"Classes/QMUIZoomImageViewVideoToolbar.html#/c:objc(cs)QMUIZoomImageViewVideoToolbar(py)pauseButton":{"name":"pauseButton","abstract":"<p>Undocumented</p>","parent_name":"QMUIZoomImageViewVideoToolbar"},"Classes/QMUIZoomImageViewVideoToolbar.html#/c:objc(cs)QMUIZoomImageViewVideoToolbar(py)slider":{"name":"slider","abstract":"<p>Undocumented</p>","parent_name":"QMUIZoomImageViewVideoToolbar"},"Classes/QMUIZoomImageViewVideoToolbar.html#/c:objc(cs)QMUIZoomImageViewVideoToolbar(py)sliderLeftLabel":{"name":"sliderLeftLabel","abstract":"<p>Undocumented</p>","parent_name":"QMUIZoomImageViewVideoToolbar"},"Classes/QMUIZoomImageViewVideoToolbar.html#/c:objc(cs)QMUIZoomImageViewVideoToolbar(py)sliderRightLabel":{"name":"sliderRightLabel","abstract":"<p>Undocumented</p>","parent_name":"QMUIZoomImageViewVideoToolbar"},"Classes/QMUIZoomImageViewVideoToolbar.html#/c:objc(cs)QMUIZoomImageViewVideoToolbar(py)paddings":{"name":"paddings","abstract":"<p>Undocumented</p>","parent_name":"QMUIZoomImageViewVideoToolbar"},"Classes/QMUIZoomImageViewVideoToolbar.html#/c:objc(cs)QMUIZoomImageViewVideoToolbar(py)playButtonImage":{"name":"playButtonImage","abstract":"<p>Undocumented</p>","parent_name":"QMUIZoomImageViewVideoToolbar"},"Classes/QMUIZoomImageViewVideoToolbar.html#/c:objc(cs)QMUIZoomImageViewVideoToolbar(py)pauseButtonImage":{"name":"pauseButtonImage","abstract":"<p>Undocumented</p>","parent_name":"QMUIZoomImageViewVideoToolbar"},"Classes/QMUIZoomImageView.html#/c:objc(cs)QMUIZoomImageView(py)delegate":{"name":"delegate","abstract":"<p>Undocumented</p>","parent_name":"QMUIZoomImageView"},"Classes/QMUIZoomImageView.html#/c:objc(cs)QMUIZoomImageView(py)scrollView":{"name":"scrollView","abstract":"<p>Undocumented</p>","parent_name":"QMUIZoomImageView"},"Classes/QMUIZoomImageView.html#/c:objc(cs)QMUIZoomImageView(py)viewportRect":{"name":"viewportRect","abstract":"<p>比如常见的上传头像预览界面中间有一个用于裁剪的方框，则 viewportRect 必须被设置为这个方框在 zoomImageView 坐标系内的 frame，否则拖拽图片或视频时无法正确限制它们的显示范围</p>","parent_name":"QMUIZoomImageView"},"Classes/QMUIZoomImageView.html#/c:objc(cs)QMUIZoomImageView(py)maximumZoomScale":{"name":"maximumZoomScale","abstract":"<p>Undocumented</p>","parent_name":"QMUIZoomImageView"},"Classes/QMUIZoomImageView.html#/c:objc(cs)QMUIZoomImageView(py)reusedIdentifier":{"name":"reusedIdentifier","abstract":"<p>Undocumented</p>","parent_name":"QMUIZoomImageView"},"Classes/QMUIZoomImageView.html#/c:objc(cs)QMUIZoomImageView(py)image":{"name":"image","abstract":"<p>设置当前要显示的图片，会把 livePhoto/video 相关内容清空，因此注意不要直接通过 imageView.image 来设置图片。</p>","parent_name":"QMUIZoomImageView"},"Classes/QMUIZoomImageView.html#/c:objc(cs)QMUIZoomImageView(py)imageView":{"name":"imageView","abstract":"<p>用于显示图片的 UIImageView，注意不要通过 imageView.image 来设置图片，请使用 image 属性。</p>","parent_name":"QMUIZoomImageView"},"Classes/QMUIZoomImageView.html#/c:objc(cs)QMUIZoomImageView(py)livePhoto":{"name":"livePhoto","abstract":"<p>设置当前要显示的 Live Photo，会把 image/video 相关内容清空，因此注意不要直接通过 livePhotoView.livePhoto 来设置</p>","parent_name":"QMUIZoomImageView"},"Classes/QMUIZoomImageView.html#/c:objc(cs)QMUIZoomImageView(py)livePhotoView":{"name":"livePhotoView","abstract":"<p>用于显示 Live Photo 的 view，仅在 iOS 9.1 及以后才有效</p>","parent_name":"QMUIZoomImageView"},"Classes/QMUIZoomImageView.html#/c:objc(cs)QMUIZoomImageView(py)videoPlayerItem":{"name":"videoPlayerItem","abstract":"<p>设置当前要显示的 video ，会把 image/livePhoto 相关内容清空，因此注意不要直接通过 videoPlayerLayer 来设置</p>","parent_name":"QMUIZoomImageView"},"Classes/QMUIZoomImageView.html#/c:objc(cs)QMUIZoomImageView(py)videoPlayerLayer":{"name":"videoPlayerLayer","abstract":"<p>用于显示 video 的 layer</p>","parent_name":"QMUIZoomImageView"},"Classes/QMUIZoomImageView.html#/c:objc(cs)QMUIZoomImageView(py)videoToolbar":{"name":"videoToolbar","abstract":"<p>Undocumented</p>","parent_name":"QMUIZoomImageView"},"Classes/QMUIZoomImageView.html#/c:objc(cs)QMUIZoomImageView(py)videoToolbarMargins":{"name":"videoToolbarMargins","abstract":"<p>Undocumented</p>","parent_name":"QMUIZoomImageView"},"Classes/QMUIZoomImageView.html#/c:objc(cs)QMUIZoomImageView(py)videoCenteredPlayButton":{"name":"videoCenteredPlayButton","abstract":"<p>Undocumented</p>","parent_name":"QMUIZoomImageView"},"Classes/QMUIZoomImageView.html#/c:objc(cs)QMUIZoomImageView(py)videoCenteredPlayButtonImage":{"name":"videoCenteredPlayButtonImage","abstract":"<p>Undocumented</p>","parent_name":"QMUIZoomImageView"},"Classes/QMUIZoomImageView.html#/c:objc(cs)QMUIZoomImageView(py)cloudProgressView":{"name":"cloudProgressView","abstract":"<p>Undocumented</p>","parent_name":"QMUIZoomImageView"},"Classes/QMUIZoomImageView.html#/c:objc(cs)QMUIZoomImageView(py)cloudDownloadRetryButton":{"name":"cloudDownloadRetryButton","abstract":"<p>Undocumented</p>","parent_name":"QMUIZoomImageView"},"Classes/QMUIZoomImageView.html#/c:objc(cs)QMUIZoomImageView(py)cloudDownloadStatus":{"name":"cloudDownloadStatus","abstract":"<p>Undocumented</p>","parent_name":"QMUIZoomImageView"},"Classes/QMUIZoomImageView.html#/c:objc(cs)QMUIZoomImageView(im)pauseVideo":{"name":"-pauseVideo","abstract":"<p>暂停视频播放</p>","parent_name":"QMUIZoomImageView"},"Classes/QMUIZoomImageView.html#/c:objc(cs)QMUIZoomImageView(im)endPlayingVideo":{"name":"-endPlayingVideo","abstract":"<p>停止视频播放，将播放状态重置到初始状态</p>","parent_name":"QMUIZoomImageView"},"Classes/QMUIZoomImageView.html#/c:objc(cs)QMUIZoomImageView(py)contentView":{"name":"contentView","abstract":"<p>获取当前正在显示的图片/视频的容器</p>","parent_name":"QMUIZoomImageView"},"Classes/QMUIZoomImageView.html#/c:objc(cs)QMUIZoomImageView(im)contentViewRectInZoomImageView":{"name":"-contentViewRectInZoomImageView","abstract":"<p>获取当前正在显示的图片/视频在整个 QMUIZoomImageView 坐标系里的 rect（会按照当前的缩放状态来计算）</p>","parent_name":"QMUIZoomImageView"},"Classes/QMUIZoomImageView.html#/c:objc(cs)QMUIZoomImageView(im)revertZooming":{"name":"-revertZooming","abstract":"<p>重置图片或视频的大小，使用的场景例如：相册控件里放大当前图片、划到下一张、再回来，当前的图片或视频应该恢复到原来大小。","parent_name":"QMUIZoomImageView"},"Classes/QMUIZoomImageView.html#/c:objc(cs)QMUIZoomImageView(py)emptyView":{"name":"emptyView","abstract":"<p>Undocumented</p>","parent_name":"QMUIZoomImageView"},"Classes/QMUIZoomImageView.html#/c:objc(cs)QMUIZoomImageView(im)showLoading":{"name":"-showLoading","abstract":"<p>显示一个 loading","parent_name":"QMUIZoomImageView"},"Classes/QMUIZoomImageView.html#/c:objc(cs)QMUIZoomImageView(im)showEmptyViewWithText:":{"name":"-showEmptyViewWithText:","abstract":"<p>显示一句提示语","parent_name":"QMUIZoomImageView"},"Classes/QMUIZoomImageView.html#/c:objc(cs)QMUIZoomImageView(im)showEmptyViewWithText:detailText:buttonTitle:buttonTarget:buttonAction:":{"name":"-showEmptyViewWithText:detailText:buttonTitle:buttonTarget:buttonAction:","abstract":"<p>Undocumented</p>","parent_name":"QMUIZoomImageView"},"Classes/QMUIZoomImageView.html#/c:objc(cs)QMUIZoomImageView(im)hideEmptyView":{"name":"-hideEmptyView","abstract":"<p>将 emptyView 隐藏</p>","parent_name":"QMUIZoomImageView"},"Classes/QMUIImagePreviewView.html#/c:objc(cs)QMUIImagePreviewView(py)delegate":{"name":"delegate","abstract":"<p>Undocumented</p>","parent_name":"QMUIImagePreviewView"},"Classes/QMUIImagePreviewView.html#/c:objc(cs)QMUIImagePreviewView(py)collectionView":{"name":"collectionView","abstract":"<p>Undocumented</p>","parent_name":"QMUIImagePreviewView"},"Classes/QMUIImagePreviewView.html#/c:objc(cs)QMUIImagePreviewView(py)collectionViewLayout":{"name":"collectionViewLayout","abstract":"<p>Undocumented</p>","parent_name":"QMUIImagePreviewView"},"Classes/QMUIImagePreviewView.html#/c:objc(cs)QMUIImagePreviewView(py)currentImageIndex":{"name":"currentImageIndex","abstract":"<p>获取当前正在查看的图片 index，也可强制将图片滚动到指定的 index</p>","parent_name":"QMUIImagePreviewView"},"Classes/QMUIImagePreviewView.html#/c:objc(cs)QMUIImagePreviewView(im)setCurrentImageIndex:animated:":{"name":"-setCurrentImageIndex:animated:","abstract":"<p>Undocumented</p>","parent_name":"QMUIImagePreviewView"},"Classes/QMUIImagePreviewView.html#/c:objc(cs)QMUIImagePreviewView(py)loadingColor":{"name":"loadingColor","abstract":"<p>每一页里的 loading 的颜色，默认为 UIColorWhite</p>","parent_name":"QMUIImagePreviewView"},"Classes/QMUIImagePreviewView.html#/c:objc(cs)QMUIImagePreviewView(im)indexForZoomImageView:":{"name":"-indexForZoomImageView:","abstract":"<p>获取某个 QMUIZoomImageView 所对应的 index</p>","parent_name":"QMUIImagePreviewView"},"Classes/QMUIImagePreviewView.html#/c:objc(cs)QMUIImagePreviewView(im)zoomImageViewAtIndex:":{"name":"-zoomImageViewAtIndex:","abstract":"<p>获取某个 index 对应的 zoomImageView</p>","parent_name":"QMUIImagePreviewView"},"Classes/QMUIAssetsManager.html#/c:objc(cs)QMUIAssetsManager(cm)sharedInstance":{"name":"+sharedInstance","abstract":"<p>获取 QMUIAssetsManager 的单例</p>","parent_name":"QMUIAssetsManager"},"Classes/QMUIAssetsManager.html#/c:objc(cs)QMUIAssetsManager(cm)authorizationStatus":{"name":"+authorizationStatus","abstract":"<p>获取当前应用的“照片”访问授权状态</p>","parent_name":"QMUIAssetsManager"},"Classes/QMUIAssetsManager.html#/c:objc(cs)QMUIAssetsManager(cm)requestAuthorization:":{"name":"+requestAuthorization:","abstract":"<p>调起系统询问是否授权访问“照片”的 UIAlertView</p>","parent_name":"QMUIAssetsManager"},"Classes/QMUIAssetsManager.html#/c:objc(cs)QMUIAssetsManager(im)enumerateAllAlbumsWithAlbumContentType:showEmptyAlbum:showSmartAlbumIfSupported:usingBlock:":{"name":"-enumerateAllAlbumsWithAlbumContentType:showEmptyAlbum:showSmartAlbumIfSupported:usingBlock:","abstract":"<p>获取所有的相册，包括个人收藏，最近添加，自拍这类“智能相册”</p>","parent_name":"QMUIAssetsManager"},"Classes/QMUIAssetsManager.html#/c:objc(cs)QMUIAssetsManager(im)enumerateAllAlbumsWithAlbumContentType:usingBlock:":{"name":"-enumerateAllAlbumsWithAlbumContentType:usingBlock:","abstract":"<p>获取所有相册，默认显示系统的“智能相册”，不显示空相册（经过 contentType 过滤后为空的相册）</p>","parent_name":"QMUIAssetsManager"},"Classes/QMUIAssetsManager.html#/c:objc(cs)QMUIAssetsManager(im)saveImageWithImageRef:albumAssetsGroup:orientation:completionBlock:":{"name":"-saveImageWithImageRef:albumAssetsGroup:orientation:completionBlock:","abstract":"<p>保存图片或视频到指定的相册</p>","parent_name":"QMUIAssetsManager"},"Classes/QMUIAssetsManager.html#/c:objc(cs)QMUIAssetsManager(im)saveImageWithImagePathURL:albumAssetsGroup:completionBlock:":{"name":"-saveImageWithImagePathURL:albumAssetsGroup:completionBlock:","abstract":"<p>Undocumented</p>","parent_name":"QMUIAssetsManager"},"Classes/QMUIAssetsManager.html#/c:objc(cs)QMUIAssetsManager(im)saveVideoWithVideoPathURL:albumAssetsGroup:completionBlock:":{"name":"-saveVideoWithVideoPathURL:albumAssetsGroup:completionBlock:","abstract":"<p>Undocumented</p>","parent_name":"QMUIAssetsManager"},"Classes/QMUIAssetsManager.html#/c:objc(cs)QMUIAssetsManager(im)phCachingImageManager":{"name":"-phCachingImageManager","abstract":"<p>获取一个 PHCachingImageManager 的实例</p>","parent_name":"QMUIAssetsManager"},"Classes/QMUIAssetsGroup.html#/c:objc(cs)QMUIAssetsGroup(im)initWithPHCollection:":{"name":"-initWithPHCollection:","abstract":"<p>Undocumented</p>","parent_name":"QMUIAssetsGroup"},"Classes/QMUIAssetsGroup.html#/c:objc(cs)QMUIAssetsGroup(im)initWithPHCollection:fetchAssetsOptions:":{"name":"-initWithPHCollection:fetchAssetsOptions:","abstract":"<p>Undocumented</p>","parent_name":"QMUIAssetsGroup"},"Classes/QMUIAssetsGroup.html#/c:objc(cs)QMUIAssetsGroup(py)phAssetCollection":{"name":"phAssetCollection","abstract":"<p>仅能通过 initWithPHCollection 和 initWithPHCollection:fetchAssetsOption 方法修改 phAssetCollection 的值</p>","parent_name":"QMUIAssetsGroup"},"Classes/QMUIAssetsGroup.html#/c:objc(cs)QMUIAssetsGroup(py)phFetchResult":{"name":"phFetchResult","abstract":"<p>仅能通过 initWithPHCollection 和 initWithPHCollection:fetchAssetsOption 方法修改 phAssetCollection 后，产生一个对应的 PHAssetsFetchResults 保存到 phFetchResult 中</p>","parent_name":"QMUIAssetsGroup"},"Classes/QMUIAssetsGroup.html#/c:objc(cs)QMUIAssetsGroup(im)name":{"name":"-name","abstract":"<p>相册的名称</p>","parent_name":"QMUIAssetsGroup"},"Classes/QMUIAssetsGroup.html#/c:objc(cs)QMUIAssetsGroup(im)numberOfAssets":{"name":"-numberOfAssets","abstract":"<p>相册内的资源数量，包括视频、图片、音频（如果支持）这些类型的所有资源</p>","parent_name":"QMUIAssetsGroup"},"Classes/QMUIAssetsGroup.html#/c:objc(cs)QMUIAssetsGroup(im)posterImageWithSize:":{"name":"-posterImageWithSize:","abstract":"<p>相册的缩略图，即系统接口中的相册海报（Poster Image）</p>","parent_name":"QMUIAssetsGroup"},"Classes/QMUIAssetsGroup.html#/c:objc(cs)QMUIAssetsGroup(im)enumerateAssetsWithOptions:usingBlock:":{"name":"-enumerateAssetsWithOptions:usingBlock:","abstract":"<p>枚举相册内所有的资源</p>","parent_name":"QMUIAssetsGroup"},"Classes/QMUIAssetsGroup.html#/c:objc(cs)QMUIAssetsGroup(im)enumerateAssetsUsingBlock:":{"name":"-enumerateAssetsUsingBlock:","abstract":"<p>枚举相册内所有的资源，相册内资源按日期最新的排在最后面</p>","parent_name":"QMUIAssetsGroup"},"Classes/QMUIAsset.html#/c:objc(cs)QMUIAsset(py)assetType":{"name":"assetType","abstract":"<p>Undocumented</p>","parent_name":"QMUIAsset"},"Classes/QMUIAsset.html#/c:objc(cs)QMUIAsset(py)assetSubType":{"name":"assetSubType","abstract":"<p>Undocumented</p>","parent_name":"QMUIAsset"},"Classes/QMUIAsset.html#/c:objc(cs)QMUIAsset(im)initWithPHAsset:":{"name":"-initWithPHAsset:","abstract":"<p>Undocumented</p>","parent_name":"QMUIAsset"},"Classes/QMUIAsset.html#/c:objc(cs)QMUIAsset(py)phAsset":{"name":"phAsset","abstract":"<p>Undocumented</p>","parent_name":"QMUIAsset"},"Classes/QMUIAsset.html#/c:objc(cs)QMUIAsset(py)downloadStatus":{"name":"downloadStatus","abstract":"<p>Undocumented</p>","parent_name":"QMUIAsset"},"Classes/QMUIAsset.html#/c:objc(cs)QMUIAsset(py)downloadProgress":{"name":"downloadProgress","abstract":"<p>Undocumented</p>","parent_name":"QMUIAsset"},"Classes/QMUIAsset.html#/c:objc(cs)QMUIAsset(py)requestID":{"name":"requestID","abstract":"<p>Undocumented</p>","parent_name":"QMUIAsset"},"Classes/QMUIAsset.html#/c:objc(cs)QMUIAsset(py)identifier":{"name":"identifier","abstract":"<p>Undocumented</p>","parent_name":"QMUIAsset"},"Classes/QMUIAsset.html#/c:objc(cs)QMUIAsset(im)originImage":{"name":"-originImage","abstract":"<p>Asset 的原图（包含系统相册“编辑”功能处理后的效果）</p>","parent_name":"QMUIAsset"},"Classes/QMUIAsset.html#/c:objc(cs)QMUIAsset(im)thumbnailWithSize:":{"name":"-thumbnailWithSize:","abstract":"<p>Asset 的缩略图</p>","parent_name":"QMUIAsset"},"Classes/QMUIAsset.html#/c:objc(cs)QMUIAsset(im)previewImage":{"name":"-previewImage","abstract":"<p>Asset 的预览图</p>","parent_name":"QMUIAsset"},"Classes/QMUIAsset.html#/c:objc(cs)QMUIAsset(im)requestOriginImageWithCompletion:withProgressHandler:":{"name":"-requestOriginImageWithCompletion:withProgressHandler:","abstract":"<p>异步请求 Asset 的原图，包含了系统照片“编辑”功能处理后的效果（剪裁，旋转和滤镜等），可能会有网络请求</p>","parent_name":"QMUIAsset"},"Classes/QMUIAsset.html#/c:objc(cs)QMUIAsset(im)requestThumbnailImageWithSize:completion:":{"name":"-requestThumbnailImageWithSize:completion:","abstract":"<p>异步请求 Asset 的缩略图，不会产生网络请求</p>","parent_name":"QMUIAsset"},"Classes/QMUIAsset.html#/c:objc(cs)QMUIAsset(im)requestPreviewImageWithCompletion:withProgressHandler:":{"name":"-requestPreviewImageWithCompletion:withProgressHandler:","abstract":"<p>异步请求 Asset 的预览图，可能会有网络请求</p>","parent_name":"QMUIAsset"},"Classes/QMUIAsset.html#/c:objc(cs)QMUIAsset(im)requestLivePhotoWithCompletion:withProgressHandler:":{"name":"-requestLivePhotoWithCompletion:withProgressHandler:","abstract":"<p>异步请求 Live Photo，可能会有网络请求</p>","parent_name":"QMUIAsset"},"Classes/QMUIAsset.html#/c:objc(cs)QMUIAsset(im)requestPlayerItemWithCompletion:withProgressHandler:":{"name":"-requestPlayerItemWithCompletion:withProgressHandler:","abstract":"<p>异步请求 AVPlayerItem，可能会有网络请求</p>","parent_name":"QMUIAsset"},"Classes/QMUIAsset.html#/c:objc(cs)QMUIAsset(im)requestImageData:":{"name":"-requestImageData:","abstract":"<p>异步请求图片的 Data</p>","parent_name":"QMUIAsset"},"Classes/QMUIAsset.html#/c:objc(cs)QMUIAsset(im)imageOrientation":{"name":"-imageOrientation","abstract":"<p>获取图片的 UIImageOrientation 值，仅 assetType 为 QMUIAssetTypeImage 或 QMUIAssetTypeLivePhoto 时有效</p>","parent_name":"QMUIAsset"},"Classes/QMUIAsset.html#/c:objc(cs)QMUIAsset(im)updateDownloadStatusWithDownloadResult:":{"name":"-updateDownloadStatusWithDownloadResult:","abstract":"<p>更新下载资源的结果</p>","parent_name":"QMUIAsset"},"Classes/QMUIAsset.html#/c:objc(cs)QMUIAsset(im)assetSize:":{"name":"-assetSize:","abstract":"<p>获取 Asset 的体积（数据大小）</p>","parent_name":"QMUIAsset"},"Classes/QMUIAsset.html#/c:objc(cs)QMUIAsset(im)duration":{"name":"-duration","abstract":"<p>Undocumented</p>","parent_name":"QMUIAsset"},"Classes/QMUICellSizeKeyCache.html#/c:objc(cs)QMUICellSizeKeyCache(im)existsSizeForKey:":{"name":"-existsSizeForKey:","abstract":"<p>检查是否存在某个 key 的 size</p>","parent_name":"QMUICellSizeKeyCache"},"Classes/QMUICellSizeKeyCache.html#/c:objc(cs)QMUICellSizeKeyCache(im)cacheSize:forKey:":{"name":"-cacheSize:forKey:","abstract":"<p>将某个 size 缓存到指定的 key</p>","parent_name":"QMUICellSizeKeyCache"},"Classes/QMUICellSizeKeyCache.html#/c:objc(cs)QMUICellSizeKeyCache(im)sizeForKey:":{"name":"-sizeForKey:","abstract":"<p>获取指定 key 对应的 size，如果该 key 不存在，则返回 0</p>","parent_name":"QMUICellSizeKeyCache"},"Classes/QMUICellSizeKeyCache.html#/c:objc(cs)QMUICellSizeKeyCache(im)invalidateSizeForKey:":{"name":"-invalidateSizeForKey:","abstract":"<p>Undocumented</p>","parent_name":"QMUICellSizeKeyCache"},"Classes/QMUICellSizeKeyCache.html#/c:objc(cs)QMUICellSizeKeyCache(im)invalidateAllSizeCache":{"name":"-invalidateAllSizeCache","abstract":"<p>Undocumented</p>","parent_name":"QMUICellSizeKeyCache"},"Classes/QMUISegmentedControl.html#/c:objc(cs)QMUISegmentedControl(py)segmentItems":{"name":"segmentItems","abstract":"<p>获取当前的所有 segmentItem，可能包括 NSString 或 UIImage。</p>","parent_name":"QMUISegmentedControl"},"Classes/QMUISegmentedControl.html#/c:objc(cs)QMUISegmentedControl(im)updateSegmentedUIWithTintColor:selectedTextColor:fontSize:":{"name":"-updateSegmentedUIWithTintColor:selectedTextColor:fontSize:","abstract":"<p>重新渲染 UISegmentedControl 的 UI，可以比较大程度地修改样式。比如 tintColor，selectedTextColor 等等。</p>","parent_name":"QMUISegmentedControl"},"Classes/QMUISegmentedControl.html#/c:objc(cs)QMUISegmentedControl(im)setBackgroundWithNormalImage:selectedImage:devideImage00:devideImage01:devideImage10:textColor:selectedTextColor:fontSize:":{"name":"-setBackgroundWithNormalImage:selectedImage:devideImage00:devideImage01:devideImage10:textColor:selectedTextColor:fontSize:","abstract":"<p>用图片而非 tintColor 来渲染 UISegmentedControl 的 UI</p>","parent_name":"QMUISegmentedControl"},"Classes/QMUIWeakObjectContainer.html#/c:objc(cs)QMUIWeakObjectContainer(im)initWithObject:":{"name":"-initWithObject:","abstract":"<p>将一个 object 包装到一个 QMUIWeakObjectContainer 里</p>","parent_name":"QMUIWeakObjectContainer"},"Classes/QMUIWeakObjectContainer.html#/c:objc(cs)QMUIWeakObjectContainer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"QMUIWeakObjectContainer"},"Classes/QMUIWeakObjectContainer.html#/c:objc(cs)QMUIWeakObjectContainer(cm)containerWithObject:":{"name":"+containerWithObject:","abstract":"<p>Undocumented</p>","parent_name":"QMUIWeakObjectContainer"},"Classes/QMUIWeakObjectContainer.html#/c:objc(cs)QMUIWeakObjectContainer(py)object":{"name":"object","abstract":"<p>获取原始对象 object，如果 object 已被释放则该属性返回 nil</p>","parent_name":"QMUIWeakObjectContainer"},"Classes/QMUICellHeightKeyCache.html#/c:objc(cs)QMUICellHeightKeyCache(im)existsHeightForKey:":{"name":"-existsHeightForKey:","abstract":"<p>检查是否存在某个 key 的高度</p>","parent_name":"QMUICellHeightKeyCache"},"Classes/QMUICellHeightKeyCache.html#/c:objc(cs)QMUICellHeightKeyCache(im)cacheHeight:forKey:":{"name":"-cacheHeight:forKey:","abstract":"<p>将某个高度缓存到指定的 key</p>","parent_name":"QMUICellHeightKeyCache"},"Classes/QMUICellHeightKeyCache.html#/c:objc(cs)QMUICellHeightKeyCache(im)heightForKey:":{"name":"-heightForKey:","abstract":"<p>获取指定 key 对应的高度，如果该 key 不存在，则返回 0</p>","parent_name":"QMUICellHeightKeyCache"},"Classes/QMUICellHeightKeyCache.html#/c:objc(cs)QMUICellHeightKeyCache(im)invalidateHeightForKey:":{"name":"-invalidateHeightForKey:","abstract":"<p>令指定 key 的缓存失效。注意如果在业务里，应该调用 [UITableView -qmui_invalidateCellHeightCachedForKey:]，而不应该直接调用这个方法。</p>","parent_name":"QMUICellHeightKeyCache"},"Classes/QMUICellHeightKeyCache.html#/c:objc(cs)QMUICellHeightKeyCache(im)invalidateAllHeightCache":{"name":"-invalidateAllHeightCache","abstract":"<p>令所有的缓存失效。注意如果在业务里，应该调用 [UITableView -qmui_invalidateAllCellHeightKeyCache]，而不应该直接调用这个方法。</p>","parent_name":"QMUICellHeightKeyCache"},"Classes/QMUIModalPresentationViewController.html#/c:objc(cs)QMUIModalPresentationViewController(py)delegate":{"name":"delegate","abstract":"<p>Undocumented</p>","parent_name":"QMUIModalPresentationViewController"},"Classes/QMUIModalPresentationViewController.html#/c:objc(cs)QMUIModalPresentationViewController(py)contentView":{"name":"contentView","abstract":"<p>要被弹出的浮层</p>","parent_name":"QMUIModalPresentationViewController"},"Classes/QMUIModalPresentationViewController.html#/c:objc(cs)QMUIModalPresentationViewController(py)contentViewController":{"name":"contentViewController","abstract":"<p>要被弹出的浮层，适用于浮层以UIViewController的形式来管理的情况。</p>","parent_name":"QMUIModalPresentationViewController"},"Classes/QMUIModalPresentationViewController.html#/c:objc(cs)QMUIModalPresentationViewController(py)contentViewMargins":{"name":"contentViewMargins","abstract":"<p>设置<code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/QMUIModalPresentationViewController.html#/c:objc(cs)QMUIModalPresentationViewController(py)contentView\">contentView</a></code>布局时与外容器的间距，默认为(20, 20, 20, 20)</p>","parent_name":"QMUIModalPresentationViewController"},"Classes/QMUIModalPresentationViewController.html#/c:objc(cs)QMUIModalPresentationViewController(py)maximumContentViewWidth":{"name":"maximumContentViewWidth","abstract":"<p>限制<code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/QMUIModalPresentationViewController.html#/c:objc(cs)QMUIModalPresentationViewController(py)contentView\">contentView</a></code>布局时的最大宽度，默认为 CGFLOAT_MAX，也即无限制。</p>","parent_name":"QMUIModalPresentationViewController"},"Classes/QMUIModalPresentationViewController.html#/c:objc(cs)QMUIModalPresentationViewController(py)dimmingView":{"name":"dimmingView","abstract":"<p>背景遮罩，默认为一个普通的<code>UIView</code>，背景色为<code>UIColorMask</code>，可设置为自己的view，注意<code>dimmingView</code>的大小将会盖满整个控件。</p>","parent_name":"QMUIModalPresentationViewController"},"Classes/QMUIModalPresentationViewController.html#/c:objc(cs)QMUIModalPresentationViewController(py)willHideByDimmingViewTappedBlock":{"name":"willHideByDimmingViewTappedBlock","abstract":"<p>由于点击遮罩导致浮层即将被隐藏的回调</p>","parent_name":"QMUIModalPresentationViewController"},"Classes/QMUIModalPresentationViewController.html#/c:objc(cs)QMUIModalPresentationViewController(py)didHideByDimmingViewTappedBlock":{"name":"didHideByDimmingViewTappedBlock","abstract":"<p>由于点击遮罩导致浮层被隐藏后的回调（区分于<code>hideWithAnimated:completion:</code>里的completion，这里是特地用于点击遮罩的情况）</p>","parent_name":"QMUIModalPresentationViewController"},"Classes/QMUIModalPresentationViewController.html#/c:objc(cs)QMUIModalPresentationViewController(py)modal":{"name":"modal","abstract":"<p>控制当前是否以模态的形式存在。如果以模态的形式存在，则点击空白区域不会隐藏浮层。</p>","parent_name":"QMUIModalPresentationViewController"},"Classes/QMUIModalPresentationViewController.html#/c:objc(cs)QMUIModalPresentationViewController(py)visible":{"name":"visible","abstract":"<p>标志当前浮层的显示/隐藏状态，默认为NO。</p>","parent_name":"QMUIModalPresentationViewController"},"Classes/QMUIModalPresentationViewController.html#/c:objc(cs)QMUIModalPresentationViewController(py)supportedOrientationMask":{"name":"supportedOrientationMask","abstract":"<p>修改当前界面要支持的横竖屏方向，默认为 SupportedOrientationMask。</p>","parent_name":"QMUIModalPresentationViewController"},"Classes/QMUIModalPresentationViewController.html#/c:objc(cs)QMUIModalPresentationViewController(py)animationStyle":{"name":"animationStyle","abstract":"<p>设置要使用的显示/隐藏动画的类型，默认为<code>QMUIModalPresentationAnimationStyleFade</code>。</p>","parent_name":"QMUIModalPresentationViewController"},"Classes/QMUIModalPresentationViewController.html#/c:objc(cs)QMUIModalPresentationViewController(py)shownInWindowMode":{"name":"shownInWindowMode","abstract":"<p>是否以 UIWindow 的方式显示，建议在显示之后才使用，否则可能不准确。</p>","parent_name":"QMUIModalPresentationViewController"},"Classes/QMUIModalPresentationViewController.html#/c:objc(cs)QMUIModalPresentationViewController(py)shownInPresentedMode":{"name":"shownInPresentedMode","abstract":"<p>是否以系统 present 的方式显示，建议在显示之后才使用，否则可能不准确。</p>","parent_name":"QMUIModalPresentationViewController"},"Classes/QMUIModalPresentationViewController.html#/c:objc(cs)QMUIModalPresentationViewController(py)shownInSubviewMode":{"name":"shownInSubviewMode","abstract":"<p>是否以 addSubview 的方式显示，建议在显示之后才使用，否则可能不准确。</p>","parent_name":"QMUIModalPresentationViewController"},"Classes/QMUIModalPresentationViewController.html#/c:objc(cs)QMUIModalPresentationViewController(py)onlyRespondsToKeyboardEventFromDescendantViews":{"name":"onlyRespondsToKeyboardEventFromDescendantViews","abstract":"<p>只响应 modal.view 上的 view 所产生的键盘事件，当为 NO 时，只要有键盘事件产生，浮层都会重新计算布局。","parent_name":"QMUIModalPresentationViewController"},"Classes/QMUIModalPresentationViewController.html#/c:objc(cs)QMUIModalPresentationViewController(py)layoutBlock":{"name":"layoutBlock","abstract":"<p>管理自定义的浮层布局，将会在浮层显示前、控件的容器大小发生变化时（例如横竖屏、来电状态栏）被调用，请在 block 内主动为 view 设置期望的 frame，设置时建议用 qmui_frameApplyTransform 取代 setFrame:，否则在有键盘的情况下，显隐动画可能有错。","parent_name":"QMUIModalPresentationViewController"},"Classes/QMUIModalPresentationViewController.html#/c:objc(cs)QMUIModalPresentationViewController(py)showingAnimation":{"name":"showingAnimation","abstract":"<p>管理自定义的显示动画，需要管理的对象包括<code>contentView</code>和<code>dimmingView</code>，在<code>showingAnimation</code>被调用前，<code>contentView</code>已被添加到界面上。若使用了<code>layoutBlock</code>，则会先调用<code>layoutBlock</code>，再调用<code>showingAnimation</code>。在动画结束后，必须调用参数里的<code>completion</code> block。","parent_name":"QMUIModalPresentationViewController"},"Classes/QMUIModalPresentationViewController.html#/c:objc(cs)QMUIModalPresentationViewController(py)hidingAnimation":{"name":"hidingAnimation","abstract":"<p>管理自定义的隐藏动画，需要管理的对象包括<code>contentView</code>和<code>dimmingView</code>，在动画结束后，必须调用参数里的<code>completion</code> block。","parent_name":"QMUIModalPresentationViewController"},"Classes/QMUIModalPresentationViewController.html#/c:objc(cs)QMUIModalPresentationViewController(im)updateLayout":{"name":"-updateLayout","abstract":"<p>请求重新计算浮层的布局</p>","parent_name":"QMUIModalPresentationViewController"},"Classes/QMUIModalPresentationViewController.html#/c:objc(cs)QMUIModalPresentationViewController(im)showWithAnimated:completion:":{"name":"-showWithAnimated:completion:","abstract":"<p>将浮层以 UIWindow 的方式显示出来</p>","parent_name":"QMUIModalPresentationViewController"},"Classes/QMUIModalPresentationViewController.html#/c:objc(cs)QMUIModalPresentationViewController(im)hideWithAnimated:completion:":{"name":"-hideWithAnimated:completion:","abstract":"<p>将浮层隐藏掉</p>","parent_name":"QMUIModalPresentationViewController"},"Classes/QMUIModalPresentationViewController.html#/c:objc(cs)QMUIModalPresentationViewController(im)showInView:animated:completion:":{"name":"-showInView:animated:completion:","abstract":"<p>将浮层以 addSubview 的方式显示出来</p>","parent_name":"QMUIModalPresentationViewController"},"Classes/QMUIModalPresentationViewController.html#/c:objc(cs)QMUIModalPresentationViewController(im)hideInView:animated:completion:":{"name":"-hideInView:animated:completion:","abstract":"<p>将某个 view 上显示的浮层隐藏掉</p>","parent_name":"QMUIModalPresentationViewController"},"Classes/QMUIModalPresentationViewController.html#/c:objc(cs)QMUIModalPresentationViewController(cm)isAnyModalPresentationViewControllerVisible":{"name":"+isAnyModalPresentationViewControllerVisible","abstract":"<p>判断当前App里是否有modalViewController正在显示（存在modalViewController但不可见的时候，也视为不存在）</p>","parent_name":"QMUIModalPresentationViewController"},"Classes/QMUIModalPresentationViewController.html#/c:objc(cs)QMUIModalPresentationViewController(cm)hideAllVisibleModalPresentationViewControllerIfCan":{"name":"+hideAllVisibleModalPresentationViewControllerIfCan","abstract":"<p>把所有正在显示的并且允许被隐藏的modalViewController都隐藏掉</p>","parent_name":"QMUIModalPresentationViewController"},"Classes/QMUIModalPresentationViewController.html#/c:objc(cs)QMUIModalPresentationViewController(cm)appearance":{"name":"+appearance","abstract":"<p>Undocumented</p>","parent_name":"QMUIModalPresentationViewController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController@_containerView":{"name":"_containerView","abstract":"<p>Undocumented</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController@_scrollWrapView":{"name":"_scrollWrapView","abstract":"<p>Undocumented</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController@_headerScrollView":{"name":"_headerScrollView","abstract":"<p>Undocumented</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController@_buttonScrollView":{"name":"_buttonScrollView","abstract":"<p>Undocumented</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController@_maskView":{"name":"_maskView","abstract":"<p>Undocumented</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(py)alertContentMargin":{"name":"alertContentMargin","abstract":"<p>alert距离屏幕四边的间距，默认UIEdgeInsetsMake(0, 0, 0, 0)。alert的宽度最终是通过屏幕宽度减去水平的 alertContentMargin 和 alertContentMaximumWidth 决定的。</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(py)alertContentMaximumWidth":{"name":"alertContentMaximumWidth","abstract":"<p>alert的最大宽度，默认270。</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(py)alertSeparatorColor":{"name":"alertSeparatorColor","abstract":"<p>alert上分隔线颜色，默认UIColorMake(211, 211, 219)。</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(py)alertTitleAttributes":{"name":"alertTitleAttributes","abstract":"<p>alert标题样式，默认@{NSForegroundColorAttributeName:UIColorBlack,NSFontAttributeName:UIFontBoldMake(17),NSParagraphStyleAttributeName:[NSMutableParagraphStyle qmui_paragraphStyleWithLineHeight:0 lineBreakMode:NSLineBreakByTruncatingTail]}</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(py)alertMessageAttributes":{"name":"alertMessageAttributes","abstract":"<p>alert信息样式，默认@{NSForegroundColorAttributeName:UIColorBlack,NSFontAttributeName:UIFontMake(13),NSParagraphStyleAttributeName:[NSMutableParagraphStyle qmui_paragraphStyleWithLineHeight:0 lineBreakMode:NSLineBreakByTruncatingTail]}</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(py)alertButtonAttributes":{"name":"alertButtonAttributes","abstract":"<p>alert按钮样式，默认@{NSForegroundColorAttributeName:UIColorBlue,NSFontAttributeName:UIFontMake(17),NSKernAttributeName:@(0)}</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(py)alertButtonDisabledAttributes":{"name":"alertButtonDisabledAttributes","abstract":"<p>alert按钮disabled时的样式，默认@{NSForegroundColorAttributeName:UIColorMake(129, 129, 129),NSFontAttributeName:UIFontMake(17),NSKernAttributeName:@(0)}</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(py)alertCancelButtonAttributes":{"name":"alertCancelButtonAttributes","abstract":"<p>alert cancel 按钮样式，默认@{NSForegroundColorAttributeName:UIColorBlue,NSFontAttributeName:UIFontBoldMake(17),NSKernAttributeName:@(0)}</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(py)alertDestructiveButtonAttributes":{"name":"alertDestructiveButtonAttributes","abstract":"<p>alert destructive 按钮样式，默认@{NSForegroundColorAttributeName:UIColorRed,NSFontAttributeName:UIFontMake(17),NSKernAttributeName:@(0)}</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(py)alertContentCornerRadius":{"name":"alertContentCornerRadius","abstract":"<p>alert圆角大小，默认值是 13，以保持与系统默认样式一致</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(py)alertButtonHeight":{"name":"alertButtonHeight","abstract":"<p>alert按钮高度，默认44pt</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(py)alertHeaderBackgroundColor":{"name":"alertHeaderBackgroundColor","abstract":"<p>alert头部（非按钮部分）背景色，默认值是：UIColorMakeWithRGBA(247, 247, 247, 1)</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(py)alertButtonBackgroundColor":{"name":"alertButtonBackgroundColor","abstract":"<p>alert按钮背景色，默认值同<code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(py)alertHeaderBackgroundColor\">alertHeaderBackgroundColor</a></code></p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(py)alertButtonHighlightBackgroundColor":{"name":"alertButtonHighlightBackgroundColor","abstract":"<p>alert按钮高亮背景色，默认UIColorMake(232, 232, 232)</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(py)alertHeaderInsets":{"name":"alertHeaderInsets","abstract":"<p>alert头部四边insets间距</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(py)alertTitleMessageSpacing":{"name":"alertTitleMessageSpacing","abstract":"<p>alert头部title和message之间的间距，默认3pt</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(py)alertTextFieldFont":{"name":"alertTextFieldFont","abstract":"<p>alert 内部 textField 的字体</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(py)alertTextFieldTextColor":{"name":"alertTextFieldTextColor","abstract":"<p>alert 内部 textField 的文字颜色</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(py)alertTextFieldBorderColor":{"name":"alertTextFieldBorderColor","abstract":"<p>alert 内部 textField 的边框颜色，如果不需要边框，可设置为 nil</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(py)sheetContentMargin":{"name":"sheetContentMargin","abstract":"<p>sheet距离屏幕四边的间距，默认UIEdgeInsetsMake(10, 10, 10, 10)。</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(py)sheetContentMaximumWidth":{"name":"sheetContentMaximumWidth","abstract":"<p>sheet的最大宽度，默认值是5.5英寸的屏幕的宽度减去水平的 sheetContentMargin</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(py)sheetSeparatorColor":{"name":"sheetSeparatorColor","abstract":"<p>sheet分隔线颜色，默认UIColorMake(211, 211, 219)</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(py)sheetTitleAttributes":{"name":"sheetTitleAttributes","abstract":"<p>sheet标题样式，默认@{NSForegroundColorAttributeName:UIColorMake(143, 143, 143),NSFontAttributeName:UIFontBoldMake(13),NSParagraphStyleAttributeName:[NSMutableParagraphStyle qmui_paragraphStyleWithLineHeight:0 lineBreakMode:NSLineBreakByTruncatingTail]}</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(py)sheetMessageAttributes":{"name":"sheetMessageAttributes","abstract":"<p>sheet信息样式，默认@{NSForegroundColorAttributeName:UIColorMake(143, 143, 143),NSFontAttributeName:UIFontMake(13),NSParagraphStyleAttributeName:[NSMutableParagraphStyle qmui_paragraphStyleWithLineHeight:0 lineBreakMode:NSLineBreakByTruncatingTail]}</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(py)sheetButtonAttributes":{"name":"sheetButtonAttributes","abstract":"<p>sheet按钮样式，默认@{NSForegroundColorAttributeName:UIColorBlue,NSFontAttributeName:UIFontMake(20),NSKernAttributeName:@(0)}</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(py)sheetButtonDisabledAttributes":{"name":"sheetButtonDisabledAttributes","abstract":"<p>sheet按钮disabled时的样式，默认@{NSForegroundColorAttributeName:UIColorMake(129, 129, 129),NSFontAttributeName:UIFontMake(20),NSKernAttributeName:@(0)}</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(py)sheetCancelButtonAttributes":{"name":"sheetCancelButtonAttributes","abstract":"<p>sheet cancel 按钮样式，默认@{NSForegroundColorAttributeName:UIColorBlue,NSFontAttributeName:UIFontBoldMake(20),NSKernAttributeName:@(0)}</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(py)sheetDestructiveButtonAttributes":{"name":"sheetDestructiveButtonAttributes","abstract":"<p>sheet destructive 按钮样式，默认@{NSForegroundColorAttributeName:UIColorRed,NSFontAttributeName:UIFontMake(20),NSKernAttributeName:@(0)}</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(py)sheetCancelButtonMarginTop":{"name":"sheetCancelButtonMarginTop","abstract":"<p>sheet cancel 按钮距离其上面元素（按钮或者header）的间距，默认8pt</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(py)sheetContentCornerRadius":{"name":"sheetContentCornerRadius","abstract":"<p>sheet内容的圆角，默认值是 13，以保持与系统默认样式一致</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(py)sheetButtonHeight":{"name":"sheetButtonHeight","abstract":"<p>sheet按钮高度，默认值是 57，以保持与系统默认样式一致</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(py)sheetHeaderBackgroundColor":{"name":"sheetHeaderBackgroundColor","abstract":"<p>sheet头部（非按钮部分）背景色，默认值是：UIColorMakeWithRGBA(247, 247, 247, 1)</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(py)sheetButtonBackgroundColor":{"name":"sheetButtonBackgroundColor","abstract":"<p>sheet按钮背景色，默认值同<code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(py)sheetHeaderBackgroundColor\">sheetHeaderBackgroundColor</a></code></p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(py)sheetButtonHighlightBackgroundColor":{"name":"sheetButtonHighlightBackgroundColor","abstract":"<p>sheet按钮高亮背景色，默认UIColorMake(232, 232, 232)</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(py)sheetHeaderInsets":{"name":"sheetHeaderInsets","abstract":"<p>sheet头部四边insets间距</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(py)sheetTitleMessageSpacing":{"name":"sheetTitleMessageSpacing","abstract":"<p>sheet头部title和message之间的间距，默认8pt</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(py)sheetButtonColumnCount":{"name":"sheetButtonColumnCount","abstract":"<p>sheet 的列数，一行显示多少个 button，默认是 1。</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(im)initWithTitle:message:preferredStyle:":{"name":"-initWithTitle:message:preferredStyle:","abstract":"<p>默认初始化方法</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(cm)alertControllerWithTitle:message:preferredStyle:":{"name":"+alertControllerWithTitle:message:preferredStyle:","abstract":"<p>通过类方法初始化实例</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(py)delegate":{"name":"delegate","abstract":"<div class=\"aside aside-see\">","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(im)addAction:":{"name":"-addAction:","abstract":"<p>增加一个按钮</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(im)addCancelAction":{"name":"-addCancelAction","abstract":"<p>Undocumented</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(im)addTextFieldWithConfigurationHandler:":{"name":"-addTextFieldWithConfigurationHandler:","abstract":"<p>增加一个输入框</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(py)shouldManageTextFieldsReturnEventAutomatically":{"name":"shouldManageTextFieldsReturnEventAutomatically","abstract":"<p>是否应该自动管理输入框的键盘 Return 事件（切换多个输入框的焦点、自动响应某个按钮等），默认为 YES。你也可以通过 UITextFieldDelegate 自己管理，此时请将此属性置为 NO。</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(im)addCustomView:":{"name":"-addCustomView:","abstract":"<p>增加一个自定义的view作为<code>QMUIAlertController</code>的customView</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(im)showWithAnimated:":{"name":"-showWithAnimated:","abstract":"<p>显示<code>QMUIAlertController</code></p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(im)hideWithAnimated:":{"name":"-hideWithAnimated:","abstract":"<p>隐藏<code>QMUIAlertController</code></p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(py)actions":{"name":"actions","abstract":"<p>所有<code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/QMUIAlertAction.html\">QMUIAlertAction</a></code>对象</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(py)textFields":{"name":"textFields","abstract":"<p>当前所有通过<code>addTextFieldWithConfigurationHandler:</code>接口添加的输入框</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(py)customView":{"name":"customView","abstract":"<p>设置自定义view。通过<code>addCustomView:</code>方法添加一个自定义的view，<code>QMUIAlertController</code>会在布局的时候去调用这个view的<code>sizeThatFits:</code>方法来获取size，至于x和y坐标则由控件自己控制。</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(py)title":{"name":"title","abstract":"<p>当前标题title</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(py)message":{"name":"message","abstract":"<p>当前信息message</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(py)preferredStyle":{"name":"preferredStyle","abstract":"<p>当前样式style</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(py)modalPresentationViewController":{"name":"modalPresentationViewController","abstract":"<p>将<code>QMUIAlertController</code>弹出来的<code>QMUIModalPresentationViewController</code>对象</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(py)mainVisualEffectView":{"name":"mainVisualEffectView","abstract":"<p>主体内容（alert 下指整个弹窗，actionSheet 下指取消按钮上方的那些 header 和 按钮）背后用来做背景样式的 view，默认为空白的 UIView，当你需要做磨砂效果时可以将一个 UIVisualEffectView 赋值给它（但推荐用 QMUIVisualEffectView）。当赋值为 nil 时，内部会自动创建一个空白的 UIView 代替，以保证这个属性不为空。</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(py)cancelButtonVisualEffectView":{"name":"cancelButtonVisualEffectView","abstract":"<p>actionSheet 下的取消按钮背后用来做背景样式的 view，默认为空白的 UIView，当你需要做磨砂效果时可以将一个 UIVisualEffectView 赋值给它（但推荐用 QMUIVisualEffectView）。alert 情况下不会出现。当赋值为 nil 时，内部会自动创建一个空白的 UIView 代替，以保证这个属性不为空。</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(py)orderActionsByAddedOrdered":{"name":"orderActionsByAddedOrdered","abstract":"<p>设置按钮的排序是否要由用户添加的顺序来决定，默认为NO，也即与系统原生<code>UIAlertController</code>一致，QMUIAlertActionStyleDestructive 类型的action必定在最后面。</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(py)shouldRespondMaskViewTouch":{"name":"shouldRespondMaskViewTouch","abstract":"<p>maskView是否响应点击，alert默认为NO，sheet默认为YES</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(py)isExtendBottomLayout":{"name":"isExtendBottomLayout","abstract":"<p>在 iPhoneX 机器上是否延伸底部背景色。因为在 iPhoneX 上我们会把整个面板往上移动 safeArea 的距离，如果你的面板本来就配置成撑满全屏的样式，那么就会露出底部的空隙，isExtendBottomLayout 可以帮助你把空暇填补上。默认为NO。","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(py)dismissKeyboardAutomatically":{"name":"dismissKeyboardAutomatically","abstract":"<p>在显示 alert 之前先降下键盘，默认为 YES。系统的 UIAlertController 也会在显示时降下键盘，但它能在消失后把键盘自动升起，并且这个过程不会触发 becomeFirstResponder/resignFirstResponder，QMUIAlertController 暂时做不到这样的效果，只负责降下，不负责恢复。","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(cm)appearance":{"name":"+appearance","abstract":"<p>Undocumented</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertController.html#/c:objc(cs)QMUIAlertController(cm)isAnyAlertControllerVisible":{"name":"+isAnyAlertControllerVisible","abstract":"<p>可方便地判断是否有 alertController 正在显示，全局生效</p>","parent_name":"QMUIAlertController"},"Classes/QMUIAlertAction.html#/c:objc(cs)QMUIAlertAction(cm)actionWithTitle:style:handler:":{"name":"+actionWithTitle:style:handler:","abstract":"<p>初始化<code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/QMUIAlertController.html\">QMUIAlertController</a></code>的按钮</p>","parent_name":"QMUIAlertAction"},"Classes/QMUIAlertAction.html#/c:objc(cs)QMUIAlertAction(py)button":{"name":"button","abstract":"<p><code>QMUIAlertAction</code>对应的 button 对象</p>","parent_name":"QMUIAlertAction"},"Classes/QMUIAlertAction.html#/c:objc(cs)QMUIAlertAction(py)title":{"name":"title","abstract":"<p><code>QMUIAlertAction</code>对应的标题</p>","parent_name":"QMUIAlertAction"},"Classes/QMUIAlertAction.html#/c:objc(cs)QMUIAlertAction(py)style":{"name":"style","abstract":"<p><code>QMUIAlertAction</code>对应的样式</p>","parent_name":"QMUIAlertAction"},"Classes/QMUIAlertAction.html#/c:objc(cs)QMUIAlertAction(py)enabled":{"name":"enabled","abstract":"<p><code>QMUIAlertAction</code>是否允许操作</p>","parent_name":"QMUIAlertAction"},"Classes/QMUIAlertAction.html#/c:objc(cs)QMUIAlertAction(py)buttonAttributes":{"name":"buttonAttributes","abstract":"<p><code>QMUIAlertAction</code>按钮样式，默认nil。当此值为nil的时候，则使用<code>QMUIAlertController</code>的<code>alertButtonAttributes</code>或者<code>sheetButtonAttributes</code>的值。</p>","parent_name":"QMUIAlertAction"},"Classes/QMUIAlertAction.html#/c:objc(cs)QMUIAlertAction(py)buttonDisabledAttributes":{"name":"buttonDisabledAttributes","abstract":"<p>原理同上<code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/QMUIAlertAction.html#/c:objc(cs)QMUIAlertAction(py)buttonAttributes\">buttonAttributes</a></code></p>","parent_name":"QMUIAlertAction"},"Classes/QMUIToastBackgroundView.html#/c:objc(cs)QMUIToastBackgroundView(py)shouldBlurBackgroundView":{"name":"shouldBlurBackgroundView","abstract":"<p>是否需要磨砂，默认NO。仅支持iOS8及以上版本。可以通过修改<code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/QMUIToastBackgroundView.html#/c:objc(cs)QMUIToastBackgroundView(py)styleColor\">styleColor</a></code>来控制磨砂的效果。</p>","parent_name":"QMUIToastBackgroundView"},"Classes/QMUIToastBackgroundView.html#/c:objc(cs)QMUIToastBackgroundView(py)effectView":{"name":"effectView","abstract":"<p>Undocumented</p>","parent_name":"QMUIToastBackgroundView"},"Classes/QMUIToastBackgroundView.html#/c:objc(cs)QMUIToastBackgroundView(py)styleColor":{"name":"styleColor","abstract":"<p>如果不设置磨砂，则styleColor直接作为<code>QMUIToastBackgroundView</code>的backgroundColor；如果需要磨砂，则会新增加一个<code>UIVisualEffectView</code>放在<code>QMUIToastBackgroundView</code>上面。</p>","parent_name":"QMUIToastBackgroundView"},"Classes/QMUIToastBackgroundView.html#/c:objc(cs)QMUIToastBackgroundView(py)cornerRadius":{"name":"cornerRadius","abstract":"<p>设置圆角。</p>","parent_name":"QMUIToastBackgroundView"},"Classes/QMUIToastAnimator.html#/c:objc(cs)QMUIToastAnimator(im)initWithToastView:":{"name":"-initWithToastView:","abstract":"<p>初始化方法，请务必使用这个方法来初始化。</p>","parent_name":"QMUIToastAnimator"},"Classes/QMUIToastAnimator.html#/c:objc(cs)QMUIToastAnimator(py)toastView":{"name":"toastView","abstract":"<p>获取初始化传进来的QMUIToastView。</p>","parent_name":"QMUIToastAnimator"},"Classes/QMUIToastAnimator.html#/c:objc(cs)QMUIToastAnimator(py)animationType":{"name":"animationType","abstract":"<p>指定QMUIToastAnimator做动画的类型type。此功能暂时未实现，目前所有动画类型都是QMUIToastAnimationTypeFade。</p>","parent_name":"QMUIToastAnimator"},"Classes/QMUIToastContentView.html#/c:objc(cs)QMUIToastContentView(py)customView":{"name":"customView","abstract":"<p>设置一个UIView，可以是：菊花、图片等等，请自行保证 customView 的 size 被正确设置。</p>","parent_name":"QMUIToastContentView"},"Classes/QMUIToastContentView.html#/c:objc(cs)QMUIToastContentView(py)textLabel":{"name":"textLabel","abstract":"<p>设置第一行大文字label。</p>","parent_name":"QMUIToastContentView"},"Classes/QMUIToastContentView.html#/c:objc(cs)QMUIToastContentView(py)textLabelText":{"name":"textLabelText","abstract":"<p>通过textLabelText设置可以应用textLabelAttributes的样式，如果通过textLabel.text设置则可能导致一些样式失效。</p>","parent_name":"QMUIToastContentView"},"Classes/QMUIToastContentView.html#/c:objc(cs)QMUIToastContentView(py)detailTextLabel":{"name":"detailTextLabel","abstract":"<p>设置第二行小文字label。</p>","parent_name":"QMUIToastContentView"},"Classes/QMUIToastContentView.html#/c:objc(cs)QMUIToastContentView(py)detailTextLabelText":{"name":"detailTextLabelText","abstract":"<p>通过detailTextLabelText设置可以应用detailTextLabelAttributes的样式，如果通过detailTextLabel.text设置则可能导致一些样式失效。</p>","parent_name":"QMUIToastContentView"},"Classes/QMUIToastContentView.html#/c:objc(cs)QMUIToastContentView(py)insets":{"name":"insets","abstract":"<p>设置上下左右的padding。</p>","parent_name":"QMUIToastContentView"},"Classes/QMUIToastContentView.html#/c:objc(cs)QMUIToastContentView(py)minimumSize":{"name":"minimumSize","abstract":"<p>设置最小size。</p>","parent_name":"QMUIToastContentView"},"Classes/QMUIToastContentView.html#/c:objc(cs)QMUIToastContentView(py)customViewMarginBottom":{"name":"customViewMarginBottom","abstract":"<p>设置customView的marginBottom。</p>","parent_name":"QMUIToastContentView"},"Classes/QMUIToastContentView.html#/c:objc(cs)QMUIToastContentView(py)textLabelMarginBottom":{"name":"textLabelMarginBottom","abstract":"<p>设置textLabel的marginBottom。</p>","parent_name":"QMUIToastContentView"},"Classes/QMUIToastContentView.html#/c:objc(cs)QMUIToastContentView(py)detailTextLabelMarginBottom":{"name":"detailTextLabelMarginBottom","abstract":"<p>设置detailTextLabel的marginBottom。</p>","parent_name":"QMUIToastContentView"},"Classes/QMUIToastContentView.html#/c:objc(cs)QMUIToastContentView(py)textLabelAttributes":{"name":"textLabelAttributes","abstract":"<p>设置textLabel的attributes，如果包含 NSForegroundColorAttributeName 则 textLabel 不响应 tintColor，如果不包含则 textLabel 会拿 tintColor 当成文字颜色。</p>","parent_name":"QMUIToastContentView"},"Classes/QMUIToastContentView.html#/c:objc(cs)QMUIToastContentView(py)detailTextLabelAttributes":{"name":"detailTextLabelAttributes","abstract":"<p>设置 detailTextLabel 的 attributes，如果包含 NSForegroundColorAttributeName 则 detailTextLabel 不响应 tintColor，如果不包含则 detailTextLabel 会拿 tintColor 当成文字颜色。</p>","parent_name":"QMUIToastContentView"},"Classes/QMUIToastView.html#/c:objc(cs)QMUIToastView(im)initWithView:":{"name":"-initWithView:","abstract":"<p>生成一个ToastView的唯一初始化方法，<code>view</code>的bound将会作为ToastView默认frame。</p>","parent_name":"QMUIToastView"},"Classes/QMUIToastView.html#/c:objc(cs)QMUIToastView(py)parentView":{"name":"parentView","abstract":"<p>parentView是ToastView初始化的时候传进去的那个view。</p>","parent_name":"QMUIToastView"},"Classes/QMUIToastView.html#/c:objc(cs)QMUIToastView(im)showAnimated:":{"name":"-showAnimated:","abstract":"<p>显示ToastView。</p>","parent_name":"QMUIToastView"},"Classes/QMUIToastView.html#/c:objc(cs)QMUIToastView(im)hideAnimated:":{"name":"-hideAnimated:","abstract":"<p>隐藏ToastView。</p>","parent_name":"QMUIToastView"},"Classes/QMUIToastView.html#/c:objc(cs)QMUIToastView(im)hideAnimated:afterDelay:":{"name":"-hideAnimated:afterDelay:","abstract":"<p>在<code>delay</code>时间后隐藏ToastView。</p>","parent_name":"QMUIToastView"},"Classes/QMUIToastView.html#/c:objc(cs)QMUIToastView(py)willShowBlock":{"name":"willShowBlock","abstract":"<div class=\"aside aside-warning\">","parent_name":"QMUIToastView"},"Classes/QMUIToastView.html#/c:objc(cs)QMUIToastView(py)didShowBlock":{"name":"didShowBlock","abstract":"<p>Undocumented</p>","parent_name":"QMUIToastView"},"Classes/QMUIToastView.html#/c:objc(cs)QMUIToastView(py)willHideBlock":{"name":"willHideBlock","abstract":"<p>Undocumented</p>","parent_name":"QMUIToastView"},"Classes/QMUIToastView.html#/c:objc(cs)QMUIToastView(py)didHideBlock":{"name":"didHideBlock","abstract":"<p>Undocumented</p>","parent_name":"QMUIToastView"},"Classes/QMUIToastView.html#/c:objc(cs)QMUIToastView(py)toastAnimator":{"name":"toastAnimator","abstract":"<p><code>QMUIToastAnimator</code>可以让你通过实现一些协议来自定义ToastView显示和隐藏的动画。你可以继承<code>QMUIToastAnimator</code>，然后实现<code>QMUIToastAnimatorDelegate</code>中的方法，即可实现自定义的动画。如果不赋值，则会使用<code>QMUIToastAnimator</code>中的默认动画。</p>","parent_name":"QMUIToastView"},"Classes/QMUIToastView.html#/c:objc(cs)QMUIToastView(py)toastPosition":{"name":"toastPosition","abstract":"<p>决定QMUIToastView的位置，目前有上中下三个位置，默认值是center。</p>","parent_name":"QMUIToastView"},"Classes/QMUIToastView.html#/c:objc(cs)QMUIToastView(py)removeFromSuperViewWhenHide":{"name":"removeFromSuperViewWhenHide","abstract":"<p>是否在ToastView隐藏的时候顺便把它从superView移除，默认为NO。</p>","parent_name":"QMUIToastView"},"Classes/QMUIToastView.html#/c:objc(cs)QMUIToastView(py)maskView":{"name":"maskView","abstract":"<p>会盖住整个superView，防止手指可以点击到ToastView下面的内容，默认透明。</p>","parent_name":"QMUIToastView"},"Classes/QMUIToastView.html#/c:objc(cs)QMUIToastView(py)contentView":{"name":"contentView","abstract":"<p>s</p>","parent_name":"QMUIToastView"},"Classes/QMUIToastView.html#/c:objc(cs)QMUIToastView(py)backgroundView":{"name":"backgroundView","abstract":"<p><code>contentView</code>下面的黑色背景UIView，默认使用<code>QMUIToastBackgroundView</code>实现，可以通过<code>QMUIToastBackgroundView</code>的 cornerRadius 和 styleColor 来修改圆角和背景色。</p>","parent_name":"QMUIToastView"},"Classes/QMUIToastView.html#/c:objc(cs)QMUIToastView(py)offset":{"name":"offset","abstract":"<p>上下左右的偏移值。</p>","parent_name":"QMUIToastView"},"Classes/QMUIToastView.html#/c:objc(cs)QMUIToastView(py)marginInsets":{"name":"marginInsets","abstract":"<p>ToastView 距离 parentView 去除 safeAreaInsets 后的区域的上下左右间距。</p>","parent_name":"QMUIToastView"},"Classes/QMUIToastView.html#/c:objc(cs)QMUIToastView(cm)hideAllToastInView:animated:":{"name":"+hideAllToastInView:animated:","abstract":"<p>工具方法。隐藏<code>view</code>里面的所有 ToastView</p>","parent_name":"QMUIToastView"},"Classes/QMUIToastView.html#/c:objc(cs)QMUIToastView(cm)toastInView:":{"name":"+toastInView:","abstract":"<p>工具方法。返回<code>view</code>里面最顶部的 ToastView</p>","parent_name":"QMUIToastView"},"Classes/QMUIToastView.html#/c:objc(cs)QMUIToastView(cm)allToastInView:":{"name":"+allToastInView:","abstract":"<p>工具方法。返回<code>view</code>里面所有的 ToastView</p>","parent_name":"QMUIToastView"},"Classes/QMUIStaticTableViewCellData.html#/c:objc(cs)QMUIStaticTableViewCellData(py)identifier":{"name":"identifier","abstract":"<p>当前 cellData 的标志，一般同个 tableView 里的每个 cellData 都会拥有不相同的 identifier</p>","parent_name":"QMUIStaticTableViewCellData"},"Classes/QMUIStaticTableViewCellData.html#/c:objc(cs)QMUIStaticTableViewCellData(py)indexPath":{"name":"indexPath","abstract":"<p>当前 cellData 所对应的 indexPath</p>","parent_name":"QMUIStaticTableViewCellData"},"Classes/QMUIStaticTableViewCellData.html#/c:objc(cs)QMUIStaticTableViewCellData(py)cellClass":{"name":"cellClass","abstract":"<p>cell 要使用的 class，默认为 QMUITableViewCell，若要改为自定义 class，必须是 QMUITableViewCell 的子类</p>","parent_name":"QMUIStaticTableViewCellData"},"Classes/QMUIStaticTableViewCellData.html#/c:objc(cs)QMUIStaticTableViewCellData(py)style":{"name":"style","abstract":"<p>init cell 时要使用的 style</p>","parent_name":"QMUIStaticTableViewCellData"},"Classes/QMUIStaticTableViewCellData.html#/c:objc(cs)QMUIStaticTableViewCellData(py)height":{"name":"height","abstract":"<p>cell 的高度，默认为 TableViewCellNormalHeight</p>","parent_name":"QMUIStaticTableViewCellData"},"Classes/QMUIStaticTableViewCellData.html#/c:objc(cs)QMUIStaticTableViewCellData(py)image":{"name":"image","abstract":"<p>cell 左边要显示的图片，将会被设置到 cell.imageView.image</p>","parent_name":"QMUIStaticTableViewCellData"},"Classes/QMUIStaticTableViewCellData.html#/c:objc(cs)QMUIStaticTableViewCellData(py)text":{"name":"text","abstract":"<p>cell 的文字，将会被设置到 cell.textLabel.text</p>","parent_name":"QMUIStaticTableViewCellData"},"Classes/QMUIStaticTableViewCellData.html#/c:objc(cs)QMUIStaticTableViewCellData(py)detailText":{"name":"detailText","abstract":"<p>cell 的详细文字，将会被设置到 cell.detailTextLabel.text，所以要求 cellData.style 的值必须是带 detailTextLabel 类型的 style</p>","parent_name":"QMUIStaticTableViewCellData"},"Classes/QMUIStaticTableViewCellData.html#/c:objc(cs)QMUIStaticTableViewCellData(py)cellForRowBlock":{"name":"cellForRowBlock","abstract":"<p>会自动在 tableView:cellForRowAtIndexPath: 里调用，这样就不需要实现 cellForRow</p>","parent_name":"QMUIStaticTableViewCellData"},"Classes/QMUIStaticTableViewCellData.html#/c:objc(cs)QMUIStaticTableViewCellData(py)didSelectTarget":{"name":"didSelectTarget","abstract":"<p>当 cell 的点击事件被触发时，要由哪个对象来接收</p>","parent_name":"QMUIStaticTableViewCellData"},"Classes/QMUIStaticTableViewCellData.html#/c:objc(cs)QMUIStaticTableViewCellData(py)didSelectAction":{"name":"didSelectAction","abstract":"<p>当 cell 的点击事件被触发时，要向 didSelectTarget 指针发送什么消息以响应事件</p>","parent_name":"QMUIStaticTableViewCellData"},"Classes/QMUIStaticTableViewCellData.html#/c:objc(cs)QMUIStaticTableViewCellData(py)accessoryType":{"name":"accessoryType","abstract":"<p>cell 右边的 accessoryView 的类型</p>","parent_name":"QMUIStaticTableViewCellData"},"Classes/QMUIStaticTableViewCellData.html#/c:objc(cs)QMUIStaticTableViewCellData(py)accessoryValueObject":{"name":"accessoryValueObject","abstract":"<p>配合 accessoryType 使用，不同的 accessoryType 需要配合不同 class 的 accessoryValueObject 使用。例如 QMUIStaticTableViewCellAccessoryTypeSwitch 要求传 @YES 或 @NO 用于控制 UISwitch.on 属性。</p>","parent_name":"QMUIStaticTableViewCellData"},"Classes/QMUIStaticTableViewCellData.html#/c:objc(cs)QMUIStaticTableViewCellData(py)accessoryTarget":{"name":"accessoryTarget","abstract":"<p>当 accessoryType 是某些带 UIControl 的控件时，可通过这两个属性来为 accessoryView 添加操作事件。","parent_name":"QMUIStaticTableViewCellData"},"Classes/QMUIStaticTableViewCellData.html#/c:objc(cs)QMUIStaticTableViewCellData(py)accessoryAction":{"name":"accessoryAction","abstract":"<p>Undocumented</p>","parent_name":"QMUIStaticTableViewCellData"},"Classes/QMUIStaticTableViewCellData.html#/c:objc(cs)QMUIStaticTableViewCellData(cm)staticTableViewCellDataWithIdentifier:image:text:detailText:didSelectTarget:didSelectAction:accessoryType:":{"name":"+staticTableViewCellDataWithIdentifier:image:text:detailText:didSelectTarget:didSelectAction:accessoryType:","abstract":"<p>Undocumented</p>","parent_name":"QMUIStaticTableViewCellData"},"Classes/QMUIStaticTableViewCellData.html#/c:objc(cs)QMUIStaticTableViewCellData(cm)staticTableViewCellDataWithIdentifier:cellClass:style:height:image:text:detailText:didSelectTarget:didSelectAction:accessoryType:accessoryValueObject:accessoryTarget:accessoryAction:":{"name":"+staticTableViewCellDataWithIdentifier:cellClass:style:height:image:text:detailText:didSelectTarget:didSelectAction:accessoryType:accessoryValueObject:accessoryTarget:accessoryAction:","abstract":"<p>Undocumented</p>","parent_name":"QMUIStaticTableViewCellData"},"Classes/QMUIStaticTableViewCellData.html#/c:objc(cs)QMUIStaticTableViewCellData(cm)tableViewCellAccessoryTypeWithStaticAccessoryType:":{"name":"+tableViewCellAccessoryTypeWithStaticAccessoryType:","abstract":"<p>Undocumented</p>","parent_name":"QMUIStaticTableViewCellData"},"Classes/QMUIStaticTableViewCellDataSource.html#/c:objc(cs)QMUIStaticTableViewCellDataSource(py)cellDataSections":{"name":"cellDataSections","abstract":"<p>列表的数据源，是一个二维数组，其中一维表示 section，二维表示某个 section 里的 rows，每次调用这个属性的 setter 方法都会自动刷新 tableView 内容。</p>","parent_name":"QMUIStaticTableViewCellDataSource"},"Classes/QMUIStaticTableViewCellDataSource.html#/c:objc(cs)QMUIStaticTableViewCellDataSource(py)tableView":{"name":"tableView","abstract":"<p>数据源绑定到的列表，在 UITableView (QMUI_StaticCell) 里会被赋值</p>","parent_name":"QMUIStaticTableViewCellDataSource"},"Classes/QMUIStaticTableViewCellDataSource.html#/c:objc(cs)QMUIStaticTableViewCellDataSource(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"QMUIStaticTableViewCellDataSource"},"Classes/QMUIStaticTableViewCellDataSource.html#/c:objc(cs)QMUIStaticTableViewCellDataSource(im)initWithCellDataSections:":{"name":"-initWithCellDataSections:","abstract":"<p>Undocumented</p>","parent_name":"QMUIStaticTableViewCellDataSource"},"Classes/QMUIStaticTableViewCellDataSource.html#/c:objc(cs)QMUIStaticTableViewCellDataSource(im)cellDataAtIndexPath:":{"name":"-cellDataAtIndexPath:","abstract":"<p>从 dataSource 里获取处于 indexPath 位置的 QMUIStaticTableViewCellData 对象</p>","parent_name":"QMUIStaticTableViewCellDataSource"},"Classes/QMUIStaticTableViewCellDataSource.html#/c:objc(cs)QMUIStaticTableViewCellDataSource(im)reuseIdentifierForCellAtIndexPath:":{"name":"-reuseIdentifierForCellAtIndexPath:","abstract":"<p>根据 dataSource 计算出指定的 indexPath 的 cell 所对应的 reuseIdentifier（static tableView 里一般每个 cell 的 reuseIdentifier 都是不一样的，避免复用）</p>","parent_name":"QMUIStaticTableViewCellDataSource"},"Classes/QMUIStaticTableViewCellDataSource.html#/c:objc(cs)QMUIStaticTableViewCellDataSource(im)cellForRowAtIndexPath:":{"name":"-cellForRowAtIndexPath:","abstract":"<p>用于结合 indexPath 和 dataSource 生成 cell 的方法，其中 cell 使用的是 QMUITableViewCell","parent_name":"QMUIStaticTableViewCellDataSource"},"Classes/QMUIStaticTableViewCellDataSource.html#/c:objc(cs)QMUIStaticTableViewCellDataSource(im)heightForRowAtIndexPath:":{"name":"-heightForRowAtIndexPath:","abstract":"<p>从 dataSource 里获取指定位置的 cell 的高度","parent_name":"QMUIStaticTableViewCellDataSource"},"Classes/QMUIStaticTableViewCellDataSource.html#/c:objc(cs)QMUIStaticTableViewCellDataSource(im)didSelectRowAtIndexPath:":{"name":"-didSelectRowAtIndexPath:","abstract":"<p>在 tableView:didSelectRowAtIndexPath: 里调用，可从 dataSource 里读取对应 indexPath 的 cellData，然后触发其中的 target 和 action</p>","parent_name":"QMUIStaticTableViewCellDataSource"},"Classes/QMUIStaticTableViewCellDataSource.html#/c:objc(cs)QMUIStaticTableViewCellDataSource(im)accessoryButtonTappedForRowWithIndexPath:":{"name":"-accessoryButtonTappedForRowWithIndexPath:","abstract":"<p>在 tableView:accessoryButtonTappedForRowWithIndexPath: 里调用，可从 dataSource 里读取对应 indexPath 的 cellData，然后触发其中的 target 和 action</p>","parent_name":"QMUIStaticTableViewCellDataSource"},"Classes/QMUIStaticTableViewCellDataSource.html":{"name":"QMUIStaticTableViewCellDataSource","abstract":"<p>这个控件是为了方便地实现那种类似设置界面的列表（每个 cell 的样式、内容、操作控件均不太一样，每个 cell 之间不复用），使用方式：</p>"},"Classes/QMUIStaticTableViewCellData.html":{"name":"QMUIStaticTableViewCellData","abstract":"<p>一个 cellData 对象用于存储 static tableView（例如设置界面那种列表） 列表里的一行 cell 的基本信息，包括这个 cell 的 class、text、detailText、accessoryView 等。</p>"},"Classes/QMUIToastView.html":{"name":"QMUIToastView","abstract":"<p><code>QMUIToastView</code>是一个用来显示toast的控件，其主要结构包括：<code>backgroundView</code>、<code>contentView</code>，这两个view都是通过外部赋值获取，默认使用<code>QMUIToastBackgroundView</code>和<code>QMUIToastContentView</code>。</p>"},"Classes/QMUIToastContentView.html":{"name":"QMUIToastContentView","abstract":"<p><code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/QMUIToastView.html\">QMUIToastView</a></code>默认使用的contentView。其结构是：customView-&gt;textLabel-&gt;detailTextLabel等三个view依次往下排列。其中customView可以赋值任意的UIView或者自定义的view。"},"Classes/QMUIToastAnimator.html":{"name":"QMUIToastAnimator","abstract":"<p><code>QMUIToastAnimator</code>可以让你通过实现一些协议来自定义ToastView显示和隐藏的动画。你可以继承<code>QMUIToastAnimator</code>，然后实现<code>QMUIToastAnimatorDelegate</code>中的方法，即可实现自定义的动画。QMUIToastAnimator默认也提供了几种type的动画：1、QMUIToastAnimationTypeFade；2、QMUIToastAnimationTypeZoom；3、QMUIToastAnimationTypeSlide；</p>"},"Classes/QMUIToastBackgroundView.html":{"name":"QMUIToastBackgroundView","abstract":"<p>Undocumented</p>"},"Classes/QMUIAlertAction.html":{"name":"QMUIAlertAction","abstract":"<p>QMUIAlertController的按钮，初始化完通过<code>QMUIAlertController</code>的<code>addAction:</code>方法添加到 AlertController 上即可。</p>"},"Classes/QMUIAlertController.html":{"name":"QMUIAlertController","abstract":"<p><code>QMUIAlertController</code>是模仿系统<code>UIAlertController</code>的控件，所以系统有的功能在QMUIAlertController里面基本都有。同时<code>QMUIAlertController</code>还提供了一些扩展功能，例如：它的每个 button 都是开放出来的，可以对默认的按钮进行二次处理（比如加一个图片）；可以通过 appearance 在 app 启动的时候修改整个<code>QMUIAlertController</code>的主题样式。</p>"},"Classes/QMUIModalPresentationViewController.html":{"name":"QMUIModalPresentationViewController","abstract":"<p>一个提供通用的弹出浮层功能的控件，可以将任意<code>UIView</code>或<code>UIViewController</code>以浮层的形式显示出来并自动布局。</p>"},"Classes.html#/c:objc(cs)QMUIModalPresentationWindow":{"name":"QMUIModalPresentationWindow","abstract":"<p>专用于QMUIModalPresentationViewController的UIWindow，这样才能在<code>UIApplication.sharedApplication.windows</code>里方便地区分出来</p>"},"Classes/QMUICellHeightKeyCache.html":{"name":"QMUICellHeightKeyCache","abstract":"<p>通过业务定义的一个 key 来缓存 cell 的高度，需搭配 UITableView 使用，一般不用你自己去 init。"},"Classes/QMUIWeakObjectContainer.html":{"name":"QMUIWeakObjectContainer","abstract":"<p>一个常见的场景：当通过 objc_setAssociatedObject 以弱引用的方式（OBJC_ASSOCIATION_ASSIGN）绑定对象A时，假如对象A稍后被释放了，则通过 objc_getAssociatedObject 再次试图访问对象A时会导致野指针。"},"Classes/QMUISegmentedControl.html":{"name":"QMUISegmentedControl","abstract":"<p>Undocumented</p>"},"Classes/QMUICellSizeKeyCache.html":{"name":"QMUICellSizeKeyCache","abstract":"<p>通过业务定义的一个 key 来缓存 cell 的 size，需搭配 UICollectionView 使用，一般不用你自己去 init。"},"Classes/QMUIAsset.html":{"name":"QMUIAsset","abstract":"<p>相册里某一个资源的包装对象，该资源可能是图片、视频等。</p>"},"Classes/QMUIAssetsGroup.html":{"name":"QMUIAssetsGroup","abstract":"<p>Undocumented</p>"},"Classes/QMUIAssetsManager.html":{"name":"QMUIAssetsManager","abstract":"<p>构建 QMUIAssetsManager 这个对象并提供单例的调用方式主要出于下面两点考虑：</p>"},"Classes/QMUIImagePreviewView.html":{"name":"QMUIImagePreviewView","abstract":"<p>查看图片的控件，支持横向滚动、放大缩小、loading 及错误语展示，内部使用 UICollectionView 实现横向滚动及 cell 复用，因此与其他普通的 UICollectionView 一样，也可使用 reloadData、collectionViewLayout 等常用方法。</p>"},"Classes/QMUIZoomImageView.html":{"name":"QMUIZoomImageView","abstract":"<p>支持缩放查看静态图片、live photo、视频的控件"},"Classes/QMUIZoomImageViewVideoToolbar.html":{"name":"QMUIZoomImageViewVideoToolbar","abstract":"<p>Undocumented</p>"},"Classes/QMUIImagePreviewViewController.html":{"name":"QMUIImagePreviewViewController","abstract":"<p>图片预览控件，主要功能由内部自带的 QMUIImagePreviewView 提供，由于以 viewController 的形式存在，所以适用于那种在单独界面里展示图片，或者需要从某张目标图片的位置以动画的形式放大进入预览界面的场景。</p>"},"Classes/QMUIImagePreviewViewTransitionAnimator.html":{"name":"QMUIImagePreviewViewTransitionAnimator","abstract":"<p>负责处理 QMUIImagePreviewViewController 被 present/dismiss 时的动画，如果需要自定义动画效果，可按需修改 animationEnteringBlock、animationBlock、animationCompletionBlock。</p>"},"Classes.html#/c:objc(cs)QMUITestView":{"name":"QMUITestView","abstract":"<p>Undocumented</p>"},"Classes.html#/c:objc(cs)QMUITestWindow":{"name":"QMUITestWindow","abstract":"<p>Undocumented</p>"},"Classes/QMUIAnimationHelper.html":{"name":"QMUIAnimationHelper","abstract":"<p>Undocumented</p>"},"Classes/QMUIDisplayLinkAnimation.html":{"name":"QMUIDisplayLinkAnimation","abstract":"<p>Undocumented</p>"},"Classes/QMUIThemeManager.html":{"name":"QMUIThemeManager","abstract":"<p>主题管理组件，可添加自定义的主题对象，并为每个对象指定一个专门的 identifier，当主题发生变化时，会遍历 UIViewController 和 UIView，调用每个 viewController 和每个可视 view 的 qmui_themeDidChangeByManager:identifier:theme: 方法，在里面由业务去自行根据当前主题设置不同的外观（color、image 等）。借助 QMUIThemeManagerCenter，可实现一个项目里同时存在多个维度的主题（例如全局维度存在 light/dark 2套主题，局部的某个界面存在 white/yellow/green/black 4套主题），各自互不影响，如果业务项目只需要一个维度的主题，则全都使用 QMUIThemeManagerCenter.defaultThemeManager 来获取 QMUIThemeManager 即可，如果业务有多维度主题的需求，可使用 +[QMUIThemeManagerCenter themeManagerWithName:] 生成不同的 QMUIThemeManager。</p>"},"Classes/QMUIThemeManagerCenter.html":{"name":"QMUIThemeManagerCenter","abstract":"<p>用于获取 QMUIThemeManager，具体使用请查看 QMUIThemeManager 的注释。</p>"},"Classes/QMUIThemeColor.html":{"name":"QMUIThemeColor","abstract":"<div class=\"aside aside-warning\">"},"Classes/QMUIThemeImage.html":{"name":"QMUIThemeImage","abstract":"<p>Undocumented</p>"},"Classes/QMUIThemeVisualEffect.html":{"name":"QMUIThemeVisualEffect","abstract":"<div class=\"aside aside-warning\">"},"Classes/QMUIPopupContainerView.html":{"name":"QMUIPopupContainerView","abstract":"<p>带箭头的小tips浮层，自带 imageView 和 textLabel，可展示简单的图文信息，支持 UIViewContentModeTop/UIViewContentModeBottom/UIViewContentModeCenter 三种布局方式。"},"Classes/QMUILogItem.html":{"name":"QMUILogItem","abstract":"<p>每一条 QMUILog 日志都以 QMUILogItem 的形式包装起来</p>"},"Classes/QMUILogNameManager.html":{"name":"QMUILogNameManager","abstract":"<p>log.name 的管理器，由它来管理每一个 name 是否可用、以及清理不需要的 name</p>"},"Classes/QMUILogger.html":{"name":"QMUILogger","abstract":"<p>Undocumented</p>"},"Classes/QMUIFloatLayoutView.html":{"name":"QMUIFloatLayoutView","abstract":"<p>做类似 CSS 里的 float:left 的布局，自行使用 addSubview: 将子 View 添加进来即可。</p>"},"Classes/QMUIMultipleDelegates.html":{"name":"QMUIMultipleDelegates","abstract":"<p>存放多个 delegate 指针的容器，必须搭配其他控件使用，一般不需要你自己 init。作用是让某个 class 支持同时存在多个 delegate。更多说明请查看 NSObject (QMUIMultipleDelegates) 的注释。</p>"},"Classes/QMUITextField.html":{"name":"QMUITextField","abstract":"<p>支持的特性包括：</p>"},"Classes/QMUIButton.html":{"name":"QMUIButton","abstract":"<p>提供以下功能：</p>"},"Classes/QMUIFillButton.html":{"name":"QMUIFillButton","abstract":"<p>QMUIFillButton"},"Classes/QMUILinkButton.html":{"name":"QMUILinkButton","abstract":"<p>支持显示下划线的按钮，可用于需要链接的场景。下划线默认和按钮宽度一样，可通过 <code>underlineInsets</code> 调整。</p>"},"Classes/QMUIGhostButton.html":{"name":"QMUIGhostButton","abstract":"<p>“幽灵”按钮，也即背景透明、带圆角边框的按钮</p>"},"Classes/QMUIToolbarButton.html":{"name":"QMUIToolbarButton","abstract":"<p><code>QMUIToolbarButton</code>是用于底部工具栏的按钮</p>"},"Classes/QMUINavigationButton.html":{"name":"QMUINavigationButton","abstract":"<p>QMUINavigationButton 有两部分组成："},"Classes/QMUIConsoleToolbar.html":{"name":"QMUIConsoleToolbar","abstract":"<p>Undocumented</p>"},"Classes/QMUIConsoleViewController.html":{"name":"QMUIConsoleViewController","abstract":"<p>Undocumented</p>"},"Classes/QMUINavigationTitleView.html":{"name":"QMUINavigationTitleView","abstract":"<p>可作为navgationItem.titleView 的标题控件。</p>"},"Classes.html#/c:objc(cs)QMUISearchBar":{"name":"QMUISearchBar","abstract":"<p>Undocumented</p>"},"Classes/QMUIImagePickerHelper.html":{"name":"QMUIImagePickerHelper","abstract":"<p>配合 QMUIImagePickerViewController 使用的工具类</p>"},"Classes/QMUIAlbumTableViewCell.html":{"name":"QMUIAlbumTableViewCell","abstract":"<p>Undocumented</p>"},"Classes/QMUIAlbumViewController.html":{"name":"QMUIAlbumViewController","abstract":"<p>当前设备照片里的相簿列表，使用方式：</p>"},"Classes/QMUITableViewCell.html":{"name":"QMUITableViewCell","abstract":"<p>Undocumented</p>"},"Classes/QMUIImagePickerCollectionViewCell.html":{"name":"QMUIImagePickerCollectionViewCell","abstract":"<p>图片选择空间里的九宫格 cell，支持显示 checkbox、饼状进度条及重试按钮（iCloud 图片需要）</p>"},"Classes/QMUIImagePickerPreviewViewController.html":{"name":"QMUIImagePickerPreviewViewController","abstract":"<p>Undocumented</p>"},"Classes/QMUIImagePickerViewController.html":{"name":"QMUIImagePickerViewController","abstract":"<p>Undocumented</p>"},"Classes/QMUILabel.html":{"name":"QMUILabel","abstract":"<p><code>QMUILabel</code>支持通过<code>contentEdgeInsets</code>属性来实现类似padding的效果。</p>"},"Classes/QMUILogManagerViewController.html":{"name":"QMUILogManagerViewController","abstract":"<p>用于管理 QMUILog name 的调试界面，可直接 init 使用</p>"},"Classes/QMUITableView.html":{"name":"QMUITableView","abstract":"<p>Undocumented</p>"},"Classes/QMUIVisualEffectView.html":{"name":"QMUIVisualEffectView","abstract":"<p>Undocumented</p>"},"Classes/QMUIScrollAnimator.html":{"name":"QMUIScrollAnimator","abstract":"<p>一个方便地监控 UIScrollView 滚动的类，可在 didScrollBlock 里做一些与滚动位置相关的事情。</p>"},"Classes/QMUINavigationBarScrollingAnimator.html":{"name":"QMUINavigationBarScrollingAnimator","abstract":"<p>实现通过界面上的 UIScrollView 滚动来控制顶部导航栏外观的类，导航栏外观会跟随滚动距离的变化而变化。</p>"},"Classes/QMUINavigationBarScrollingSnapAnimator.html":{"name":"QMUINavigationBarScrollingSnapAnimator","abstract":"<p>实现通过界面上的 UIScrollView 滚动来控制顶部导航栏外观的类，当滚动到某个位置时，即触发导航栏外观的变化。</p>"},"Classes/QMUICellHeightCache.html":{"name":"QMUICellHeightCache","abstract":"<p>Undocumented</p>"},"Classes/QMUICellHeightIndexPathCache.html":{"name":"QMUICellHeightIndexPathCache","abstract":"<p>Undocumented</p>"},"Classes/QMUIDialogViewController.html":{"name":"QMUIDialogViewController","abstract":"<p>弹窗组件基类，自带<code>headerView</code>、<code>contentView</code>、<code>footerView</code>，并通过<code>addCancelButtonWithText:block:</code>、<code>addSubmitButtonWithText:block:</code>方法来添加取消、确定按钮。"},"Classes/QMUIDialogSelectionViewController.html":{"name":"QMUIDialogSelectionViewController","abstract":"<p>支持列表选择的弹窗，通过 <code>items</code> 指定要展示的所有选项（暂时只支持<code>NSString</code>）。默认使用单选，可通过 <code>allowsMultipleSelection</code> 支持多选。"},"Classes/QMUIDialogTextFieldViewController.html":{"name":"QMUIDialogTextFieldViewController","abstract":"<p>支持单行文本输入的弹窗，可通过<code>textField.maximumLength</code>来控制最长可输入的字符，超过则无法继续输入。"},"Classes/QMUIPieProgressView.html":{"name":"QMUIPieProgressView","abstract":"<p>Undocumented</p>"},"Classes.html#/c:objc(cs)QMUIPopupMenuBaseItem":{"name":"QMUIPopupMenuBaseItem","abstract":"<p>用于 QMUIPopupMenuView 的 item 基类，便于自定义各种类型的 item。若有 subview 请直接添加到 self 上，自身大小的计算请写到 sizeThatFits:，布局写到 layoutSubviews。</p>"},"Classes/QMUIPopupMenuButtonItem.html":{"name":"QMUIPopupMenuButtonItem","abstract":"<p>配合 QMUIPopupMenuView 使用，用于可点击的菜单项。"},"Classes/QMUIPopupMenuView.html":{"name":"QMUIPopupMenuView","abstract":"<p>用于弹出浮层里显示一行一行的菜单的控件。"},"Classes/QMUIMoreOperationController.html":{"name":"QMUIMoreOperationController","abstract":"<p>更多操作面板控件，类似系统的相册分享面板，以及微信的 webview 分享面板。功能特性包括：</p>"},"Classes/QMUIMoreOperationItemView.html":{"name":"QMUIMoreOperationItemView","abstract":"<p>Undocumented</p>"},"Classes/QMUIEmptyView.html":{"name":"QMUIEmptyView","abstract":"<p>通用的空界面控件，支持显示 loading、标题和副标题提示语、占位图片，QMUICommonViewController 内已集成一个 emptyView，无需额外添加。</p>"},"Classes/QMUIGridView.html":{"name":"QMUIGridView","abstract":"<p>用于做九宫格布局，会将内部所有的 subview 根据指定的列数和行高，把每个 item（也即 subview） 拉伸到相同的大小。</p>"},"Classes/QMUIKeyboardManager.html":{"name":"QMUIKeyboardManager","abstract":"<p><code>QMUIKeyboardManager</code> 提供了方便管理键盘事件的方案，使用的场景是需要跟随键盘的显示或者隐藏来更改界面的 UI，例如输入框跟随在键盘的顶部。"},"Classes/QMUIKeyboardUserInfo.html":{"name":"QMUIKeyboardUserInfo","abstract":"<p>Undocumented</p>"},"Classes/QMUITableViewHeaderFooterView.html":{"name":"QMUITableViewHeaderFooterView","abstract":"<p>适用于 UITableView 的 sectionHeaderFooterView，提供的特性包括：</p>"},"Classes/QMUIEmotionInputManager.html":{"name":"QMUIEmotionInputManager","abstract":"<p>提供一个常见的通用表情面板，能为绑定的<code>UITextField</code>或<code>UITextView</code>提供表情的相关功能，包括点击表情输入对应的表情名字、点击删除按钮删除表情。"},"Classes/QMUIOrderedDictionary.html":{"name":"QMUIOrderedDictionary","abstract":"<p>一个简单实现的有序的 key-value 容器，通过 initWithKeysAndObjects: 初始化后，用下标访问即可，如 dict[0] 或 dict[key]</p>"},"Classes/QMUISlider.html":{"name":"QMUISlider","abstract":"<p>相比系统的 UISlider，支持：</p>"},"Classes/QMUIMarqueeLabel.html":{"name":"QMUIMarqueeLabel","abstract":"<p>简易的跑马灯 label 控件，在文字超过 label 可视区域时会自动开启跑马灯效果展示文字，文字滚动时是首尾连接的效果（参考播放音乐时系统锁屏界面顶部的音乐标题）。</p>"},"Classes/QMUICollectionViewPagingLayout.html":{"name":"QMUICollectionViewPagingLayout","abstract":"<p>支持按页横向滚动的 UICollectionViewLayout，可切换不同类型的滚动动画。</p>"},"Classes/QMUITips.html":{"name":"QMUITips","abstract":"<p>简单封装了 QMUIToastView，支持弹出纯文本、loading、succeed、error、info 等五种 tips。如果这些接口还满足不了业务的需求，可以通过 QMUITips 的分类自行添加接口。"},"Classes/QMUITextView.html":{"name":"QMUITextView","abstract":"<p>自定义 UITextView，提供的特性如下：</p>"},"Classes/QMUIEmotion.html":{"name":"QMUIEmotion","abstract":"<p>代表一个表情的数据对象</p>"},"Classes/QMUIEmotionView.html":{"name":"QMUIEmotionView","abstract":"<p>表情控件，支持任意表情的展示，每个表情以相同的大小显示。</p>"},"Classes/QMUIAppearance.html":{"name":"QMUIAppearance","abstract":"<p>UIKit 仅提供了对 UIView 默认的 UIAppearance 支持，如果你是一个继承自 NSObject 的对象，想要使用 UIAppearance 能力，按 UIKit 公开的 API 是无法实现的，而 QMUIAppearance 对这种场景提供了支持。</p>"},"Categories/NSObject%28QMUIAppearnace%29.html#/c:objc(cs)NSObject(im)qmui_applyAppearance":{"name":"-qmui_applyAppearance","abstract":"<p>从 appearance 里取值并赋值给当前实例，通常在对象的 init 里调用（只要在实例初始化后、使用前就可以）。适用于 QMUIAppearance 和系统的 UIAppearance。</p>","parent_name":"NSObject(QMUIAppearnace)"},"Categories/CALayer%28QMUIViewAnimation%29.html#/c:objc(cs)CALayer(py)qmui_viewAnimaitonEnabled":{"name":"qmui_viewAnimaitonEnabled","abstract":"<p>开启了该属性的 CALayer 可在 +[UIView animateWithDuration:animations:]  执行动画，系统默认是不支持这种做法的。</p>","parent_name":"CALayer(QMUIViewAnimation)"},"Categories/UITextView%28QMUI_KeyboardManager%29.html#/c:objc(cs)UITextView(py)qmui_keyboardWillShowNotificationBlock":{"name":"qmui_keyboardWillShowNotificationBlock","abstract":"<p>键盘相关block，搭配QMUIKeyboardManager一起使用</p>","parent_name":"UITextView(QMUI_KeyboardManager)"},"Categories/UITextView%28QMUI_KeyboardManager%29.html#/c:objc(cs)UITextView(py)qmui_keyboardWillHideNotificationBlock":{"name":"qmui_keyboardWillHideNotificationBlock","abstract":"<p>Undocumented</p>","parent_name":"UITextView(QMUI_KeyboardManager)"},"Categories/UITextView%28QMUI_KeyboardManager%29.html#/c:objc(cs)UITextView(py)qmui_keyboardWillChangeFrameNotificationBlock":{"name":"qmui_keyboardWillChangeFrameNotificationBlock","abstract":"<p>Undocumented</p>","parent_name":"UITextView(QMUI_KeyboardManager)"},"Categories/UITextView%28QMUI_KeyboardManager%29.html#/c:objc(cs)UITextView(py)qmui_keyboardDidShowNotificationBlock":{"name":"qmui_keyboardDidShowNotificationBlock","abstract":"<p>Undocumented</p>","parent_name":"UITextView(QMUI_KeyboardManager)"},"Categories/UITextView%28QMUI_KeyboardManager%29.html#/c:objc(cs)UITextView(py)qmui_keyboardDidHideNotificationBlock":{"name":"qmui_keyboardDidHideNotificationBlock","abstract":"<p>Undocumented</p>","parent_name":"UITextView(QMUI_KeyboardManager)"},"Categories/UITextView%28QMUI_KeyboardManager%29.html#/c:objc(cs)UITextView(py)qmui_keyboardDidChangeFrameNotificationBlock":{"name":"qmui_keyboardDidChangeFrameNotificationBlock","abstract":"<p>Undocumented</p>","parent_name":"UITextView(QMUI_KeyboardManager)"},"Categories/UITextField%28QMUI_KeyboardManager%29.html#/c:objc(cs)UITextField(py)qmui_keyboardWillShowNotificationBlock":{"name":"qmui_keyboardWillShowNotificationBlock","abstract":"<p>键盘相关block，搭配QMUIKeyboardManager一起使用</p>","parent_name":"UITextField(QMUI_KeyboardManager)"},"Categories/UITextField%28QMUI_KeyboardManager%29.html#/c:objc(cs)UITextField(py)qmui_keyboardWillHideNotificationBlock":{"name":"qmui_keyboardWillHideNotificationBlock","abstract":"<p>Undocumented</p>","parent_name":"UITextField(QMUI_KeyboardManager)"},"Categories/UITextField%28QMUI_KeyboardManager%29.html#/c:objc(cs)UITextField(py)qmui_keyboardWillChangeFrameNotificationBlock":{"name":"qmui_keyboardWillChangeFrameNotificationBlock","abstract":"<p>Undocumented</p>","parent_name":"UITextField(QMUI_KeyboardManager)"},"Categories/UITextField%28QMUI_KeyboardManager%29.html#/c:objc(cs)UITextField(py)qmui_keyboardDidShowNotificationBlock":{"name":"qmui_keyboardDidShowNotificationBlock","abstract":"<p>Undocumented</p>","parent_name":"UITextField(QMUI_KeyboardManager)"},"Categories/UITextField%28QMUI_KeyboardManager%29.html#/c:objc(cs)UITextField(py)qmui_keyboardDidHideNotificationBlock":{"name":"qmui_keyboardDidHideNotificationBlock","abstract":"<p>Undocumented</p>","parent_name":"UITextField(QMUI_KeyboardManager)"},"Categories/UITextField%28QMUI_KeyboardManager%29.html#/c:objc(cs)UITextField(py)qmui_keyboardDidChangeFrameNotificationBlock":{"name":"qmui_keyboardDidChangeFrameNotificationBlock","abstract":"<p>Undocumented</p>","parent_name":"UITextField(QMUI_KeyboardManager)"},"Categories/UIResponder%28KeyboardManager%29.html#/c:objc(cs)UIResponder(py)qmui_keyboardManager":{"name":"qmui_keyboardManager","abstract":"<p>持有KeyboardManager对象</p>","parent_name":"UIResponder(KeyboardManager)"},"Categories/UICollectionView%28QMUILayoutCell%29.html#/c:objc(cs)UICollectionView(im)qmui_heightForCellWithIdentifier:cellClass:itemWidth:configuration:":{"name":"-qmui_heightForCellWithIdentifier:cellClass:itemWidth:configuration:","abstract":"<p>Undocumented</p>","parent_name":"UICollectionView(QMUILayoutCell)"},"Categories/UICollectionView%28QMUILayoutCell%29.html#/c:objc(cs)UICollectionView(im)qmui_heightForCellWithIdentifier:cellClass:itemWidth:cacheByIndexPath:configuration:":{"name":"-qmui_heightForCellWithIdentifier:cellClass:itemWidth:cacheByIndexPath:configuration:","abstract":"<p>Undocumented</p>","parent_name":"UICollectionView(QMUILayoutCell)"},"Categories/UICollectionView%28QMUILayoutCell%29.html#/c:objc(cs)UICollectionView(im)qmui_heightForCellWithIdentifier:cellClass:itemWidth:cacheByKey:configuration:":{"name":"-qmui_heightForCellWithIdentifier:cellClass:itemWidth:cacheByKey:configuration:","abstract":"<p>Undocumented</p>","parent_name":"UICollectionView(QMUILayoutCell)"},"Categories/UICollectionView%28QMUILayoutCell%29.html#/c:objc(cs)UICollectionView(im)qmui_invalidateAllHeight":{"name":"-qmui_invalidateAllHeight","abstract":"<p>搭配 QMUICellHeightCache，清除整个列表的所有高度缓存（包括 key 和 indexPath），注意请不要直接使用 self.qmui_keyedHeightCache 或 self.qmui_indexPathHeightCache 的 invalidate 方法，因为一个 UICollectionView 在不同宽度下会有不同的 QMUICellHeightCache/QMUICellHeightIndexPathCache，直接使用那两个 cache 的 invalidate 方法只能刷新当前的 cache，无法刷新其他宽度下的 cache。</p>","parent_name":"UICollectionView(QMUILayoutCell)"},"Categories/UICollectionView%28QMUIIndexPathHeightCacheInvalidation%29.html#/c:objc(cs)UICollectionView(im)qmui_reloadDataWithoutInvalidateIndexPathHeightCache":{"name":"-qmui_reloadDataWithoutInvalidateIndexPathHeightCache","abstract":"<p>当需要 reloadData 的时候，又不想使缓存失效，可以调用下面这个方法。注意，仅在 qmui_invalidateIndexPathHeightCachedAutomatically 为 YES 时才有意义。</p>","parent_name":"UICollectionView(QMUIIndexPathHeightCacheInvalidation)"},"Categories/UICollectionView%28QMUICellHeightIndexPathCache%29.html#/c:objc(cs)UICollectionView(py)qmui_invalidateIndexPathHeightCachedAutomatically":{"name":"qmui_invalidateIndexPathHeightCachedAutomatically","abstract":"<p>YES 表示在 reloadData、reloadIndexPath: 等方法被调用时，对应的缓存也会被自动更新，默认为 YES。仅对 indexPath 方式的缓存有效。</p>","parent_name":"UICollectionView(QMUICellHeightIndexPathCache)"},"Categories/UICollectionView%28QMUICellHeightIndexPathCache%29.html#/c:objc(cs)UICollectionView(py)qmui_indexPathHeightCache":{"name":"qmui_indexPathHeightCache","abstract":"<p>在 UICollectionView 不同的大小下会得到不一样的 QMUICellHeightIndexPathCache 实例，从而保证大小变化时缓存自动刷新</p>","parent_name":"UICollectionView(QMUICellHeightIndexPathCache)"},"Categories/UICollectionView%28QMUICellHeightIndexPathCache%29.html#/c:objc(cs)UICollectionView(im)qmui_invalidateHeightAtIndexPath:":{"name":"-qmui_invalidateHeightAtIndexPath:","abstract":"<p>搭配 QMUICellHeightIndexPathCache，清除指定 indexPath 的高度缓存，注意请不要直接使用 [self.qmui_indexPathHeightCache invalidateHeightAtIndexPath:]，因为一个 UICollectionView 在不同宽度下会有不同的 QMUICellHeightIndexPathCache，直接使用那个 cache 的 invalidate 方法只能刷新当前的 cache，无法刷新其他宽度下的 cache。</p>","parent_name":"UICollectionView(QMUICellHeightIndexPathCache)"},"Categories/UICollectionView%28QMUIKeyedHeightCache%29.html#/c:objc(cs)UICollectionView(py)qmui_keyedHeightCache":{"name":"qmui_keyedHeightCache","abstract":"<p>在 UICollectionView 不同的大小下会得到不一样的 QMUICellHeightCache 实例，从而保证大小变化时缓存自动刷新</p>","parent_name":"UICollectionView(QMUIKeyedHeightCache)"},"Categories/UICollectionView%28QMUIKeyedHeightCache%29.html#/c:objc(cs)UICollectionView(im)qmui_invalidateHeightForKey:":{"name":"-qmui_invalidateHeightForKey:","abstract":"<p>搭配 QMUICellHeightCache，清除指定 key 的高度缓存，注意请不要直接使用 [self.qmui_keyedHeightCache invalidateHeightForKey:]，因为一个 UICollectionView 在不同宽度下会有不同的 QMUICellHeightCache，直接使用那个 cache 的 invalidate 方法只能刷新当前的 cache，无法刷新其他宽度下的 cache。</p>","parent_name":"UICollectionView(QMUIKeyedHeightCache)"},"Categories/UITableView%28QMUIIndexPathHeightCacheInvalidation%29.html#/c:objc(cs)UITableView(im)qmui_reloadDataWithoutInvalidateIndexPathHeightCache":{"name":"-qmui_reloadDataWithoutInvalidateIndexPathHeightCache","abstract":"<p>当需要 reloadData 的时候，又不想使缓存失效，可以调用下面这个方法。注意，仅在 qmui_invalidateIndexPathHeightCachedAutomatically 为 YES 时才有意义。</p>","parent_name":"UITableView(QMUIIndexPathHeightCacheInvalidation)"},"Categories/UITableView%28QMUICellHeightIndexPathCache%29.html#/c:objc(cs)UITableView(py)qmui_invalidateIndexPathHeightCachedAutomatically":{"name":"qmui_invalidateIndexPathHeightCachedAutomatically","abstract":"<p>YES 表示在 reloadData、reloadIndexPath: 等方法被调用时，对应的缓存也会被自动更新，默认为 YES。仅对 indexPath 方式的缓存有效。</p>","parent_name":"UITableView(QMUICellHeightIndexPathCache)"},"Categories/UITableView%28QMUICellHeightIndexPathCache%29.html#/c:objc(cs)UITableView(py)qmui_indexPathHeightCache":{"name":"qmui_indexPathHeightCache","abstract":"<p>在 UICollectionView 不同的大小下会得到不一样的 QMUICellHeightIndexPathCache 实例，从而保证大小变化时缓存自动刷新</p>","parent_name":"UITableView(QMUICellHeightIndexPathCache)"},"Categories/UITableView%28QMUICellHeightIndexPathCache%29.html#/c:objc(cs)UITableView(im)qmui_invalidateHeightAtIndexPath:":{"name":"-qmui_invalidateHeightAtIndexPath:","abstract":"<p>搭配 QMUICellHeightIndexPathCache，清除指定 indexPath 的高度缓存，注意请不要直接使用 [self.qmui_indexPathHeightCache invalidateHeightAtIndexPath:]，因为一个 UITableView 在不同宽度下会有不同的 QMUICellHeightIndexPathCache，直接使用那个 cache 的 invalidate 方法只能刷新当前的 cache，无法刷新其他宽度下的 cache。</p>","parent_name":"UITableView(QMUICellHeightIndexPathCache)"},"Categories/UITableView%28QMUIKeyedHeightCache%29.html#/c:objc(cs)UITableView(py)qmui_keyedHeightCache":{"name":"qmui_keyedHeightCache","abstract":"<p>在 UITableView 不同的宽度下会得到不一样的 QMUICellHeightCache 实例，从而保证宽度变化时缓存自动刷新</p>","parent_name":"UITableView(QMUIKeyedHeightCache)"},"Categories/UITableView%28QMUIKeyedHeightCache%29.html#/c:objc(cs)UITableView(im)qmui_invalidateHeightForKey:":{"name":"-qmui_invalidateHeightForKey:","abstract":"<p>搭配 QMUICellHeightCache，清除指定 key 的高度缓存，注意请不要直接使用 [self.qmui_keyedHeightCache invalidateHeightForKey:]，因为一个 UITableView 在不同宽度下会有不同的 QMUICellHeightCache，直接使用那个 cache 的 invalidate 方法只能刷新当前的 cache，无法刷新其他宽度下的 cache。</p>","parent_name":"UITableView(QMUIKeyedHeightCache)"},"Categories/UITableView%28QMUILayoutCell%29.html#/c:objc(cs)UITableView(im)qmui_heightForCellWithIdentifier:configuration:":{"name":"-qmui_heightForCellWithIdentifier:configuration:","abstract":"<p>通过 qmui_tableView:cellWithIdentifier: 得到 identifier 对应的 cell 实例，并在 configuration 里对 cell 进行渲染后，得到 cell 的高度。</p>","parent_name":"UITableView(QMUILayoutCell)"},"Categories/UITableView%28QMUILayoutCell%29.html#/c:objc(cs)UITableView(im)qmui_heightForCellWithIdentifier:cacheByIndexPath:configuration:":{"name":"-qmui_heightForCellWithIdentifier:cacheByIndexPath:configuration:","abstract":"<p>通过 qmui_tableView:cellWithIdentifier: 得到 identifier 对应的 cell 实例，并在 configuration 里对 cell 进行渲染后，得到 cell 的高度。</p>","parent_name":"UITableView(QMUILayoutCell)"},"Categories/UITableView%28QMUILayoutCell%29.html#/c:objc(cs)UITableView(im)qmui_heightForCellWithIdentifier:cacheByKey:configuration:":{"name":"-qmui_heightForCellWithIdentifier:cacheByKey:configuration:","abstract":"<p>通过 qmui_tableView:cellWithIdentifier: 得到 identifier 对应的 cell 实例，并在 configuration 里对 cell 进行渲染后，得到 cell 的高度。</p>","parent_name":"UITableView(QMUILayoutCell)"},"Categories/UITableView%28QMUILayoutCell%29.html#/c:objc(cs)UITableView(im)qmui_invalidateAllHeight":{"name":"-qmui_invalidateAllHeight","abstract":"<p>搭配 QMUICellHeightCache，清除整个列表的所有高度缓存（包括 key 和 indexPath），注意请不要直接使用 self.qmui_keyedHeightCache 或 self.qmui_indexPathHeightCache 的 invalidate 方法，因为一个 UITableView 在不同宽度下会有不同的 QMUICellHeightCache/QMUICellHeightIndexPathCache，直接使用那两个 cache 的 invalidate 方法只能刷新当前的 cache，无法刷新其他宽度下的 cache。</p>","parent_name":"UITableView(QMUILayoutCell)"},"Categories/UIBarButtonItem%28QMUINavigationButton%29.html#/c:objc(cs)UIBarButtonItem(cm)qmui_itemWithButton:target:action:":{"name":"+qmui_itemWithButton:target:action:","abstract":"<p>Undocumented</p>","parent_name":"UIBarButtonItem(QMUINavigationButton)"},"Categories/UIBarButtonItem%28QMUINavigationButton%29.html#/c:objc(cs)UIBarButtonItem(cm)qmui_itemWithImage:target:action:":{"name":"+qmui_itemWithImage:target:action:","abstract":"<p>Undocumented</p>","parent_name":"UIBarButtonItem(QMUINavigationButton)"},"Categories/UIBarButtonItem%28QMUINavigationButton%29.html#/c:objc(cs)UIBarButtonItem(cm)qmui_itemWithTitle:target:action:":{"name":"+qmui_itemWithTitle:target:action:","abstract":"<p>Undocumented</p>","parent_name":"UIBarButtonItem(QMUINavigationButton)"},"Categories/UIBarButtonItem%28QMUINavigationButton%29.html#/c:objc(cs)UIBarButtonItem(cm)qmui_itemWithBoldTitle:target:action:":{"name":"+qmui_itemWithBoldTitle:target:action:","abstract":"<p>Undocumented</p>","parent_name":"UIBarButtonItem(QMUINavigationButton)"},"Categories/UIBarButtonItem%28QMUINavigationButton%29.html#/c:objc(cs)UIBarButtonItem(cm)qmui_backItemWithTitle:target:action:":{"name":"+qmui_backItemWithTitle:target:action:","abstract":"<p>Undocumented</p>","parent_name":"UIBarButtonItem(QMUINavigationButton)"},"Categories/UIBarButtonItem%28QMUINavigationButton%29.html#/c:objc(cs)UIBarButtonItem(cm)qmui_backItemWithTarget:action:":{"name":"+qmui_backItemWithTarget:action:","abstract":"<p>Undocumented</p>","parent_name":"UIBarButtonItem(QMUINavigationButton)"},"Categories/UIBarButtonItem%28QMUINavigationButton%29.html#/c:objc(cs)UIBarButtonItem(cm)qmui_closeItemWithTarget:action:":{"name":"+qmui_closeItemWithTarget:action:","abstract":"<p>Undocumented</p>","parent_name":"UIBarButtonItem(QMUINavigationButton)"},"Categories/UIBarButtonItem%28QMUINavigationButton%29.html#/c:objc(cs)UIBarButtonItem(cm)qmui_fixedSpaceItemWithWidth:":{"name":"+qmui_fixedSpaceItemWithWidth:","abstract":"<p>Undocumented</p>","parent_name":"UIBarButtonItem(QMUINavigationButton)"},"Categories/UIBarButtonItem%28QMUINavigationButton%29.html#/c:objc(cs)UIBarButtonItem(cm)qmui_flexibleSpaceItem":{"name":"+qmui_flexibleSpaceItem","abstract":"<p>Undocumented</p>","parent_name":"UIBarButtonItem(QMUINavigationButton)"},"Categories/UIBarItem%28QMUIBadge%29.html#/c:objc(cs)UIBarItem(py)qmui_badgeInteger":{"name":"qmui_badgeInteger","abstract":"<p>用数字设置未读数，0表示不显示未读数</p>","parent_name":"UIBarItem(QMUIBadge)"},"Categories/UIBarItem%28QMUIBadge%29.html#/c:objc(cs)UIBarItem(py)qmui_badgeString":{"name":"qmui_badgeString","abstract":"<p>用字符串设置未读数，nil 表示不显示未读数</p>","parent_name":"UIBarItem(QMUIBadge)"},"Categories/UIBarItem%28QMUIBadge%29.html#/c:objc(cs)UIBarItem(py)qmui_badgeBackgroundColor":{"name":"qmui_badgeBackgroundColor","abstract":"<p>Undocumented</p>","parent_name":"UIBarItem(QMUIBadge)"},"Categories/UIBarItem%28QMUIBadge%29.html#/c:objc(cs)UIBarItem(py)qmui_badgeTextColor":{"name":"qmui_badgeTextColor","abstract":"<p>Undocumented</p>","parent_name":"UIBarItem(QMUIBadge)"},"Categories/UIBarItem%28QMUIBadge%29.html#/c:objc(cs)UIBarItem(py)qmui_badgeFont":{"name":"qmui_badgeFont","abstract":"<p>Undocumented</p>","parent_name":"UIBarItem(QMUIBadge)"},"Categories/UIBarItem%28QMUIBadge%29.html#/c:objc(cs)UIBarItem(py)qmui_badgeContentEdgeInsets":{"name":"qmui_badgeContentEdgeInsets","abstract":"<p>未读数字与圆圈之间的 padding，会影响最终 badge 的大小。当只有一位数字时，会取宽/高中最大的值作为最终的宽高，以保证整个 badge 是正圆。</p>","parent_name":"UIBarItem(QMUIBadge)"},"Categories/UIBarItem%28QMUIBadge%29.html#/c:objc(cs)UIBarItem(py)qmui_badgeCenterOffset":{"name":"qmui_badgeCenterOffset","abstract":"<p>默认 badge 的布局处于 item 正中心，而通过这个属性可以调整 badge 相对于默认原点的偏移，x 正值表示向右，y 正值表示向下。","parent_name":"UIBarItem(QMUIBadge)"},"Categories/UIBarItem%28QMUIBadge%29.html#/c:objc(cs)UIBarItem(py)qmui_badgeCenterOffsetLandscape":{"name":"qmui_badgeCenterOffsetLandscape","abstract":"<p>默认 badge 的布局处于 item 正中心，而通过这个属性可以调整横屏模式下 badge 相对于默认原点的偏移，x 正值表示向右，y 正值表示向下。","parent_name":"UIBarItem(QMUIBadge)"},"Categories/UIBarItem%28QMUIBadge%29.html#/c:objc(cs)UIBarItem(py)qmui_badgeLabel":{"name":"qmui_badgeLabel","abstract":"<p>Undocumented</p>","parent_name":"UIBarItem(QMUIBadge)"},"Categories/UIBarItem%28QMUIBadge%29.html#/c:objc(cs)UIBarItem(py)qmui_shouldShowUpdatesIndicator":{"name":"qmui_shouldShowUpdatesIndicator","abstract":"<p>控制红点的显隐</p>","parent_name":"UIBarItem(QMUIBadge)"},"Categories/UIBarItem%28QMUIBadge%29.html#/c:objc(cs)UIBarItem(py)qmui_updatesIndicatorColor":{"name":"qmui_updatesIndicatorColor","abstract":"<p>Undocumented</p>","parent_name":"UIBarItem(QMUIBadge)"},"Categories/UIBarItem%28QMUIBadge%29.html#/c:objc(cs)UIBarItem(py)qmui_updatesIndicatorSize":{"name":"qmui_updatesIndicatorSize","abstract":"<p>Undocumented</p>","parent_name":"UIBarItem(QMUIBadge)"},"Categories/UIBarItem%28QMUIBadge%29.html#/c:objc(cs)UIBarItem(py)qmui_updatesIndicatorCenterOffset":{"name":"qmui_updatesIndicatorCenterOffset","abstract":"<p>默认红点的布局处于 item 正中心，而通过这个属性可以调整红点相对于默认原点的偏移，x 正值表示向右，y 正值表示向下。","parent_name":"UIBarItem(QMUIBadge)"},"Categories/UIBarItem%28QMUIBadge%29.html#/c:objc(cs)UIBarItem(py)qmui_updatesIndicatorCenterOffsetLandscape":{"name":"qmui_updatesIndicatorCenterOffsetLandscape","abstract":"<p>默认红点的布局处于 item 正中心，而通过这个属性可以调整横屏模式下红点相对于默认原点的偏移，x 正值表示向右，y 正值表示向下。","parent_name":"UIBarItem(QMUIBadge)"},"Categories/UIBarItem%28QMUIBadge%29.html#/c:objc(cs)UIBarItem(py)qmui_updatesIndicatorView":{"name":"qmui_updatesIndicatorView","abstract":"<p>Undocumented</p>","parent_name":"UIBarItem(QMUIBadge)"},"Categories/NSObject%28QMUIMultipleDelegates%29.html#/c:objc(cs)NSObject(py)qmui_multipleDelegatesEnabled":{"name":"qmui_multipleDelegatesEnabled","abstract":"<p>当你需要当前的 class 支持多个 delegate，请将此属性置为 YES。默认为 NO。</p>","parent_name":"NSObject(QMUIMultipleDelegates)"},"Categories/NSObject%28QMUIMultipleDelegates%29.html#/c:objc(cs)NSObject(im)qmui_registerDelegateSelector:":{"name":"-qmui_registerDelegateSelector:","abstract":"<p>让某个 delegate 属性也支持多 delegate 模式（默认只帮你加了 @selector(delegate) 的支持，如果有其他命名的 property 就需要自己用这个方法添加）</p>","parent_name":"NSObject(QMUIMultipleDelegates)"},"Categories/NSObject%28QMUIMultipleDelegates%29.html#/c:objc(cs)NSObject(im)qmui_removeDelegate:":{"name":"-qmui_removeDelegate:","abstract":"<p>移除某个特定的 delegate 对象，例如假设你把 delegate 同时赋值给 objA 和 objB，而你只要移除 objB，则可：[self qmui_removeDelegate:objB]。但如果你想同时移除 objA 和 objB（也即全部 delegate），则像往常一样直接 self.delegate = nil 即可。</p>","parent_name":"NSObject(QMUIMultipleDelegates)"},"Categories/UINavigationBar%28Transition%29.html#/c:objc(cs)UINavigationBar(py)transitionNavigationBar":{"name":"transitionNavigationBar","abstract":"<p>用来模仿真的navBar，配合 UINavigationController+NavigationBarTransition 在转场过程中存在的一条假navBar</p>","parent_name":"UINavigationBar(Transition)"},"Categories/CAAnimation%28QMUI%29.html#/c:objc(cs)CAAnimation(py)qmui_animationDidStartBlock":{"name":"qmui_animationDidStartBlock","abstract":"<p>Undocumented</p>","parent_name":"CAAnimation(QMUI)"},"Categories/CAAnimation%28QMUI%29.html#/c:objc(cs)CAAnimation(py)qmui_animationDidStopBlock":{"name":"qmui_animationDidStopBlock","abstract":"<p>Undocumented</p>","parent_name":"CAAnimation(QMUI)"},"Categories/UIView%28QMUITheme_Private%29.html#/c:objc(cs)UIView(im)_qmui_themeDidChangeByManager:identifier:theme:shouldEnumeratorSubviews:":{"name":"-_qmui_themeDidChangeByManager:identifier:theme:shouldEnumeratorSubviews:","abstract":"<p>Undocumented</p>","parent_name":"UIView(QMUITheme_Private)"},"Categories/UIView%28QMUITheme_Private%29.html#/c:objc(cs)UIView(py)qmuiTheme_backgroundColor":{"name":"qmuiTheme_backgroundColor","abstract":"<p>Undocumented</p>","parent_name":"UIView(QMUITheme_Private)"},"Categories/UIView%28QMUITheme_Private%29.html#/c:objc(cs)UIView(py)qmuiTheme_themeColorProperties":{"name":"qmuiTheme_themeColorProperties","abstract":"<p>记录当前 view 总共有哪些 property 需要在 theme 变化时重新设置</p>","parent_name":"UIView(QMUITheme_Private)"},"Categories/UIView%28QMUITheme_Private%29.html#/c:objc(cs)UIView(im)_qmui_visible":{"name":"-_qmui_visible","abstract":"<p>Undocumented</p>","parent_name":"UIView(QMUITheme_Private)"},"Categories/UIViewController%28QMUITheme%29.html#/c:objc(cs)UIViewController(im)qmui_themeDidChangeByManager:identifier:theme:":{"name":"-qmui_themeDidChangeByManager:identifier:theme:","abstract":"<p>当主题变化时这个方法会被调用</p>","parent_name":"UIViewController(QMUITheme)"},"Categories/UIImage%28QMUITheme%29.html#/c:objc(cs)UIImage(cm)qmui_imageWithThemeProvider:":{"name":"+qmui_imageWithThemeProvider:","abstract":"<p>生成一个动态的 image 对象，每次使用该图片时都会动态根据当前的 QMUIThemeManager 主题返回对应的图片。</p>","parent_name":"UIImage(QMUITheme)"},"Categories/UIImage%28QMUITheme%29.html#/c:objc(cs)UIImage(cm)qmui_imageWithThemeManagerName:provider:":{"name":"+qmui_imageWithThemeManagerName:provider:","abstract":"<p>生成一个动态的 image 对象，每次使用该图片时都会动态根据当前的 QMUIThemeManager name 和主题返回对应的图片。</p>","parent_name":"UIImage(QMUITheme)"},"Categories/UIView%28QMUITheme%29.html#/c:objc(cs)UIView(im)qmui_registerThemeColorProperties:":{"name":"-qmui_registerThemeColorProperties:","abstract":"<p>注册当前 view 里需要在主题变化时被重新设置的 property，当主题变化时，会通过 qmui_themeDidChangeByManager:identifier:theme: 来重新调用一次 self.xxx = xxx，以达到刷新界面的目的。</p>","parent_name":"UIView(QMUITheme)"},"Categories/UIView%28QMUITheme%29.html#/c:objc(cs)UIView(im)qmui_unregisterThemeColorProperties:":{"name":"-qmui_unregisterThemeColorProperties:","abstract":"<p>注销通过 qmui_registerThemeColorProperties: 注册的 property</p>","parent_name":"UIView(QMUITheme)"},"Categories/UIView%28QMUITheme%29.html#/c:objc(cs)UIView(im)qmui_themeDidChangeByManager:identifier:theme:":{"name":"-qmui_themeDidChangeByManager:identifier:theme:","abstract":"<p>当主题变化时这个方法会被调用，通过 registerThemeColorProperties: 方法注册的属性也会在这里被更新（所以记得要调用 super）。registerThemeColorProperties: 无法满足的需求可以重写这个方法自行实现。</p>","parent_name":"UIView(QMUITheme)"},"Categories/UIView%28QMUITheme%29.html#/c:objc(cs)UIView(py)qmui_themeDidChangeBlock":{"name":"qmui_themeDidChangeBlock","abstract":"<p>Undocumented</p>","parent_name":"UIView(QMUITheme)"},"Categories/UIVisualEffect%28QMUITheme%29.html#/c:objc(cs)UIVisualEffect(cm)qmui_effectWithThemeProvider:":{"name":"+qmui_effectWithThemeProvider:","abstract":"<p>生成一个动态的 UIVisualEffect 对象，每次使用该对象时都会动态根据当前的 QMUIThemeManager 主题返回对应的 effect。</p>","parent_name":"UIVisualEffect(QMUITheme)"},"Categories/UIVisualEffect%28QMUITheme%29.html#/c:objc(cs)UIVisualEffect(cm)qmui_effectWithThemeManagerName:provider:":{"name":"+qmui_effectWithThemeManagerName:provider:","abstract":"<p>生成一个动态的 UIVisualEffect 对象，每次使用该对象时都会动态根据当前的 QMUIThemeManager  name 和主题返回对应的 effect。</p>","parent_name":"UIVisualEffect(QMUITheme)"},"Categories/UIColor%28QMUITheme%29.html#/c:objc(cs)UIColor(cm)qmui_colorWithThemeProvider:":{"name":"+qmui_colorWithThemeProvider:","abstract":"<p>生成一个动态的 color 对象，每次使用该颜色时都会动态根据当前的 QMUIThemeManager 主题返回对应的颜色。</p>","parent_name":"UIColor(QMUITheme)"},"Categories/UIColor%28QMUITheme%29.html#/c:objc(cs)UIColor(cm)qmui_colorWithThemeManagerName:provider:":{"name":"+qmui_colorWithThemeManagerName:provider:","abstract":"<p>生成一个动态的 color 对象，每次使用该颜色时都会动态根据当前的 QMUIThemeManager name 和主题返回对应的颜色。</p>","parent_name":"UIColor(QMUITheme)"},"Categories/PHPhotoLibrary%28QMUI%29.html#/c:objc(cs)PHPhotoLibrary(cm)createFetchOptionsWithAlbumContentType:":{"name":"+createFetchOptionsWithAlbumContentType:","abstract":"<p>根据 contentType 的值产生一个合适的 PHFetchOptions，并把内容以资源创建日期排序，创建日期较新的资源排在前面</p>","parent_name":"PHPhotoLibrary(QMUI)"},"Categories/PHPhotoLibrary%28QMUI%29.html#/c:objc(cs)PHPhotoLibrary(cm)fetchAllAlbumsWithAlbumContentType:showEmptyAlbum:showSmartAlbum:":{"name":"+fetchAllAlbumsWithAlbumContentType:showEmptyAlbum:showSmartAlbum:","abstract":"<p>获取所有相册</p>","parent_name":"PHPhotoLibrary(QMUI)"},"Categories/PHPhotoLibrary%28QMUI%29.html#/c:objc(cs)PHPhotoLibrary(cm)fetchLatestAssetWithAssetCollection:":{"name":"+fetchLatestAssetWithAssetCollection:","abstract":"<p>获取一个 PHAssetCollection 中创建日期最新的资源</p>","parent_name":"PHPhotoLibrary(QMUI)"},"Categories/PHPhotoLibrary%28QMUI%29.html#/c:objc(cs)PHPhotoLibrary(im)addImageToAlbum:albumAssetCollection:orientation:completionHandler:":{"name":"-addImageToAlbum:albumAssetCollection:orientation:completionHandler:","abstract":"<p>保存图片或视频到指定的相册</p>","parent_name":"PHPhotoLibrary(QMUI)"},"Categories/PHPhotoLibrary%28QMUI%29.html#/c:objc(cs)PHPhotoLibrary(im)addImageToAlbum:albumAssetCollection:completionHandler:":{"name":"-addImageToAlbum:albumAssetCollection:completionHandler:","abstract":"<p>Undocumented</p>","parent_name":"PHPhotoLibrary(QMUI)"},"Categories/PHPhotoLibrary%28QMUI%29.html#/c:objc(cs)PHPhotoLibrary(im)addVideoToAlbum:albumAssetCollection:completionHandler:":{"name":"-addVideoToAlbum:albumAssetCollection:completionHandler:","abstract":"<p>Undocumented</p>","parent_name":"PHPhotoLibrary(QMUI)"},"Categories/UICollectionView%28QMUICellSizeKeyCache%29.html#/c:objc(cs)UICollectionView(py)qmui_cacheCellSizeByKeyAutomatically":{"name":"qmui_cacheCellSizeByKeyAutomatically","abstract":"<p>控制是否要自动缓存 cell 的高度，默认为 NO</p>","parent_name":"UICollectionView(QMUICellSizeKeyCache)"},"Categories/UICollectionView%28QMUICellSizeKeyCache%29.html#/c:objc(cs)UICollectionView(py)qmui_currentCellSizeKeyCache":{"name":"qmui_currentCellSizeKeyCache","abstract":"<p>获取当前的缓存容器。tableView 的宽度和 contentInset 发生变化时，这个数组也会跟着变，但当 tableView 宽度小于 0 时会返回 nil。</p>","parent_name":"UICollectionView(QMUICellSizeKeyCache)"},"Categories/NSObject%28QMUIWindowSizeMonitor%29.html#/c:objc(cs)NSObject(im)qmui_addSizeObserverForMainWindow:":{"name":"-qmui_addSizeObserverForMainWindow:","abstract":"<p>为当前对象添加主窗口 (UIApplication Delegate Window)的大小变化的监听，同一对象可重复添加多个监听，当对象销毁时监听自动失效。</p>","parent_name":"NSObject(QMUIWindowSizeMonitor)"},"Categories/NSObject%28QMUIWindowSizeMonitor%29.html#/c:objc(cs)NSObject(im)qmui_addSizeObserverForWindow:handler:":{"name":"-qmui_addSizeObserverForWindow:handler:","abstract":"<p>为当前对象添加指定窗口的大小变化监听，同一对象可重复添加多个监听，当对象销毁时监听自动失效。</p>","parent_name":"NSObject(QMUIWindowSizeMonitor)"},"Categories/UITableView%28QMUICellHeightKeyCache%29.html#/c:objc(cs)UITableView(py)qmui_cacheCellHeightByKeyAutomatically":{"name":"qmui_cacheCellHeightByKeyAutomatically","abstract":"<p>控制是否要自动缓存 cell 的高度，默认为 NO</p>","parent_name":"UITableView(QMUICellHeightKeyCache)"},"Categories/UITableView%28QMUICellHeightKeyCache%29.html#/c:objc(cs)UITableView(py)qmui_currentCellHeightKeyCache":{"name":"qmui_currentCellHeightKeyCache","abstract":"<p>获取当前的缓存容器。tableView 的宽度和 contentInset 发生变化时，这个数组也会跟着变，但当 tableView 宽度小于 0 时会返回 nil。</p>","parent_name":"UITableView(QMUICellHeightKeyCache)"},"Categories/UITableView%28QMUICellHeightKeyCache%29.html#/c:objc(cs)UITableView(im)qmui_invalidateCellHeightCachedForKey:":{"name":"-qmui_invalidateCellHeightCachedForKey:","abstract":"<p>搭配 QMUICellHeightKeyCache，清除某个指定 key 的缓存，注意不要直接调用 self.qmui_currentCellHeightKeyCache.invalidateHeightForKey，因为一个 UITableView 里会包含多个 QMUICellHeightKeyCache，那样写只能刷新当前的 QMUICellHeightKeyCache，其他宽度下的 QMUICellHeightKeyCache 无法刷新。</p>","parent_name":"UITableView(QMUICellHeightKeyCache)"},"Categories/UITableView%28QMUICellHeightKeyCache%29.html#/c:objc(cs)UITableView(im)qmui_invalidateAllCellHeightKeyCache":{"name":"-qmui_invalidateAllCellHeightKeyCache","abstract":"<p>搭配 QMUICellHeightKeyCache，清除所有状态下的缓存</p>","parent_name":"UITableView(QMUICellHeightKeyCache)"},"Categories/UIViewController%28QMUIModalPresentationViewController%29.html#/c:objc(cs)UIViewController(py)qmui_modalPresentationViewController":{"name":"qmui_modalPresentationViewController","abstract":"<p>获取弹出当前 vieController 的 QMUIModalPresentationViewController</p>","parent_name":"UIViewController(QMUIModalPresentationViewController)"},"Categories/UITableView%28QMUI_StaticCell%29.html#/c:objc(cs)UITableView(py)qmui_staticCellDataSource":{"name":"qmui_staticCellDataSource","abstract":"<p>Undocumented</p>","parent_name":"UITableView(QMUI_StaticCell)"},"Categories/UITableView%28QMUI_StaticCell%29.html":{"name":"UITableView(QMUI_StaticCell)","abstract":"<p>配合 QMUIStaticTableViewCellDataSource 使用，主要负责：</p>"},"Categories/UIViewController%28QMUIModalPresentationViewController%29.html":{"name":"UIViewController(QMUIModalPresentationViewController)","abstract":"<p>Undocumented</p>"},"Categories/UITableView%28QMUICellHeightKeyCache%29.html":{"name":"UITableView(QMUICellHeightKeyCache)","abstract":"<p>自动缓存 self-sizing cell 的高度，避免重复计算。使用方法：</p>"},"Categories/NSObject%28QMUIWindowSizeMonitor%29.html":{"name":"NSObject(QMUIWindowSizeMonitor)","abstract":"<p>Undocumented</p>"},"Categories/UICollectionView%28QMUICellSizeKeyCache%29.html":{"name":"UICollectionView(QMUICellSizeKeyCache)","abstract":"<p>注意，这个类的功能暂无法使用</p>"},"Categories/PHPhotoLibrary%28QMUI%29.html":{"name":"PHPhotoLibrary(QMUI)","abstract":"<p>Undocumented</p>"},"Categories/UIColor%28QMUITheme%29.html":{"name":"UIColor(QMUITheme)","abstract":"<p>Undocumented</p>"},"Categories/UIVisualEffect%28QMUITheme%29.html":{"name":"UIVisualEffect(QMUITheme)","abstract":"<p>Undocumented</p>"},"Categories/UIView%28QMUITheme%29.html":{"name":"UIView(QMUITheme)","abstract":"<p>Undocumented</p>"},"Categories/UIImage%28QMUITheme%29.html":{"name":"UIImage(QMUITheme)","abstract":"<p>Undocumented</p>"},"Categories/UIViewController%28QMUITheme%29.html":{"name":"UIViewController(QMUITheme)","abstract":"<p>Undocumented</p>"},"Categories/UIView%28QMUITheme_Private%29.html":{"name":"UIView(QMUITheme_Private)","abstract":"<p>Undocumented</p>"},"Categories/CAAnimation%28QMUI%29.html":{"name":"CAAnimation(QMUI)","abstract":"<p>Undocumented</p>"},"Categories/UINavigationBar%28Transition%29.html":{"name":"UINavigationBar(Transition)","abstract":"<p>Undocumented</p>"},"Categories/NSObject%28QMUIMultipleDelegates%29.html":{"name":"NSObject(QMUIMultipleDelegates)","abstract":"<p>让所有 NSObject 都支持多个 delegate，默认只支持属性名为 delegate 的 delegate（特别地，UITableView 和 UICollectionView 额外默认支持 dataSource）。"},"Categories/UIBarItem%28QMUIBadge%29.html":{"name":"UIBarItem(QMUIBadge)","abstract":"<p>用于在 UIBarButtonItem（通常用于 UINavigationBar 和 UIToolbar）和 UITabBarItem 上显示未读红点或者未读数。对设置的时机没有要求。所有属性在 QMUIConfigurationTemplate 配置表里均提供对应的默认值设置，如果你不使用配置表，则所有属性的默认值均为 0。</p>"},"Categories/UIBarButtonItem%28QMUINavigationButton%29.html":{"name":"UIBarButtonItem(QMUINavigationButton)","abstract":"<p>Undocumented</p>"},"Categories/UITableView%28QMUILayoutCell%29.html":{"name":"UITableView(QMUILayoutCell)","abstract":"<p>UITableView 定义了一套动态计算 cell 高度的方式：</p>"},"Categories/UITableView%28QMUIKeyedHeightCache%29.html":{"name":"UITableView(QMUIKeyedHeightCache)","abstract":"<p>Undocumented</p>"},"Categories/UITableView%28QMUICellHeightIndexPathCache%29.html":{"name":"UITableView(QMUICellHeightIndexPathCache)","abstract":"<p>Undocumented</p>"},"Categories/UITableView%28QMUIIndexPathHeightCacheInvalidation%29.html":{"name":"UITableView(QMUIIndexPathHeightCacheInvalidation)","abstract":"<p>Undocumented</p>"},"Categories/UICollectionView%28QMUIKeyedHeightCache%29.html":{"name":"UICollectionView(QMUIKeyedHeightCache)","abstract":"<p>UICollectionView 定义了一套动态计算 cell 高度的方式。"},"Categories/UICollectionView%28QMUICellHeightIndexPathCache%29.html":{"name":"UICollectionView(QMUICellHeightIndexPathCache)","abstract":"<p>Undocumented</p>"},"Categories/UICollectionView%28QMUIIndexPathHeightCacheInvalidation%29.html":{"name":"UICollectionView(QMUIIndexPathHeightCacheInvalidation)","abstract":"<p>Undocumented</p>"},"Categories/UICollectionView%28QMUILayoutCell%29.html":{"name":"UICollectionView(QMUILayoutCell)","abstract":"<p>以下接口可在“sizeForItemAtIndexPath”里面调用来计算高度"},"Categories/UIResponder%28KeyboardManager%29.html":{"name":"UIResponder(KeyboardManager)","abstract":"<p>Undocumented</p>"},"Categories/UITextField%28QMUI_KeyboardManager%29.html":{"name":"UITextField(QMUI_KeyboardManager)","abstract":"<p>Undocumented</p>"},"Categories/UITextView%28QMUI_KeyboardManager%29.html":{"name":"UITextView(QMUI_KeyboardManager)","abstract":"<p>Undocumented</p>"},"Categories/CALayer%28QMUIViewAnimation%29.html":{"name":"CALayer(QMUIViewAnimation)","abstract":"<p>Undocumented</p>"},"Categories/NSObject%28QMUIAppearnace%29.html":{"name":"NSObject(QMUIAppearnace)","abstract":"<p>Undocumented</p>"},"Categories.html":{"name":"Categories","abstract":"<p>The following categories are available globally.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Constants.html":{"name":"Constants","abstract":"<p>The following constants are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Type%20Definitions.html":{"name":"Type Definitions","abstract":"<p>The following type definitions are available globally.</p>"},"Functions.html":{"name":"Functions","abstract":"<p>The following functions are available globally.</p>"}}